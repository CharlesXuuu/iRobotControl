digraph G {
	rankdir="LR";
	concentrate="true";
	"<PyiModuleGraph>" [label="<PyiModuleGraph>"];
	"MacOS" [shape="record",label="<f0> MissingModule| <f1> MacOS"];
	"macresource" [shape="record",label="<f0> MissingModule| <f1> macresource"];
	"zipimport" [shape="record",label="<f0> BuiltinModule| <f1> zipimport"];
	"zipimport.zipimporter" [shape="record",label="<f0> MissingModule| <f1> zipimport.zipimporter"];
	"zlib" [shape="record",label="<f0> BuiltinModule| <f1> zlib"];
	"_ssl" [shape="record",label="<f0> Extension| <f1> _ssl"];
	"_ssl.SSL_ERROR_EOF" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_EOF"];
	"_ssl.SSL_ERROR_WANT_READ" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_WANT_READ"];
	"_ssl.SSL_ERROR_WANT_CONNECT" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_WANT_CONNECT"];
	"_ssl.SSL_ERROR_ZERO_RETURN" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_ZERO_RETURN"];
	"_ssl.SSL_ERROR_WANT_X509_LOOKUP" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_WANT_X509_LOOKUP"];
	"_ssl.SSL_ERROR_SSL" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_SSL"];
	"_ssl.SSL_ERROR_INVALID_ERROR_CODE" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_INVALID_ERROR_CODE"];
	"_ssl.SSL_ERROR_WANT_WRITE" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_WANT_WRITE"];
	"_ssl.SSL_ERROR_SYSCALL" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_SYSCALL"];
	"_ssl.enum_crls" [shape="record",label="<f0> MissingModule| <f1> _ssl.enum_crls"];
	"_ssl.enum_certificates" [shape="record",label="<f0> MissingModule| <f1> _ssl.enum_certificates"];
	"_ssl._OPENSSL_API_VERSION" [shape="record",label="<f0> MissingModule| <f1> _ssl._OPENSSL_API_VERSION"];
	"_ssl.HAS_ECDH" [shape="record",label="<f0> MissingModule| <f1> _ssl.HAS_ECDH"];
	"_ssl.HAS_ALPN" [shape="record",label="<f0> MissingModule| <f1> _ssl.HAS_ALPN"];
	"_ssl.HAS_NPN" [shape="record",label="<f0> MissingModule| <f1> _ssl.HAS_NPN"];
	"_ssl.HAS_SNI" [shape="record",label="<f0> MissingModule| <f1> _ssl.HAS_SNI"];
	"_ssl.RAND_egd" [shape="record",label="<f0> MissingModule| <f1> _ssl.RAND_egd"];
	"_ssl.RAND_status" [shape="record",label="<f0> MissingModule| <f1> _ssl.RAND_status"];
	"_ssl.RAND_add" [shape="record",label="<f0> MissingModule| <f1> _ssl.RAND_add"];
	"_ssl.txt2obj" [shape="record",label="<f0> MissingModule| <f1> _ssl.txt2obj"];
	"_ssl.nid2obj" [shape="record",label="<f0> MissingModule| <f1> _ssl.nid2obj"];
	"_ssl.CERT_REQUIRED" [shape="record",label="<f0> MissingModule| <f1> _ssl.CERT_REQUIRED"];
	"_ssl.CERT_NONE" [shape="record",label="<f0> MissingModule| <f1> _ssl.CERT_NONE"];
	"_ssl.CERT_OPTIONAL" [shape="record",label="<f0> MissingModule| <f1> _ssl.CERT_OPTIONAL"];
	"_ssl.SSLEOFError" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSLEOFError"];
	"_ssl.SSLWantReadError" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSLWantReadError"];
	"_ssl.SSLError" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSLError"];
	"_ssl.SSLWantWriteError" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSLWantWriteError"];
	"_ssl.SSLSyscallError" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSLSyscallError"];
	"_ssl.SSLZeroReturnError" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSLZeroReturnError"];
	"_ssl._SSLContext" [shape="record",label="<f0> MissingModule| <f1> _ssl._SSLContext"];
	"_ssl.OPENSSL_VERSION_NUMBER" [shape="record",label="<f0> MissingModule| <f1> _ssl.OPENSSL_VERSION_NUMBER"];
	"_ssl.OPENSSL_VERSION_INFO" [shape="record",label="<f0> MissingModule| <f1> _ssl.OPENSSL_VERSION_INFO"];
	"_ssl.OPENSSL_VERSION" [shape="record",label="<f0> MissingModule| <f1> _ssl.OPENSSL_VERSION"];
	"socket" [shape="record",label="<f0> SourceModule| <f1> socket"];
	"errno" [shape="record",label="<f0> BuiltinModule| <f1> errno"];
	"errno.EHOSTUNREACH" [shape="record",label="<f0> MissingModule| <f1> errno.EHOSTUNREACH"];
	"errno.ECONNREFUSED" [shape="record",label="<f0> MissingModule| <f1> errno.ECONNREFUSED"];
	"errno.EINVAL" [shape="record",label="<f0> MissingModule| <f1> errno.EINVAL"];
	"errno.ENOENT" [shape="record",label="<f0> MissingModule| <f1> errno.ENOENT"];
	"StringIO" [shape="record",label="<f0> SourceModule| <f1> StringIO"];
	"cStringIO.StringIO" [shape="record",label="<f0> MissingModule| <f1> cStringIO.StringIO"];
	"warnings" [shape="record",label="<f0> SourceModule| <f1> warnings"];
	"_warnings.warn_explicit" [shape="record",label="<f0> MissingModule| <f1> _warnings.warn_explicit"];
	"_warnings.filters" [shape="record",label="<f0> MissingModule| <f1> _warnings.filters"];
	"_warnings.once_registry" [shape="record",label="<f0> MissingModule| <f1> _warnings.once_registry"];
	"_warnings.default_action" [shape="record",label="<f0> MissingModule| <f1> _warnings.default_action"];
	"_warnings.warn" [shape="record",label="<f0> MissingModule| <f1> _warnings.warn"];
	"_warnings" [shape="record",label="<f0> BuiltinModule| <f1> _warnings"];
	"re" [shape="record",label="<f0> SourceModule| <f1> re"];
	"sre_constants" [shape="record",label="<f0> SourceModule| <f1> sre_constants"];
	"_sre.MAXREPEAT" [shape="record",label="<f0> MissingModule| <f1> _sre.MAXREPEAT"];
	"copy_reg" [shape="record",label="<f0> SourceModule| <f1> copy_reg"];
	"_locale" [shape="record",label="<f0> BuiltinModule| <f1> _locale"];
	"sre_parse" [shape="record",label="<f0> SourceModule| <f1> sre_parse"];
	"sre_compile" [shape="record",label="<f0> SourceModule| <f1> sre_compile"];
	"array" [shape="record",label="<f0> BuiltinModule| <f1> array"];
	"array.array" [shape="record",label="<f0> MissingModule| <f1> array.array"];
	"re._compile" [shape="record",label="<f0> MissingModule| <f1> re._compile"];
	"re.__all__" [shape="record",label="<f0> MissingModule| <f1> re.__all__"];
	"linecache" [shape="record",label="<f0> SourceModule| <f1> linecache"];
	"sys" [shape="record",label="<f0> BuiltinModule| <f1> sys"];
	"sys.version_info" [shape="record",label="<f0> MissingModule| <f1> sys.version_info"];
	"sys.py3kwarning" [shape="record",label="<f0> MissingModule| <f1> sys.py3kwarning"];
	"sys.getwindowsversion" [shape="record",label="<f0> MissingModule| <f1> sys.getwindowsversion"];
	"os" [shape="record",label="<f0> SourceModule| <f1> os"];
	"os.open" [shape="record",label="<f0> MissingModule| <f1> os.open"];
	"os.mkdir" [shape="record",label="<f0> MissingModule| <f1> os.mkdir"];
	"os.unlink" [shape="record",label="<f0> MissingModule| <f1> os.unlink"];
	"os.rename" [shape="record",label="<f0> MissingModule| <f1> os.rename"];
	"os.utime" [shape="record",label="<f0> MissingModule| <f1> os.utime"];
	"subprocess" [shape="record",label="<f0> SourceModule| <f1> subprocess"];
	"_subprocess.STD_OUTPUT_HANDLE" [shape="record",label="<f0> MissingModule| <f1> _subprocess.STD_OUTPUT_HANDLE"];
	"_subprocess.CREATE_NEW_PROCESS_GROUP" [shape="record",label="<f0> MissingModule| <f1> _subprocess.CREATE_NEW_PROCESS_GROUP"];
	"_subprocess.STD_INPUT_HANDLE" [shape="record",label="<f0> MissingModule| <f1> _subprocess.STD_INPUT_HANDLE"];
	"_subprocess.STARTF_USESHOWWINDOW" [shape="record",label="<f0> MissingModule| <f1> _subprocess.STARTF_USESHOWWINDOW"];
	"_subprocess.CREATE_NEW_CONSOLE" [shape="record",label="<f0> MissingModule| <f1> _subprocess.CREATE_NEW_CONSOLE"];
	"_subprocess.STD_ERROR_HANDLE" [shape="record",label="<f0> MissingModule| <f1> _subprocess.STD_ERROR_HANDLE"];
	"_subprocess.STARTF_USESTDHANDLES" [shape="record",label="<f0> MissingModule| <f1> _subprocess.STARTF_USESTDHANDLES"];
	"_subprocess.SW_HIDE" [shape="record",label="<f0> MissingModule| <f1> _subprocess.SW_HIDE"];
	"pickle" [shape="record",label="<f0> SourceModule| <f1> pickle"];
	"doctest" [shape="record",label="<f0> SourceModule| <f1> doctest"];
	"collections.namedtuple" [shape="record",label="<f0> MissingModule| <f1> collections.namedtuple"];
	"collections" [shape="record",label="<f0> SourceModule| <f1> collections"];
	"collections.MutableMapping" [shape="record",label="<f0> MissingModule| <f1> collections.MutableMapping"];
	"cPickle.loads" [shape="record",label="<f0> MissingModule| <f1> cPickle.loads"];
	"cPickle.dumps" [shape="record",label="<f0> MissingModule| <f1> cPickle.dumps"];
	"dummy_thread" [shape="record",label="<f0> SourceModule| <f1> dummy_thread"];
	"thread.get_ident" [shape="record",label="<f0> MissingModule| <f1> thread.get_ident"];
	"thread" [shape="record",label="<f0> BuiltinModule| <f1> thread"];
	"thread._local" [shape="record",label="<f0> MissingModule| <f1> thread._local"];
	"thread.stack_size" [shape="record",label="<f0> MissingModule| <f1> thread.stack_size"];
	"thread.allocate_lock" [shape="record",label="<f0> MissingModule| <f1> thread.allocate_lock"];
	"itertools.imap" [shape="record",label="<f0> MissingModule| <f1> itertools.imap"];
	"itertools.chain" [shape="record",label="<f0> MissingModule| <f1> itertools.chain"];
	"itertools.starmap" [shape="record",label="<f0> MissingModule| <f1> itertools.starmap"];
	"itertools.repeat" [shape="record",label="<f0> MissingModule| <f1> itertools.repeat"];
	"itertools" [shape="record",label="<f0> BuiltinModule| <f1> itertools"];
	"itertools.tee" [shape="record",label="<f0> MissingModule| <f1> itertools.tee"];
	"itertools.izip" [shape="record",label="<f0> MissingModule| <f1> itertools.izip"];
	"itertools.count" [shape="record",label="<f0> MissingModule| <f1> itertools.count"];
	"itertools.islice" [shape="record",label="<f0> MissingModule| <f1> itertools.islice"];
	"heapq" [shape="record",label="<f0> SourceModule| <f1> heapq"];
	"_heapq" [shape="record",label="<f0> BuiltinModule| <f1> _heapq"];
	"collections.deque" [shape="record",label="<f0> MissingModule| <f1> collections.deque"];
	"collections.OrderedDict" [shape="record",label="<f0> MissingModule| <f1> collections.OrderedDict"];
	"keyword" [shape="record",label="<f0> SourceModule| <f1> keyword"];
	"operator.itemgetter" [shape="record",label="<f0> MissingModule| <f1> operator.itemgetter"];
	"operator.eq" [shape="record",label="<f0> MissingModule| <f1> operator.eq"];
	"operator" [shape="record",label="<f0> BuiltinModule| <f1> operator"];
	"operator.getitem" [shape="record",label="<f0> MissingModule| <f1> operator.getitem"];
	"operator._compare_digest" [shape="record",label="<f0> MissingModule| <f1> operator._compare_digest"];
	"operator.attrgetter" [shape="record",label="<f0> MissingModule| <f1> operator.attrgetter"];
	"_collections.deque" [shape="record",label="<f0> MissingModule| <f1> _collections.deque"];
	"_collections.defaultdict" [shape="record",label="<f0> MissingModule| <f1> _collections.defaultdict"];
	"_collections" [shape="record",label="<f0> BuiltinModule| <f1> _collections"];
	"_abcoll" [shape="record",label="<f0> SourceModule| <f1> _abcoll"];
	"abc" [shape="record",label="<f0> SourceModule| <f1> abc"];
	"_weakrefset" [shape="record",label="<f0> SourceModule| <f1> _weakrefset"];
	"_weakref.ref" [shape="record",label="<f0> MissingModule| <f1> _weakref.ref"];
	"_weakref" [shape="record",label="<f0> BuiltinModule| <f1> _weakref"];
	"_weakref.ReferenceType" [shape="record",label="<f0> MissingModule| <f1> _weakref.ReferenceType"];
	"_weakref.proxy" [shape="record",label="<f0> MissingModule| <f1> _weakref.proxy"];
	"_weakref.getweakrefs" [shape="record",label="<f0> MissingModule| <f1> _weakref.getweakrefs"];
	"_weakref.getweakrefcount" [shape="record",label="<f0> MissingModule| <f1> _weakref.getweakrefcount"];
	"_weakref.CallableProxyType" [shape="record",label="<f0> MissingModule| <f1> _weakref.CallableProxyType"];
	"_weakref.ProxyType" [shape="record",label="<f0> MissingModule| <f1> _weakref.ProxyType"];
	"tempfile" [shape="record",label="<f0> SourceModule| <f1> tempfile"];
	"random" [shape="record",label="<f0> SourceModule| <f1> random"];
	"_random" [shape="record",label="<f0> BuiltinModule| <f1> _random"];
	"hashlib" [shape="record",label="<f0> SourceModule| <f1> hashlib"];
	"hashlib.sha512" [shape="record",label="<f0> MissingModule| <f1> hashlib.sha512"];
	"hashlib.sha256" [shape="record",label="<f0> MissingModule| <f1> hashlib.sha256"];
	"hashlib.sha1" [shape="record",label="<f0> MissingModule| <f1> hashlib.sha1"];
	"hashlib.md5" [shape="record",label="<f0> MissingModule| <f1> hashlib.md5"];
	"_hashlib.pbkdf2_hmac" [shape="record",label="<f0> MissingModule| <f1> _hashlib.pbkdf2_hmac"];
	"logging" [shape="record",label="<f0> Package| <f1> logging"];
	"atexit" [shape="record",label="<f0> SourceModule| <f1> atexit"];
	"weakref" [shape="record",label="<f0> SourceModule| <f1> weakref"];
	"copy.deepcopy" [shape="record",label="<f0> MissingModule| <f1> copy.deepcopy"];
	"copy" [shape="record",label="<f0> SourceModule| <f1> copy"];
	"repr" [shape="record",label="<f0> SourceModule| <f1> repr"];
	"__builtin__" [shape="record",label="<f0> BuiltinModule| <f1> __builtin__"];
	"__builtin__.open" [shape="record",label="<f0> MissingModule| <f1> __builtin__.open"];
	"org.PyStringMap" [shape="record",label="<f0> MissingModule| <f1> org.PyStringMap"];
	"org" [shape="record",label="<f0> MissingModule| <f1> org"];
	"exceptions.ReferenceError" [shape="record",label="<f0> MissingModule| <f1> exceptions.ReferenceError"];
	"exceptions" [shape="record",label="<f0> BuiltinModule| <f1> exceptions"];
	"_hashlib" [shape="record",label="<f0> Extension| <f1> _hashlib"];
	"_sha512" [shape="record",label="<f0> BuiltinModule| <f1> _sha512"];
	"_sha256" [shape="record",label="<f0> BuiltinModule| <f1> _sha256"];
	"_md5" [shape="record",label="<f0> BuiltinModule| <f1> _md5"];
	"_sha" [shape="record",label="<f0> BuiltinModule| <f1> _sha"];
	"binascii.hexlify" [shape="record",label="<f0> MissingModule| <f1> binascii.hexlify"];
	"math.sin" [shape="record",label="<f0> MissingModule| <f1> math.sin"];
	"math.sqrt" [shape="record",label="<f0> MissingModule| <f1> math.sqrt"];
	"math.cos" [shape="record",label="<f0> MissingModule| <f1> math.cos"];
	"math.acos" [shape="record",label="<f0> MissingModule| <f1> math.acos"];
	"math.ceil" [shape="record",label="<f0> MissingModule| <f1> math.ceil"];
	"math.exp" [shape="record",label="<f0> MissingModule| <f1> math.exp"];
	"math.log" [shape="record",label="<f0> MissingModule| <f1> math.log"];
	"math.e" [shape="record",label="<f0> MissingModule| <f1> math.e"];
	"math.pi" [shape="record",label="<f0> MissingModule| <f1> math.pi"];
	"math" [shape="record",label="<f0> BuiltinModule| <f1> math"];
	"io" [shape="record",label="<f0> SourceModule| <f1> io"];
	"_io.DEFAULT_BUFFER_SIZE" [shape="record",label="<f0> MissingModule| <f1> _io.DEFAULT_BUFFER_SIZE"];
	"_io.BytesIO" [shape="record",label="<f0> MissingModule| <f1> _io.BytesIO"];
	"_io.open" [shape="record",label="<f0> MissingModule| <f1> _io.open"];
	"_io.BufferedWriter" [shape="record",label="<f0> MissingModule| <f1> _io.BufferedWriter"];
	"_io.FileIO" [shape="record",label="<f0> MissingModule| <f1> _io.FileIO"];
	"_io.BlockingIOError" [shape="record",label="<f0> MissingModule| <f1> _io.BlockingIOError"];
	"_io.IncrementalNewlineDecoder" [shape="record",label="<f0> MissingModule| <f1> _io.IncrementalNewlineDecoder"];
	"_io.BufferedReader" [shape="record",label="<f0> MissingModule| <f1> _io.BufferedReader"];
	"_io.BufferedRandom" [shape="record",label="<f0> MissingModule| <f1> _io.BufferedRandom"];
	"_io.StringIO" [shape="record",label="<f0> MissingModule| <f1> _io.StringIO"];
	"_io.BufferedRWPair" [shape="record",label="<f0> MissingModule| <f1> _io.BufferedRWPair"];
	"_io.TextIOWrapper" [shape="record",label="<f0> MissingModule| <f1> _io.TextIOWrapper"];
	"_io.UnsupportedOperation" [shape="record",label="<f0> MissingModule| <f1> _io.UnsupportedOperation"];
	"_io" [shape="record",label="<f0> BuiltinModule| <f1> _io"];
	"pdb" [shape="record",label="<f0> SourceModule| <f1> pdb"];
	"shlex" [shape="record",label="<f0> SourceModule| <f1> shlex"];
	"readline" [shape="record",label="<f0> Extension| <f1> readline"];
	"pprint" [shape="record",label="<f0> SourceModule| <f1> pprint"];
	"bdb" [shape="record",label="<f0> SourceModule| <f1> bdb"];
	"fnmatch" [shape="record",label="<f0> SourceModule| <f1> fnmatch"];
	"cmd" [shape="record",label="<f0> SourceModule| <f1> cmd"];
	"string" [shape="record",label="<f0> SourceModule| <f1> string"];
	"strop.whitespace" [shape="record",label="<f0> MissingModule| <f1> strop.whitespace"];
	"strop.maketrans" [shape="record",label="<f0> MissingModule| <f1> strop.maketrans"];
	"strop.lowercase" [shape="record",label="<f0> MissingModule| <f1> strop.lowercase"];
	"strop.uppercase" [shape="record",label="<f0> MissingModule| <f1> strop.uppercase"];
	"strop" [shape="record",label="<f0> BuiltinModule| <f1> strop"];
	"difflib" [shape="record",label="<f0> SourceModule| <f1> difflib"];
	"unittest" [shape="record",label="<f0> Package| <f1> unittest"];
	"unittest.signals" [shape="record",label="<f0> SourceModule| <f1> unittest.signals"];
	"unittest.main" [shape="record",label="<f0> SourceModule| <f1> unittest.main"];
	"optparse" [shape="record",label="<f0> SourceModule| <f1> optparse"];
	"gettext" [shape="record",label="<f0> SourceModule| <f1> gettext"];
	"tokenize" [shape="record",label="<f0> SourceModule| <f1> tokenize"];
	"token" [shape="record",label="<f0> SourceModule| <f1> token"];
	"locale" [shape="record",label="<f0> SourceModule| <f1> locale"];
	"encodings.aliases" [shape="record",label="<f0> SourceModule| <f1> encodings.aliases"];
	"encodings" [shape="record",label="<f0> Package| <f1> encodings"];
	"encodings.rot_13" [shape="record",label="<f0> SourceModule| <f1> encodings.rot_13"];
	"encodings.mbcs" [shape="record",label="<f0> SourceModule| <f1> encodings.mbcs"];
	"codecs.mbcs_encode" [shape="record",label="<f0> MissingModule| <f1> codecs.mbcs_encode"];
	"codecs.mbcs_decode" [shape="record",label="<f0> MissingModule| <f1> codecs.mbcs_decode"];
	"encodings.raw_unicode_escape" [shape="record",label="<f0> SourceModule| <f1> encodings.raw_unicode_escape"];
	"encodings.gb18030" [shape="record",label="<f0> SourceModule| <f1> encodings.gb18030"];
	"_multibytecodec" [shape="record",label="<f0> Extension| <f1> _multibytecodec"];
	"_codecs_cn" [shape="record",label="<f0> Extension| <f1> _codecs_cn"];
	"encodings.shift_jisx0213" [shape="record",label="<f0> SourceModule| <f1> encodings.shift_jisx0213"];
	"_codecs_jp" [shape="record",label="<f0> Extension| <f1> _codecs_jp"];
	"encodings.ascii" [shape="record",label="<f0> SourceModule| <f1> encodings.ascii"];
	"encodings.cp861" [shape="record",label="<f0> SourceModule| <f1> encodings.cp861"];
	"encodings.cp860" [shape="record",label="<f0> SourceModule| <f1> encodings.cp860"];
	"encodings.cp863" [shape="record",label="<f0> SourceModule| <f1> encodings.cp863"];
	"encodings.shift_jis" [shape="record",label="<f0> SourceModule| <f1> encodings.shift_jis"];
	"encodings.cp865" [shape="record",label="<f0> SourceModule| <f1> encodings.cp865"];
	"encodings.cp864" [shape="record",label="<f0> SourceModule| <f1> encodings.cp864"];
	"encodings.cp866" [shape="record",label="<f0> SourceModule| <f1> encodings.cp866"];
	"encodings.cp869" [shape="record",label="<f0> SourceModule| <f1> encodings.cp869"];
	"encodings.mac_latin2" [shape="record",label="<f0> SourceModule| <f1> encodings.mac_latin2"];
	"encodings.hex_codec" [shape="record",label="<f0> SourceModule| <f1> encodings.hex_codec"];
	"encodings.idna" [shape="record",label="<f0> SourceModule| <f1> encodings.idna"];
	"unicodedata.ucd_3_2_0" [shape="record",label="<f0> MissingModule| <f1> unicodedata.ucd_3_2_0"];
	"unicodedata" [shape="record",label="<f0> BuiltinModule| <f1> unicodedata"];
	"stringprep" [shape="record",label="<f0> SourceModule| <f1> stringprep"];
	"encodings.cp949" [shape="record",label="<f0> SourceModule| <f1> encodings.cp949"];
	"_codecs_kr" [shape="record",label="<f0> Extension| <f1> _codecs_kr"];
	"encodings.quopri_codec" [shape="record",label="<f0> SourceModule| <f1> encodings.quopri_codec"];
	"quopri" [shape="record",label="<f0> SourceModule| <f1> quopri"];
	"binascii.b2a_qp" [shape="record",label="<f0> MissingModule| <f1> binascii.b2a_qp"];
	"binascii.a2b_qp" [shape="record",label="<f0> MissingModule| <f1> binascii.a2b_qp"];
	"encodings.utf_32_be" [shape="record",label="<f0> SourceModule| <f1> encodings.utf_32_be"];
	"encodings.string_escape" [shape="record",label="<f0> SourceModule| <f1> encodings.string_escape"];
	"encodings.cp1250" [shape="record",label="<f0> SourceModule| <f1> encodings.cp1250"];
	"encodings.cp1251" [shape="record",label="<f0> SourceModule| <f1> encodings.cp1251"];
	"encodings.cp1252" [shape="record",label="<f0> SourceModule| <f1> encodings.cp1252"];
	"encodings.cp1253" [shape="record",label="<f0> SourceModule| <f1> encodings.cp1253"];
	"encodings.cp1254" [shape="record",label="<f0> SourceModule| <f1> encodings.cp1254"];
	"encodings.cp1255" [shape="record",label="<f0> SourceModule| <f1> encodings.cp1255"];
	"encodings.cp1256" [shape="record",label="<f0> SourceModule| <f1> encodings.cp1256"];
	"encodings.cp1257" [shape="record",label="<f0> SourceModule| <f1> encodings.cp1257"];
	"encodings.cp1258" [shape="record",label="<f0> SourceModule| <f1> encodings.cp1258"];
	"encodings.euc_jp" [shape="record",label="<f0> SourceModule| <f1> encodings.euc_jp"];
	"encodings.hz" [shape="record",label="<f0> SourceModule| <f1> encodings.hz"];
	"encodings.mac_cyrillic" [shape="record",label="<f0> SourceModule| <f1> encodings.mac_cyrillic"];
	"encodings.iso2022_kr" [shape="record",label="<f0> SourceModule| <f1> encodings.iso2022_kr"];
	"_codecs_iso2022" [shape="record",label="<f0> Extension| <f1> _codecs_iso2022"];
	"encodings.unicode_internal" [shape="record",label="<f0> SourceModule| <f1> encodings.unicode_internal"];
	"encodings.cp500" [shape="record",label="<f0> SourceModule| <f1> encodings.cp500"];
	"encodings.iso8859_10" [shape="record",label="<f0> SourceModule| <f1> encodings.iso8859_10"];
	"encodings.iso8859_11" [shape="record",label="<f0> SourceModule| <f1> encodings.iso8859_11"];
	"encodings.iso8859_13" [shape="record",label="<f0> SourceModule| <f1> encodings.iso8859_13"];
	"encodings.iso8859_14" [shape="record",label="<f0> SourceModule| <f1> encodings.iso8859_14"];
	"encodings.iso8859_15" [shape="record",label="<f0> SourceModule| <f1> encodings.iso8859_15"];
	"encodings.iso8859_16" [shape="record",label="<f0> SourceModule| <f1> encodings.iso8859_16"];
	"encodings.cp1006" [shape="record",label="<f0> SourceModule| <f1> encodings.cp1006"];
	"encodings.hp_roman8" [shape="record",label="<f0> SourceModule| <f1> encodings.hp_roman8"];
	"encodings.charmap" [shape="record",label="<f0> SourceModule| <f1> encodings.charmap"];
	"encodings.utf_32" [shape="record",label="<f0> SourceModule| <f1> encodings.utf_32"];
	"encodings.latin_1" [shape="record",label="<f0> SourceModule| <f1> encodings.latin_1"];
	"encodings.utf_16_be" [shape="record",label="<f0> SourceModule| <f1> encodings.utf_16_be"];
	"encodings.cp737" [shape="record",label="<f0> SourceModule| <f1> encodings.cp737"];
	"encodings.utf_16" [shape="record",label="<f0> SourceModule| <f1> encodings.utf_16"];
	"encodings.cp437" [shape="record",label="<f0> SourceModule| <f1> encodings.cp437"];
	"encodings.mac_roman" [shape="record",label="<f0> SourceModule| <f1> encodings.mac_roman"];
	"encodings.mac_centeuro" [shape="record",label="<f0> SourceModule| <f1> encodings.mac_centeuro"];
	"encodings.mac_croatian" [shape="record",label="<f0> SourceModule| <f1> encodings.mac_croatian"];
	"encodings.punycode" [shape="record",label="<f0> SourceModule| <f1> encodings.punycode"];
	"encodings.unicode_escape" [shape="record",label="<f0> SourceModule| <f1> encodings.unicode_escape"];
	"encodings.bz2_codec" [shape="record",label="<f0> SourceModule| <f1> encodings.bz2_codec"];
	"bz2" [shape="record",label="<f0> Extension| <f1> bz2"];
	"encodings.cp874" [shape="record",label="<f0> SourceModule| <f1> encodings.cp874"];
	"encodings.cp875" [shape="record",label="<f0> SourceModule| <f1> encodings.cp875"];
	"encodings.cp720" [shape="record",label="<f0> SourceModule| <f1> encodings.cp720"];
	"encodings.tis_620" [shape="record",label="<f0> SourceModule| <f1> encodings.tis_620"];
	"encodings.zlib_codec" [shape="record",label="<f0> SourceModule| <f1> encodings.zlib_codec"];
	"encodings.iso2022_jp_2004" [shape="record",label="<f0> SourceModule| <f1> encodings.iso2022_jp_2004"];
	"encodings.euc_jisx0213" [shape="record",label="<f0> SourceModule| <f1> encodings.euc_jisx0213"];
	"encodings.ptcp154" [shape="record",label="<f0> SourceModule| <f1> encodings.ptcp154"];
	"encodings.uu_codec" [shape="record",label="<f0> SourceModule| <f1> encodings.uu_codec"];
	"binascii.a2b_uu" [shape="record",label="<f0> MissingModule| <f1> binascii.a2b_uu"];
	"binascii.b2a_uu" [shape="record",label="<f0> MissingModule| <f1> binascii.b2a_uu"];
	"encodings.utf_16_le" [shape="record",label="<f0> SourceModule| <f1> encodings.utf_16_le"];
	"encodings.iso2022_jp_2" [shape="record",label="<f0> SourceModule| <f1> encodings.iso2022_jp_2"];
	"encodings.iso2022_jp_3" [shape="record",label="<f0> SourceModule| <f1> encodings.iso2022_jp_3"];
	"encodings.iso2022_jp_1" [shape="record",label="<f0> SourceModule| <f1> encodings.iso2022_jp_1"];
	"encodings.undefined" [shape="record",label="<f0> SourceModule| <f1> encodings.undefined"];
	"encodings.cp1026" [shape="record",label="<f0> SourceModule| <f1> encodings.cp1026"];
	"encodings.mac_farsi" [shape="record",label="<f0> SourceModule| <f1> encodings.mac_farsi"];
	"encodings.mac_turkish" [shape="record",label="<f0> SourceModule| <f1> encodings.mac_turkish"];
	"encodings.koi8_u" [shape="record",label="<f0> SourceModule| <f1> encodings.koi8_u"];
	"encodings.koi8_r" [shape="record",label="<f0> SourceModule| <f1> encodings.koi8_r"];
	"encodings.utf_8_sig" [shape="record",label="<f0> SourceModule| <f1> encodings.utf_8_sig"];
	"encodings.iso2022_jp" [shape="record",label="<f0> SourceModule| <f1> encodings.iso2022_jp"];
	"encodings.palmos" [shape="record",label="<f0> SourceModule| <f1> encodings.palmos"];
	"encodings.mac_greek" [shape="record",label="<f0> SourceModule| <f1> encodings.mac_greek"];
	"encodings.shift_jis_2004" [shape="record",label="<f0> SourceModule| <f1> encodings.shift_jis_2004"];
	"encodings.gbk" [shape="record",label="<f0> SourceModule| <f1> encodings.gbk"];
	"encodings.mac_iceland" [shape="record",label="<f0> SourceModule| <f1> encodings.mac_iceland"];
	"encodings.cp858" [shape="record",label="<f0> SourceModule| <f1> encodings.cp858"];
	"encodings.cp850" [shape="record",label="<f0> SourceModule| <f1> encodings.cp850"];
	"encodings.cp852" [shape="record",label="<f0> SourceModule| <f1> encodings.cp852"];
	"encodings.cp855" [shape="record",label="<f0> SourceModule| <f1> encodings.cp855"];
	"encodings.cp856" [shape="record",label="<f0> SourceModule| <f1> encodings.cp856"];
	"encodings.cp857" [shape="record",label="<f0> SourceModule| <f1> encodings.cp857"];
	"encodings.iso8859_4" [shape="record",label="<f0> SourceModule| <f1> encodings.iso8859_4"];
	"encodings.iso8859_5" [shape="record",label="<f0> SourceModule| <f1> encodings.iso8859_5"];
	"encodings.iso8859_6" [shape="record",label="<f0> SourceModule| <f1> encodings.iso8859_6"];
	"encodings.iso8859_7" [shape="record",label="<f0> SourceModule| <f1> encodings.iso8859_7"];
	"encodings.iso8859_1" [shape="record",label="<f0> SourceModule| <f1> encodings.iso8859_1"];
	"encodings.iso8859_2" [shape="record",label="<f0> SourceModule| <f1> encodings.iso8859_2"];
	"encodings.iso8859_3" [shape="record",label="<f0> SourceModule| <f1> encodings.iso8859_3"];
	"encodings.gb2312" [shape="record",label="<f0> SourceModule| <f1> encodings.gb2312"];
	"encodings.iso8859_8" [shape="record",label="<f0> SourceModule| <f1> encodings.iso8859_8"];
	"encodings.iso8859_9" [shape="record",label="<f0> SourceModule| <f1> encodings.iso8859_9"];
	"encodings.cp862" [shape="record",label="<f0> SourceModule| <f1> encodings.cp862"];
	"encodings.big5hkscs" [shape="record",label="<f0> SourceModule| <f1> encodings.big5hkscs"];
	"_codecs_hk" [shape="record",label="<f0> Extension| <f1> _codecs_hk"];
	"encodings.base64_codec" [shape="record",label="<f0> SourceModule| <f1> encodings.base64_codec"];
	"base64" [shape="record",label="<f0> SourceModule| <f1> base64"];
	"encodings.cp037" [shape="record",label="<f0> SourceModule| <f1> encodings.cp037"];
	"encodings.utf_8" [shape="record",label="<f0> SourceModule| <f1> encodings.utf_8"];
	"encodings.mac_arabic" [shape="record",label="<f0> SourceModule| <f1> encodings.mac_arabic"];
	"encodings.euc_kr" [shape="record",label="<f0> SourceModule| <f1> encodings.euc_kr"];
	"encodings.utf_7" [shape="record",label="<f0> SourceModule| <f1> encodings.utf_7"];
	"encodings.utf_32_le" [shape="record",label="<f0> SourceModule| <f1> encodings.utf_32_le"];
	"encodings.euc_jis_2004" [shape="record",label="<f0> SourceModule| <f1> encodings.euc_jis_2004"];
	"encodings.cp775" [shape="record",label="<f0> SourceModule| <f1> encodings.cp775"];
	"encodings.mac_romanian" [shape="record",label="<f0> SourceModule| <f1> encodings.mac_romanian"];
	"encodings.cp1140" [shape="record",label="<f0> SourceModule| <f1> encodings.cp1140"];
	"encodings.big5" [shape="record",label="<f0> SourceModule| <f1> encodings.big5"];
	"_codecs_tw" [shape="record",label="<f0> Extension| <f1> _codecs_tw"];
	"encodings.cp424" [shape="record",label="<f0> SourceModule| <f1> encodings.cp424"];
	"encodings.iso2022_jp_ext" [shape="record",label="<f0> SourceModule| <f1> encodings.iso2022_jp_ext"];
	"encodings.cp950" [shape="record",label="<f0> SourceModule| <f1> encodings.cp950"];
	"encodings.johab" [shape="record",label="<f0> SourceModule| <f1> encodings.johab"];
	"encodings.cp932" [shape="record",label="<f0> SourceModule| <f1> encodings.cp932"];
	"textwrap" [shape="record",label="<f0> SourceModule| <f1> textwrap"];
	"getopt" [shape="record",label="<f0> SourceModule| <f1> getopt"];
	"unittest.runner" [shape="record",label="<f0> SourceModule| <f1> unittest.runner"];
	"unittest.loader" [shape="record",label="<f0> SourceModule| <f1> unittest.loader"];
	"unittest.suite" [shape="record",label="<f0> SourceModule| <f1> unittest.suite"];
	"unittest.case" [shape="record",label="<f0> SourceModule| <f1> unittest.case"];
	"unittest.result" [shape="record",label="<f0> SourceModule| <f1> unittest.result"];
	"unittest.util" [shape="record",label="<f0> SourceModule| <f1> unittest.util"];
	"inspect" [shape="record",label="<f0> SourceModule| <f1> inspect"];
	"imp" [shape="record",label="<f0> BuiltinModule| <f1> imp"];
	"dis" [shape="record",label="<f0> SourceModule| <f1> dis"];
	"opcode" [shape="record",label="<f0> SourceModule| <f1> opcode"];
	"__future__" [shape="record",label="<f0> SourceModule| <f1> __future__"];
	"binascii" [shape="record",label="<f0> BuiltinModule| <f1> binascii"];
	"binascii.unhexlify" [shape="record",label="<f0> MissingModule| <f1> binascii.unhexlify"];
	"binascii.b2a_base64" [shape="record",label="<f0> MissingModule| <f1> binascii.b2a_base64"];
	"binascii.a2b_base64" [shape="record",label="<f0> MissingModule| <f1> binascii.a2b_base64"];
	"'org.python'.PyStringMap" [shape="record",label="<f0> MissingModule| <f1> 'org.python'.PyStringMap"];
	"'org.python'" [shape="record",label="<f0> MissingModule| <f1> 'org.python'"];
	"'org.python'.imp" [shape="record",label="<f0> MissingModule| <f1> 'org.python'.imp"];
	"struct" [shape="record",label="<f0> SourceModule| <f1> struct"];
	"struct.calcsize" [shape="record",label="<f0> MissingModule| <f1> struct.calcsize"];
	"_struct.__doc__" [shape="record",label="<f0> MissingModule| <f1> _struct.__doc__"];
	"_struct._clearcache" [shape="record",label="<f0> MissingModule| <f1> _struct._clearcache"];
	"_struct" [shape="record",label="<f0> BuiltinModule| <f1> _struct"];
	"marshal" [shape="record",label="<f0> BuiltinModule| <f1> marshal"];
	"fcntl" [shape="record",label="<f0> BuiltinModule| <f1> fcntl"];
	"fcntl.I_PUSH" [shape="record",label="<f0> MissingModule| <f1> fcntl.I_PUSH"];
	"fcntl.ioctl" [shape="record",label="<f0> MissingModule| <f1> fcntl.ioctl"];
	"select" [shape="record",label="<f0> BuiltinModule| <f1> select"];
	"select.select" [shape="record",label="<f0> MissingModule| <f1> select.select"];
	"_subprocess" [shape="record",label="<f0> MissingModule| <f1> _subprocess"];
	"msvcrt" [shape="record",label="<f0> MissingModule| <f1> msvcrt"];
	"threading" [shape="record",label="<f0> SourceModule| <f1> threading"];
	"_threading_local" [shape="record",label="<f0> SourceModule| <f1> _threading_local"];
	"threading.RLock" [shape="record",label="<f0> MissingModule| <f1> threading.RLock"];
	"threading.current_thread" [shape="record",label="<f0> MissingModule| <f1> threading.current_thread"];
	"time.time" [shape="record",label="<f0> MissingModule| <f1> time.time"];
	"time.sleep" [shape="record",label="<f0> MissingModule| <f1> time.sleep"];
	"signal" [shape="record",label="<f0> BuiltinModule| <f1> signal"];
	"traceback" [shape="record",label="<f0> SourceModule| <f1> traceback"];
	"os.urandom" [shape="record",label="<f0> MissingModule| <f1> os.urandom"];
	"riscosenviron._Environ" [shape="record",label="<f0> MissingModule| <f1> riscosenviron._Environ"];
	"riscosenviron" [shape="record",label="<f0> MissingModule| <f1> riscosenviron"];
	"UserDict" [shape="record",label="<f0> SourceModule| <f1> UserDict"];
	"os.path" [shape="record",label="<f0> AliasNode| <f1> os.path"];
	"posixpath.isdir" [shape="record",label="<f0> MissingModule| <f1> posixpath.isdir"];
	"riscospath" [shape="record",label="<f0> MissingModule| <f1> riscospath"];
	"riscos._exit" [shape="record",label="<f0> MissingModule| <f1> riscos._exit"];
	"riscos" [shape="record",label="<f0> MissingModule| <f1> riscos"];
	"ce._exit" [shape="record",label="<f0> MissingModule| <f1> ce._exit"];
	"ce" [shape="record",label="<f0> MissingModule| <f1> ce"];
	"_emx_link.link" [shape="record",label="<f0> MissingModule| <f1> _emx_link.link"];
	"_emx_link" [shape="record",label="<f0> MissingModule| <f1> _emx_link"];
	"os2emxpath" [shape="record",label="<f0> SourceModule| <f1> os2emxpath"];
	"genericpath" [shape="record",label="<f0> SourceModule| <f1> genericpath"];
	"stat" [shape="record",label="<f0> SourceModule| <f1> stat"];
	"os2._exit" [shape="record",label="<f0> MissingModule| <f1> os2._exit"];
	"os2" [shape="record",label="<f0> MissingModule| <f1> os2"];
	"ntpath" [shape="record",label="<f0> SourceModule| <f1> ntpath"];
	"nt._isdir" [shape="record",label="<f0> MissingModule| <f1> nt._isdir"];
	"nt._getfullpathname" [shape="record",label="<f0> MissingModule| <f1> nt._getfullpathname"];
	"nt._exit" [shape="record",label="<f0> MissingModule| <f1> nt._exit"];
	"nt" [shape="record",label="<f0> MissingModule| <f1> nt"];
	"posix._exit" [shape="record",label="<f0> MissingModule| <f1> posix._exit"];
	"ssl" [shape="record",label="<f0> SourceModule| <f1> ssl"];
	"calendar" [shape="record",label="<f0> SourceModule| <f1> calendar"];
	"time.strptime" [shape="record",label="<f0> MissingModule| <f1> time.strptime"];
	"contextlib" [shape="record",label="<f0> SourceModule| <f1> contextlib"];
	"socket.SO_TYPE" [shape="record",label="<f0> MissingModule| <f1> socket.SO_TYPE"];
	"socket.SOL_SOCKET" [shape="record",label="<f0> MissingModule| <f1> socket.SOL_SOCKET"];
	"socket.AF_INET" [shape="record",label="<f0> MissingModule| <f1> socket.AF_INET"];
	"socket.create_connection" [shape="record",label="<f0> MissingModule| <f1> socket.create_connection"];
	"socket.SOCK_STREAM" [shape="record",label="<f0> MissingModule| <f1> socket.SOCK_STREAM"];
	"socket.error" [shape="record",label="<f0> MissingModule| <f1> socket.error"];
	"socket.socket" [shape="record",label="<f0> MissingModule| <f1> socket.socket"];
	"socket._delegate_methods" [shape="record",label="<f0> MissingModule| <f1> socket._delegate_methods"];
	"socket._fileobject" [shape="record",label="<f0> MissingModule| <f1> socket._fileobject"];
	"types" [shape="record",label="<f0> SourceModule| <f1> types"];
	"functools" [shape="record",label="<f0> SourceModule| <f1> functools"];
	"_functools.partial" [shape="record",label="<f0> MissingModule| <f1> _functools.partial"];
	"_functools.reduce" [shape="record",label="<f0> MissingModule| <f1> _functools.reduce"];
	"_functools" [shape="record",label="<f0> BuiltinModule| <f1> _functools"];
	"_socket" [shape="record",label="<f0> BuiltinModule| <f1> _socket"];
	"cPickle" [shape="record",label="<f0> BuiltinModule| <f1> cPickle"];
	"cStringIO" [shape="record",label="<f0> BuiltinModule| <f1> cStringIO"];
	"datetime" [shape="record",label="<f0> BuiltinModule| <f1> datetime"];
	"datetime.datetime" [shape="record",label="<f0> MissingModule| <f1> datetime.datetime"];
	"datetime.date" [shape="record",label="<f0> MissingModule| <f1> datetime.date"];
	"time" [shape="record",label="<f0> BuiltinModule| <f1> time"];
	"_strptime" [shape="record",label="<f0> SourceModule| <f1> _strptime"];
	"gc" [shape="record",label="<f0> BuiltinModule| <f1> gc"];
	"posixpath" [shape="record",label="<f0> SourceModule| <f1> posixpath"];
	"pwd" [shape="record",label="<f0> BuiltinModule| <f1> pwd"];
	"pwd.getpwnam" [shape="record",label="<f0> MissingModule| <f1> pwd.getpwnam"];
	"_sre" [shape="record",label="<f0> BuiltinModule| <f1> _sre"];
	"sre" [shape="record",label="<f0> SourceModule| <f1> sre"];
	"posix" [shape="record",label="<f0> BuiltinModule| <f1> posix"];
	"resource" [shape="record",label="<f0> Extension| <f1> resource"];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" [shape="record",label="<f0> Script| <f1> /home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py"];
	"/usr/local/lib/python2.7/dist-packages/PyInstaller-3.2-py2.7.egg/PyInstaller/loader/rthooks/pyi_rth__tkinter.py" [shape="record",label="<f0> Script| <f1> /usr/local/lib/python2.7/dist-packages/PyInstaller-3.2-py2.7.egg/PyInstaller/loader/rthooks/pyi_rth__tkinter.py"];
	"/usr/local/lib/python2.7/dist-packages/PyInstaller-3.2-py2.7.egg/PyInstaller/loader/rthooks/pyi_rth_pkgres.py" [shape="record",label="<f0> Script| <f1> /usr/local/lib/python2.7/dist-packages/PyInstaller-3.2-py2.7.egg/PyInstaller/loader/rthooks/pyi_rth_pkgres.py"];
	"pyimod03_importers.FrozenImporter" [shape="record",label="<f0> MissingModule| <f1> pyimod03_importers.FrozenImporter"];
	"pyimod03_importers" [shape="record",label="<f0> MissingModule| <f1> pyimod03_importers"];
	"pkg_resources" [shape="record",label="<f0> Package| <f1> pkg_resources"];
	"pkg_resources._vendor.packaging.version" [shape="record",label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.version"];
	"pkg_resources._vendor.packaging.markers" [shape="record",label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.markers"];
	"'pkg_resources.extern.pyparsing'.Literal" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'.Literal"];
	"'pkg_resources.extern.pyparsing'.QuotedString" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'.QuotedString"];
	"'pkg_resources.extern.pyparsing'.ZeroOrMore" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'.ZeroOrMore"];
	"'pkg_resources.extern.pyparsing'.Group" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'.Group"];
	"'pkg_resources.extern.pyparsing'.Forward" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'.Forward"];
	"'pkg_resources.extern.pyparsing'.ParseException" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'.ParseException"];
	"'pkg_resources.extern.pyparsing'.stringEnd" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'.stringEnd"];
	"'pkg_resources.extern.pyparsing'.stringStart" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'.stringStart"];
	"'pkg_resources.extern.pyparsing'.ParseResults" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'.ParseResults"];
	"'pkg_resources.extern.pyparsing'" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'"];
	"'pkg_resources.extern.pyparsing'.Optional" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'.Optional"];
	"'pkg_resources.extern.pyparsing'.Combine" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'.Combine"];
	"'pkg_resources.extern.pyparsing'.Word" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'.Word"];
	"'pkg_resources.extern.pyparsing'.Regex" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'.Regex"];
	"'pkg_resources.extern.pyparsing'.originalTextFor" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'.originalTextFor"];
	"pkg_resources._vendor.packaging._structures" [shape="record",label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging._structures"];
	"pkg_resources._vendor.appdirs" [shape="record",label="<f0> SourceModule| <f1> pkg_resources._vendor.appdirs"];
	"'com.sun'.win32" [shape="record",label="<f0> MissingModule| <f1> 'com.sun'.win32"];
	"'com.sun'" [shape="record",label="<f0> MissingModule| <f1> 'com.sun'"];
	"com.jna" [shape="record",label="<f0> MissingModule| <f1> com.jna"];
	"com" [shape="record",label="<f0> MissingModule| <f1> com"];
	"ctypes" [shape="record",label="<f0> Package| <f1> ctypes"];
	"ctypes._endian" [shape="record",label="<f0> SourceModule| <f1> ctypes._endian"];
	"_ctypes._wstring_at_addr" [shape="record",label="<f0> MissingModule| <f1> _ctypes._wstring_at_addr"];
	"_ctypes._string_at_addr" [shape="record",label="<f0> MissingModule| <f1> _ctypes._string_at_addr"];
	"_ctypes._cast_addr" [shape="record",label="<f0> MissingModule| <f1> _ctypes._cast_addr"];
	"_ctypes._memset_addr" [shape="record",label="<f0> MissingModule| <f1> _ctypes._memset_addr"];
	"_ctypes._memmove_addr" [shape="record",label="<f0> MissingModule| <f1> _ctypes._memmove_addr"];
	"_ctypes.get_last_error" [shape="record",label="<f0> MissingModule| <f1> _ctypes.get_last_error"];
	"_ctypes.set_last_error" [shape="record",label="<f0> MissingModule| <f1> _ctypes.set_last_error"];
	"_ctypes._check_HRESULT" [shape="record",label="<f0> MissingModule| <f1> _ctypes._check_HRESULT"];
	"_ctypes.set_conversion_mode" [shape="record",label="<f0> MissingModule| <f1> _ctypes.set_conversion_mode"];
	"_ctypes._pointer_type_cache" [shape="record",label="<f0> MissingModule| <f1> _ctypes._pointer_type_cache"];
	"_ctypes.POINTER" [shape="record",label="<f0> MissingModule| <f1> _ctypes.POINTER"];
	"_ctypes.pointer" [shape="record",label="<f0> MissingModule| <f1> _ctypes.pointer"];
	"_ctypes._SimpleCData" [shape="record",label="<f0> MissingModule| <f1> _ctypes._SimpleCData"];
	"_ctypes.get_errno" [shape="record",label="<f0> MissingModule| <f1> _ctypes.get_errno"];
	"_ctypes.set_errno" [shape="record",label="<f0> MissingModule| <f1> _ctypes.set_errno"];
	"_ctypes.alignment" [shape="record",label="<f0> MissingModule| <f1> _ctypes.alignment"];
	"_ctypes.addressof" [shape="record",label="<f0> MissingModule| <f1> _ctypes.addressof"];
	"_ctypes.resize" [shape="record",label="<f0> MissingModule| <f1> _ctypes.resize"];
	"_ctypes.byref" [shape="record",label="<f0> MissingModule| <f1> _ctypes.byref"];
	"_ctypes.sizeof" [shape="record",label="<f0> MissingModule| <f1> _ctypes.sizeof"];
	"_ctypes.dlopen" [shape="record",label="<f0> MissingModule| <f1> _ctypes.dlopen"];
	"_ctypes.FUNCFLAG_STDCALL" [shape="record",label="<f0> MissingModule| <f1> _ctypes.FUNCFLAG_STDCALL"];
	"_ctypes.LoadLibrary" [shape="record",label="<f0> MissingModule| <f1> _ctypes.LoadLibrary"];
	"_ctypes.FUNCFLAG_USE_ERRNO" [shape="record",label="<f0> MissingModule| <f1> _ctypes.FUNCFLAG_USE_ERRNO"];
	"_ctypes.FUNCFLAG_USE_LASTERROR" [shape="record",label="<f0> MissingModule| <f1> _ctypes.FUNCFLAG_USE_LASTERROR"];
	"_ctypes.FUNCFLAG_PYTHONAPI" [shape="record",label="<f0> MissingModule| <f1> _ctypes.FUNCFLAG_PYTHONAPI"];
	"_ctypes.FUNCFLAG_CDECL" [shape="record",label="<f0> MissingModule| <f1> _ctypes.FUNCFLAG_CDECL"];
	"_ctypes.FormatError" [shape="record",label="<f0> MissingModule| <f1> _ctypes.FormatError"];
	"_ctypes.ArgumentError" [shape="record",label="<f0> MissingModule| <f1> _ctypes.ArgumentError"];
	"_ctypes.RTLD_LOCAL" [shape="record",label="<f0> MissingModule| <f1> _ctypes.RTLD_LOCAL"];
	"_ctypes.RTLD_GLOBAL" [shape="record",label="<f0> MissingModule| <f1> _ctypes.RTLD_GLOBAL"];
	"_ctypes.__version__" [shape="record",label="<f0> MissingModule| <f1> _ctypes.__version__"];
	"_ctypes.CFuncPtr" [shape="record",label="<f0> MissingModule| <f1> _ctypes.CFuncPtr"];
	"_ctypes._Pointer" [shape="record",label="<f0> MissingModule| <f1> _ctypes._Pointer"];
	"_ctypes.Structure" [shape="record",label="<f0> MissingModule| <f1> _ctypes.Structure"];
	"_ctypes.Array" [shape="record",label="<f0> MissingModule| <f1> _ctypes.Array"];
	"_ctypes.Union" [shape="record",label="<f0> MissingModule| <f1> _ctypes.Union"];
	"_ctypes" [shape="record",label="<f0> Extension| <f1> _ctypes"];
	"win32api" [shape="record",label="<f0> MissingModule| <f1> win32api"];
	"win32com.shell.shell" [shape="record",label="<f0> MissingModule| <f1> win32com.shell.shell"];
	"win32com.shell.shellcon" [shape="record",label="<f0> MissingModule| <f1> win32com.shell.shellcon"];
	"win32com.shell" [shape="record",label="<f0> MissingModule| <f1> win32com.shell"];
	"_winreg" [shape="record",label="<f0> MissingModule| <f1> _winreg"];
	"_winreg.OpenKeyEx" [shape="record",label="<f0> MissingModule| <f1> _winreg.OpenKeyEx"];
	"_winreg.HKEY_LOCAL_MACHINE" [shape="record",label="<f0> MissingModule| <f1> _winreg.HKEY_LOCAL_MACHINE"];
	"_winreg.QueryValueEx" [shape="record",label="<f0> MissingModule| <f1> _winreg.QueryValueEx"];
	"_winreg.CloseKey" [shape="record",label="<f0> MissingModule| <f1> _winreg.CloseKey"];
	"pkg_resources._vendor" [shape="record",label="<f0> Package| <f1> pkg_resources._vendor"];
	"pkg_resources._vendor.packaging.__about__" [shape="record",label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.__about__"];
	"pkg_resources._vendor.six" [shape="record",label="<f0> SourceModule| <f1> pkg_resources._vendor.six"];
	"pkg_resources._vendor.packaging.specifiers" [shape="record",label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.specifiers"];
	"pkg_resources._vendor.packaging.requirements" [shape="record",label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.requirements"];
	"'pkg_resources.extern.six.moves'.parse" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.six.moves'.parse"];
	"pkg_resources._vendor.pyparsing" [shape="record",label="<f0> SourceModule| <f1> pkg_resources._vendor.pyparsing"];
	"uuid" [shape="record",label="<f0> SourceModule| <f1> uuid"];
	"ctypes.util" [shape="record",label="<f0> SourceModule| <f1> ctypes.util"];
	"'ctypes.macholib'.dyld_find" [shape="record",label="<f0> MissingModule| <f1> 'ctypes.macholib'.dyld_find"];
	"'ctypes.macholib'" [shape="record",label="<f0> MissingModule| <f1> 'ctypes.macholib'"];
	"netbios" [shape="record",label="<f0> MissingModule| <f1> netbios"];
	"win32wnet" [shape="record",label="<f0> MissingModule| <f1> win32wnet"];
	"ordereddict.OrderedDict" [shape="record",label="<f0> MissingModule| <f1> ordereddict.OrderedDict"];
	"ordereddict" [shape="record",label="<f0> MissingModule| <f1> ordereddict"];
	"_thread.RLock" [shape="record",label="<f0> MissingModule| <f1> _thread.RLock"];
	"_thread" [shape="record",label="<f0> MissingModule| <f1> _thread"];
	"pkg_resources._vendor.packaging" [shape="record",label="<f0> Package| <f1> pkg_resources._vendor.packaging"];
	"pkg_resources._vendor.packaging._compat" [shape="record",label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging._compat"];
	"pkg_resources._vendor.packaging.utils" [shape="record",label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.utils"];
	"__main__.__requires__" [shape="record",label="<f0> MissingModule| <f1> __main__.__requires__"];
	"__main__" [shape="record",label="<f0> BuiltinModule| <f1> __main__"];
	"distutils.util" [shape="record",label="<f0> SourceModule| <f1> distutils.util"];
	"py_compile" [shape="record",label="<f0> SourceModule| <f1> py_compile"];
	"distutils.sysconfig" [shape="record",label="<f0> SourceModule| <f1> distutils.sysconfig"];
	"_sysconfigdata.build_time_vars" [shape="record",label="<f0> MissingModule| <f1> _sysconfigdata.build_time_vars"];
	"_sysconfigdata" [shape="record",label="<f0> SourceModule| <f1> _sysconfigdata"];
	"_sysconfigdata_nd" [shape="record",label="<f0> SourceModule| <f1> _sysconfigdata_nd"];
	"_sysconfigdata_d" [shape="record",label="<f0> MissingModule| <f1> _sysconfigdata_d"];
	"distutils.text_file" [shape="record",label="<f0> SourceModule| <f1> distutils.text_file"];
	"_osx_support" [shape="record",label="<f0> SourceModule| <f1> _osx_support"];
	"distutils.log" [shape="record",label="<f0> SourceModule| <f1> distutils.log"];
	"distutils" [shape="record",label="<f0> Package| <f1> distutils"];
	"distutils.spawn" [shape="record",label="<f0> SourceModule| <f1> distutils.spawn"];
	"distutils.debug" [shape="record",label="<f0> SourceModule| <f1> distutils.debug"];
	"distutils.dep_util" [shape="record",label="<f0> SourceModule| <f1> distutils.dep_util"];
	"distutils.errors" [shape="record",label="<f0> SourceModule| <f1> distutils.errors"];
	"sysconfig" [shape="record",label="<f0> SourceModule| <f1> sysconfig"];
	"pkg_resources.extern.packaging" [shape="record",label="<f0> MissingModule| <f1> pkg_resources.extern.packaging"];
	"pkg_resources.extern.appdirs" [shape="record",label="<f0> MissingModule| <f1> pkg_resources.extern.appdirs"];
	"'importlib.machinery'" [shape="record",label="<f0> MissingModule| <f1> 'importlib.machinery'"];
	"'pkg_resources.extern.six.moves'.urllib" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.six.moves'.urllib"];
	"'pkg_resources.extern.six.moves'.map" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.six.moves'.map"];
	"'pkg_resources.extern.six.moves'.filter" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.six.moves'.filter"];
	"'pkg_resources.extern.six.moves'" [shape="record",label="<f0> MissingModule| <f1> 'pkg_resources.extern.six.moves'"];
	"pkg_resources.extern.six" [shape="record",label="<f0> MissingModule| <f1> pkg_resources.extern.six"];
	"pkg_resources.extern" [shape="record",label="<f0> Package| <f1> pkg_resources.extern"];
	"_imp" [shape="record",label="<f0> MissingModule| <f1> _imp"];
	"email.parser" [shape="record",label="<f0> SourceModule| <f1> email.parser"];
	"email" [shape="record",label="<f0> Package| <f1> email"];
	"email.mime" [shape="record",label="<f0> Package| <f1> email.mime"];
	"email.errors" [shape="record",label="<f0> SourceModule| <f1> email.errors"];
	"email.message" [shape="record",label="<f0> SourceModule| <f1> email.message"];
	"email.iterators" [shape="record",label="<f0> SourceModule| <f1> email.iterators"];
	"email.generator" [shape="record",label="<f0> SourceModule| <f1> email.generator"];
	"email.header" [shape="record",label="<f0> SourceModule| <f1> email.header"];
	"email.base64mime" [shape="record",label="<f0> SourceModule| <f1> email.base64mime"];
	"email.quoprimime" [shape="record",label="<f0> SourceModule| <f1> email.quoprimime"];
	"email.utils" [shape="record",label="<f0> SourceModule| <f1> email.utils"];
	"email.encoders" [shape="record",label="<f0> SourceModule| <f1> email.encoders"];
	"email._parseaddr" [shape="record",label="<f0> SourceModule| <f1> email._parseaddr"];
	"urllib" [shape="record",label="<f0> SourceModule| <f1> urllib"];
	"_scproxy._get_proxy_settings" [shape="record",label="<f0> MissingModule| <f1> _scproxy._get_proxy_settings"];
	"_scproxy._get_proxies" [shape="record",label="<f0> MissingModule| <f1> _scproxy._get_proxies"];
	"_scproxy" [shape="record",label="<f0> MissingModule| <f1> _scproxy"];
	"getpass" [shape="record",label="<f0> SourceModule| <f1> getpass"];
	"EasyDialogs.AskPassword" [shape="record",label="<f0> MissingModule| <f1> EasyDialogs.AskPassword"];
	"EasyDialogs" [shape="record",label="<f0> MissingModule| <f1> EasyDialogs"];
	"termios" [shape="record",label="<f0> Extension| <f1> termios"];
	"ftplib" [shape="record",label="<f0> SourceModule| <f1> ftplib"];
	"SOCKS" [shape="record",label="<f0> MissingModule| <f1> SOCKS"];
	"mimetools" [shape="record",label="<f0> SourceModule| <f1> mimetools"];
	"rfc822" [shape="record",label="<f0> SourceModule| <f1> rfc822"];
	"mimetypes" [shape="record",label="<f0> SourceModule| <f1> mimetypes"];
	"httplib" [shape="record",label="<f0> SourceModule| <f1> httplib"];
	"rourl2path.url2pathname" [shape="record",label="<f0> MissingModule| <f1> rourl2path.url2pathname"];
	"rourl2path.pathname2url" [shape="record",label="<f0> MissingModule| <f1> rourl2path.pathname2url"];
	"rourl2path" [shape="record",label="<f0> MissingModule| <f1> rourl2path"];
	"nturl2path" [shape="record",label="<f0> SourceModule| <f1> nturl2path"];
	"urlparse" [shape="record",label="<f0> SourceModule| <f1> urlparse"];
	"email.charset" [shape="record",label="<f0> SourceModule| <f1> email.charset"];
	"uu" [shape="record",label="<f0> SourceModule| <f1> uu"];
	"email.feedparser" [shape="record",label="<f0> SourceModule| <f1> email.feedparser"];
	"plistlib" [shape="record",label="<f0> SourceModule| <f1> plistlib"];
	"xml.parsers.expat.ParserCreate" [shape="record",label="<f0> MissingModule| <f1> xml.parsers.expat.ParserCreate"];
	"xml.parsers.expat" [shape="record",label="<f0> SourceModule| <f1> xml.parsers.expat"];
	"xml.parsers" [shape="record",label="<f0> Package| <f1> xml.parsers"];
	"xml" [shape="record",label="<f0> Package| <f1> xml"];
	"xml.sax.expatreader" [shape="record",label="<f0> SourceModule| <f1> xml.sax.expatreader"];
	"xml.sax.saxutils" [shape="record",label="<f0> SourceModule| <f1> xml.sax.saxutils"];
	"xml.sax" [shape="record",label="<f0> Package| <f1> xml.sax"];
	"xml.sax.handler" [shape="record",label="<f0> SourceModule| <f1> xml.sax.handler"];
	"xml.sax._exceptions" [shape="record",label="<f0> SourceModule| <f1> xml.sax._exceptions"];
	"'java.lang'.Exception" [shape="record",label="<f0> MissingModule| <f1> 'java.lang'.Exception"];
	"'java.lang'" [shape="record",label="<f0> MissingModule| <f1> 'java.lang'"];
	"xml.sax.xmlreader" [shape="record",label="<f0> SourceModule| <f1> xml.sax.xmlreader"];
	"_xmlplus" [shape="record",label="<f0> MissingModule| <f1> _xmlplus"];
	"pyexpat" [shape="record",label="<f0> Extension| <f1> pyexpat"];
	"'Carbon.Files'.fsRdWrPerm" [shape="record",label="<f0> MissingModule| <f1> 'Carbon.Files'.fsRdWrPerm"];
	"'Carbon.File'.FSGetResourceForkName" [shape="record",label="<f0> MissingModule| <f1> 'Carbon.File'.FSGetResourceForkName"];
	"'Carbon.File'.FSRef" [shape="record",label="<f0> MissingModule| <f1> 'Carbon.File'.FSRef"];
	"'Carbon.File'" [shape="record",label="<f0> MissingModule| <f1> 'Carbon.File'"];
	"Carbon.Res" [shape="record",label="<f0> MissingModule| <f1> Carbon.Res"];
	"'Carbon.Files'.fsRdPerm" [shape="record",label="<f0> MissingModule| <f1> 'Carbon.Files'.fsRdPerm"];
	"'Carbon.Files'" [shape="record",label="<f0> MissingModule| <f1> 'Carbon.Files'"];
	"Carbon.FSGetResourceForkName" [shape="record",label="<f0> MissingModule| <f1> Carbon.FSGetResourceForkName"];
	"Carbon.FSRef" [shape="record",label="<f0> MissingModule| <f1> Carbon.FSRef"];
	"Carbon" [shape="record",label="<f0> MissingModule| <f1> Carbon"];
	"platform" [shape="record",label="<f0> SourceModule| <f1> platform"];
	"vms_lib" [shape="record",label="<f0> MissingModule| <f1> vms_lib"];
	"java.System" [shape="record",label="<f0> MissingModule| <f1> java.System"];
	"java" [shape="record",label="<f0> MissingModule| <f1> java"];
	"gestalt.gestalt" [shape="record",label="<f0> MissingModule| <f1> gestalt.gestalt"];
	"gestalt" [shape="record",label="<f0> MissingModule| <f1> gestalt"];
	"winreg.OpenKeyEx" [shape="record",label="<f0> MissingModule| <f1> winreg.OpenKeyEx"];
	"winreg.HKEY_LOCAL_MACHINE" [shape="record",label="<f0> MissingModule| <f1> winreg.HKEY_LOCAL_MACHINE"];
	"winreg.QueryValueEx" [shape="record",label="<f0> MissingModule| <f1> winreg.QueryValueEx"];
	"winreg.CloseKey" [shape="record",label="<f0> MissingModule| <f1> winreg.CloseKey"];
	"winreg" [shape="record",label="<f0> MissingModule| <f1> winreg"];
	"ctypes.wintypes" [shape="record",label="<f0> SourceModule| <f1> ctypes.wintypes"];
	"win32pipe" [shape="record",label="<f0> MissingModule| <f1> win32pipe"];
	"pkgutil" [shape="record",label="<f0> SourceModule| <f1> pkgutil"];
	"zipfile" [shape="record",label="<f0> SourceModule| <f1> zipfile"];
	"shutil" [shape="record",label="<f0> SourceModule| <f1> shutil"];
	"tarfile" [shape="record",label="<f0> SourceModule| <f1> tarfile"];
	"gzip" [shape="record",label="<f0> SourceModule| <f1> gzip"];
	"grp.getgrnam" [shape="record",label="<f0> MissingModule| <f1> grp.getgrnam"];
	"grp" [shape="record",label="<f0> BuiltinModule| <f1> grp"];
	"_codecs" [shape="record",label="<f0> BuiltinModule| <f1> _codecs"];
	"serial" [shape="record",label="<f0> Package| <f1> serial"];
	"serial.serialjava" [shape="record",label="<f0> SourceModule| <f1> serial.serialjava"];
	"serial.serialposix" [shape="record",label="<f0> SourceModule| <f1> serial.serialposix"];
	"serial.serialwin32" [shape="record",label="<f0> SourceModule| <f1> serial.serialwin32"];
	"serial.win32" [shape="record",label="<f0> SourceModule| <f1> serial.win32"];
	"serial.serialcli" [shape="record",label="<f0> SourceModule| <f1> serial.serialcli"];
	"'System.IO'" [shape="record",label="<f0> MissingModule| <f1> 'System.IO'"];
	"System" [shape="record",label="<f0> MissingModule| <f1> System"];
	"clr" [shape="record",label="<f0> MissingModule| <f1> clr"];
	"serial.serialutil" [shape="record",label="<f0> SourceModule| <f1> serial.serialutil"];
	"importlib" [shape="record",label="<f0> Package| <f1> importlib"];
	"telnetlib" [shape="record",label="<f0> SourceModule| <f1> telnetlib"];
	"spur" [shape="record",label="<f0> Package| <f1> spur"];
	"spur.errors" [shape="record",label="<f0> SourceModule| <f1> spur.errors"];
	"spur.ssh" [shape="record",label="<f0> SourceModule| <f1> spur.ssh"];
	"spur.io" [shape="record",label="<f0> SourceModule| <f1> spur.io"];
	"spur.files" [shape="record",label="<f0> SourceModule| <f1> spur.files"];
	"spur.tempdir" [shape="record",label="<f0> SourceModule| <f1> spur.tempdir"];
	"paramiko" [shape="record",label="<f0> Package| <f1> paramiko"];
	"paramiko.common" [shape="record",label="<f0> SourceModule| <f1> paramiko.common"];
	"paramiko.py3compat" [shape="record",label="<f0> SourceModule| <f1> paramiko.py3compat"];
	"builtins" [shape="record",label="<f0> MissingModule| <f1> builtins"];
	"paramiko.proxy" [shape="record",label="<f0> SourceModule| <f1> paramiko.proxy"];
	"paramiko.config" [shape="record",label="<f0> SourceModule| <f1> paramiko.config"];
	"paramiko.hostkeys" [shape="record",label="<f0> SourceModule| <f1> paramiko.hostkeys"];
	"paramiko.util.constant_time_bytes_eq" [shape="record",label="<f0> MissingModule| <f1> paramiko.util.constant_time_bytes_eq"];
	"paramiko.util.get_logger" [shape="record",label="<f0> MissingModule| <f1> paramiko.util.get_logger"];
	"hmac" [shape="record",label="<f0> SourceModule| <f1> hmac"];
	"paramiko.pkey" [shape="record",label="<f0> SourceModule| <f1> paramiko.pkey"];
	"cryptography.hazmat.primitives.ciphers.modes" [shape="record",label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.ciphers.modes"];
	"cryptography.utils" [shape="record",label="<f0> SourceModule| <f1> cryptography.utils"];
	"cryptography" [shape="record",label="<f0> Package| <f1> cryptography"];
	"_cffi_backend" [shape="record",label="<f0> Extension| <f1> _cffi_backend"];
	"cryptography.hazmat.bindings.openssl._conditional" [shape="record",label="<f0> SourceModule| <f1> cryptography.hazmat.bindings.openssl._conditional"];
	"cryptography.hazmat.bindings.openssl.binding" [shape="record",label="<f0> SourceModule| <f1> cryptography.hazmat.bindings.openssl.binding"];
	"cryptography.hazmat.bindings._openssl.ffi" [shape="record",label="<f0> MissingModule| <f1> cryptography.hazmat.bindings._openssl.ffi"];
	"cryptography.hazmat.bindings._openssl.lib" [shape="record",label="<f0> MissingModule| <f1> cryptography.hazmat.bindings._openssl.lib"];
	"cryptography.hazmat.bindings._openssl" [shape="record",label="<f0> Extension| <f1> cryptography.hazmat.bindings._openssl"];
	"cryptography.hazmat.bindings" [shape="record",label="<f0> Package| <f1> cryptography.hazmat.bindings"];
	"cryptography.hazmat" [shape="record",label="<f0> Package| <f1> cryptography.hazmat"];
	"cryptography.exceptions" [shape="record",label="<f0> SourceModule| <f1> cryptography.exceptions"];
	"enum" [shape="record",label="<f0> Package| <f1> enum"];
	"cryptography.hazmat.bindings.openssl" [shape="record",label="<f0> Package| <f1> cryptography.hazmat.bindings.openssl"];
	"cryptography.__about__" [shape="record",label="<f0> SourceModule| <f1> cryptography.__about__"];
	"six" [shape="record",label="<f0> SourceModule| <f1> six"];
	"cryptography.hazmat.primitives.ciphers.algorithms" [shape="record",label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.ciphers.algorithms"];
	"cryptography.hazmat.primitives.ciphers" [shape="record",label="<f0> Package| <f1> cryptography.hazmat.primitives.ciphers"];
	"cryptography.hazmat.primitives.ciphers.base" [shape="record",label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.ciphers.base"];
	"cryptography.hazmat.backends.interfaces" [shape="record",label="<f0> SourceModule| <f1> cryptography.hazmat.backends.interfaces"];
	"cryptography.hazmat.primitives.serialization" [shape="record",label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.serialization"];
	"cryptography.hazmat.primitives.asymmetric.dsa" [shape="record",label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.asymmetric.dsa"];
	"cryptography.hazmat.primitives.asymmetric.ec" [shape="record",label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.asymmetric.ec"];
	"cryptography.hazmat.primitives.asymmetric.rsa" [shape="record",label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.asymmetric.rsa"];
	"fractions" [shape="record",label="<f0> SourceModule| <f1> fractions"];
	"numbers" [shape="record",label="<f0> SourceModule| <f1> numbers"];
	"decimal" [shape="record",label="<f0> SourceModule| <f1> decimal"];
	"cryptography.hazmat.primitives.asymmetric" [shape="record",label="<f0> Package| <f1> cryptography.hazmat.primitives.asymmetric"];
	"cryptography.hazmat.primitives.asymmetric.padding" [shape="record",label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.asymmetric.padding"];
	"cryptography.hazmat.primitives.hashes" [shape="record",label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.hashes"];
	"cryptography.hazmat.primitives" [shape="record",label="<f0> Package| <f1> cryptography.hazmat.primitives"];
	"cryptography.hazmat.backends" [shape="record",label="<f0> Package| <f1> cryptography.hazmat.backends"];
	"cryptography.hazmat.backends.multibackend" [shape="record",label="<f0> SourceModule| <f1> cryptography.hazmat.backends.multibackend"];
	"paramiko.agent" [shape="record",label="<f0> SourceModule| <f1> paramiko.agent"];
	"paramiko.win_pageant" [shape="record",label="<f0> SourceModule| <f1> paramiko.win_pageant"];
	"paramiko.file" [shape="record",label="<f0> SourceModule| <f1> paramiko.file"];
	"paramiko.packet" [shape="record",label="<f0> SourceModule| <f1> paramiko.packet"];
	"paramiko.message" [shape="record",label="<f0> SourceModule| <f1> paramiko.message"];
	"paramiko.sftp_file" [shape="record",label="<f0> SourceModule| <f1> paramiko.sftp_file"];
	"paramiko.sftp_si" [shape="record",label="<f0> SourceModule| <f1> paramiko.sftp_si"];
	"paramiko.sftp_handle" [shape="record",label="<f0> SourceModule| <f1> paramiko.sftp_handle"];
	"paramiko.sftp_attr" [shape="record",label="<f0> SourceModule| <f1> paramiko.sftp_attr"];
	"paramiko.sftp_server.SFTPServer" [shape="record",label="<f0> MissingModule| <f1> paramiko.sftp_server.SFTPServer"];
	"paramiko.sftp_server" [shape="record",label="<f0> SourceModule| <f1> paramiko.sftp_server"];
	"paramiko.sftp_client" [shape="record",label="<f0> SourceModule| <f1> paramiko.sftp_client"];
	"paramiko.sftp" [shape="record",label="<f0> SourceModule| <f1> paramiko.sftp"];
	"paramiko.ecdsakey" [shape="record",label="<f0> SourceModule| <f1> paramiko.ecdsakey"];
	"paramiko.util.deflate_long" [shape="record",label="<f0> MissingModule| <f1> paramiko.util.deflate_long"];
	"cryptography.hazmat.primitives.asymmetric.utils" [shape="record",label="<f0> SourceModule| <f1> cryptography.hazmat.primitives.asymmetric.utils"];
	"pyasn1.type.namedtype" [shape="record",label="<f0> SourceModule| <f1> pyasn1.type.namedtype"];
	"pyasn1" [shape="record",label="<f0> Package| <f1> pyasn1"];
	"pyasn1.debug" [shape="record",label="<f0> SourceModule| <f1> pyasn1.debug"];
	"pyasn1.compat.octets" [shape="record",label="<f0> SourceModule| <f1> pyasn1.compat.octets"];
	"pyasn1.compat" [shape="record",label="<f0> Package| <f1> pyasn1.compat"];
	"pyasn1.type.tagmap" [shape="record",label="<f0> SourceModule| <f1> pyasn1.type.tagmap"];
	"pyasn1.type.univ" [shape="record",label="<f0> SourceModule| <f1> pyasn1.type.univ"];
	"pyasn1.codec.ber.eoo" [shape="record",label="<f0> SourceModule| <f1> pyasn1.codec.ber.eoo"];
	"pyasn1.codec.ber" [shape="record",label="<f0> Package| <f1> pyasn1.codec.ber"];
	"pyasn1.codec.ber.decoder" [shape="record",label="<f0> SourceModule| <f1> pyasn1.codec.ber.decoder"];
	"pyasn1.type.useful" [shape="record",label="<f0> SourceModule| <f1> pyasn1.type.useful"];
	"pyasn1.type.char" [shape="record",label="<f0> SourceModule| <f1> pyasn1.type.char"];
	"pyasn1.codec.ber.encoder" [shape="record",label="<f0> SourceModule| <f1> pyasn1.codec.ber.encoder"];
	"pyasn1.codec" [shape="record",label="<f0> Package| <f1> pyasn1.codec"];
	"pyasn1.type.namedval" [shape="record",label="<f0> SourceModule| <f1> pyasn1.type.namedval"];
	"pyasn1.type.base" [shape="record",label="<f0> SourceModule| <f1> pyasn1.type.base"];
	"pyasn1.type.tag" [shape="record",label="<f0> SourceModule| <f1> pyasn1.type.tag"];
	"pyasn1.type.constraint" [shape="record",label="<f0> SourceModule| <f1> pyasn1.type.constraint"];
	"pyasn1.type.error" [shape="record",label="<f0> SourceModule| <f1> pyasn1.type.error"];
	"pyasn1.type" [shape="record",label="<f0> Package| <f1> pyasn1.type"];
	"pyasn1.error" [shape="record",label="<f0> SourceModule| <f1> pyasn1.error"];
	"pyasn1.codec.der.decoder" [shape="record",label="<f0> SourceModule| <f1> pyasn1.codec.der.decoder"];
	"pyasn1.codec.cer.decoder" [shape="record",label="<f0> SourceModule| <f1> pyasn1.codec.cer.decoder"];
	"pyasn1.codec.cer" [shape="record",label="<f0> Package| <f1> pyasn1.codec.cer"];
	"pyasn1.codec.cer.encoder" [shape="record",label="<f0> SourceModule| <f1> pyasn1.codec.cer.encoder"];
	"pyasn1.codec.der.encoder" [shape="record",label="<f0> SourceModule| <f1> pyasn1.codec.der.encoder"];
	"pyasn1.codec.der" [shape="record",label="<f0> Package| <f1> pyasn1.codec.der"];
	"paramiko.dsskey" [shape="record",label="<f0> SourceModule| <f1> paramiko.dsskey"];
	"paramiko.ber" [shape="record",label="<f0> SourceModule| <f1> paramiko.ber"];
	"paramiko.rsakey" [shape="record",label="<f0> SourceModule| <f1> paramiko.rsakey"];
	"paramiko.server" [shape="record",label="<f0> SourceModule| <f1> paramiko.server"];
	"paramiko.ssh_exception" [shape="record",label="<f0> SourceModule| <f1> paramiko.ssh_exception"];
	"paramiko.channel" [shape="record",label="<f0> SourceModule| <f1> paramiko.channel"];
	"paramiko.buffered_pipe" [shape="record",label="<f0> SourceModule| <f1> paramiko.buffered_pipe"];
	"paramiko.ssh_gss" [shape="record",label="<f0> SourceModule| <f1> paramiko.ssh_gss"];
	"sspi" [shape="record",label="<f0> MissingModule| <f1> sspi"];
	"sspicon" [shape="record",label="<f0> MissingModule| <f1> sspicon"];
	"gssapi" [shape="record",label="<f0> MissingModule| <f1> gssapi"];
	"paramiko.auth_handler" [shape="record",label="<f0> SourceModule| <f1> paramiko.auth_handler"];
	"paramiko.client" [shape="record",label="<f0> SourceModule| <f1> paramiko.client"];
	"paramiko.resource" [shape="record",label="<f0> SourceModule| <f1> paramiko.resource"];
	"paramiko._winapi" [shape="record",label="<f0> SourceModule| <f1> paramiko._winapi"];
	"paramiko.transport" [shape="record",label="<f0> SourceModule| <f1> paramiko.transport"];
	"paramiko.primes" [shape="record",label="<f0> SourceModule| <f1> paramiko.primes"];
	"paramiko.kex_gss" [shape="record",label="<f0> SourceModule| <f1> paramiko.kex_gss"];
	"paramiko.kex_group14" [shape="record",label="<f0> SourceModule| <f1> paramiko.kex_group14"];
	"paramiko.kex_group1" [shape="record",label="<f0> SourceModule| <f1> paramiko.kex_group1"];
	"paramiko.kex_gex" [shape="record",label="<f0> SourceModule| <f1> paramiko.kex_gex"];
	"paramiko.compress" [shape="record",label="<f0> SourceModule| <f1> paramiko.compress"];
	"paramiko.pipe" [shape="record",label="<f0> SourceModule| <f1> paramiko.pipe"];
	"paramiko.util" [shape="record",label="<f0> SourceModule| <f1> paramiko.util"];
	"paramiko._version" [shape="record",label="<f0> SourceModule| <f1> paramiko._version"];
	"spur.local" [shape="record",label="<f0> SourceModule| <f1> spur.local"];
	"pty" [shape="record",label="<f0> SourceModule| <f1> pty"];
	"sgi" [shape="record",label="<f0> MissingModule| <f1> sgi"];
	"tty" [shape="record",label="<f0> SourceModule| <f1> tty"];
	"spur.results" [shape="record",label="<f0> SourceModule| <f1> spur.results"];
	"tkSimpleDialog" [shape="record",label="<f0> SourceModule| <f1> tkSimpleDialog"];
	"ttk" [shape="record",label="<f0> SourceModule| <f1> ttk"];
	"tkMessageBox" [shape="record",label="<f0> SourceModule| <f1> tkMessageBox"];
	"tkCommonDialog" [shape="record",label="<f0> SourceModule| <f1> tkCommonDialog"];
	"Tkinter" [shape="record",label="<f0> SourceModule| <f1> Tkinter"];
	"Tkconstants" [shape="record",label="<f0> SourceModule| <f1> Tkconstants"];
	"_tkinter" [shape="record",label="<f0> Extension| <f1> _tkinter"];
	"FixTk" [shape="record",label="<f0> SourceModule| <f1> FixTk"];
	"codecs" [shape="record",label="<f0> SourceModule| <f1> codecs"];
	subgraph "cluster_cryptography.hazmat.bindings" {
		label="cryptography.hazmat.bindings";
		"cryptography.hazmat.bindings" -> "cryptography.hazmat.bindings._openssl" [style="dotted"];
		"cryptography.hazmat.bindings" -> "cryptography.hazmat.bindings.openssl" [style="dotted"];
	}
	subgraph "cluster_xml.sax" {
		label="xml.sax";
		"xml.sax" -> "xml.sax.xmlreader" [style="dotted"];
		"xml.sax" -> "xml.sax.handler" [style="dotted"];
		"xml.sax" -> "xml.sax._exceptions" [style="dotted"];
		"xml.sax" -> "xml.sax.expatreader" [style="dotted"];
		"xml.sax" -> "xml.sax.saxutils" [style="dotted"];
	}
	subgraph "cluster_unittest" {
		label="unittest";
		"unittest" -> "unittest.util" [style="dotted"];
		"unittest" -> "unittest.result" [style="dotted"];
		"unittest" -> "unittest.case" [style="dotted"];
		"unittest" -> "unittest.suite" [style="dotted"];
		"unittest" -> "unittest.loader" [style="dotted"];
		"unittest" -> "unittest.runner" [style="dotted"];
		"unittest" -> "unittest.main" [style="dotted"];
		"unittest" -> "unittest.signals" [style="dotted"];
	}
	subgraph "cluster_pyasn1.codec.der" {
		label="pyasn1.codec.der";
		"pyasn1.codec.der" -> "pyasn1.codec.der.encoder" [style="dotted"];
		"pyasn1.codec.der" -> "pyasn1.codec.der.decoder" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat.backends" {
		label="cryptography.hazmat.backends";
		"cryptography.hazmat.backends" -> "cryptography.hazmat.backends.multibackend" [style="dotted"];
		"cryptography.hazmat.backends" -> "cryptography.hazmat.backends.interfaces" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat" {
		label="cryptography.hazmat";
		"cryptography.hazmat" -> "cryptography.hazmat.bindings" [style="dotted"];
		"cryptography.hazmat" -> "cryptography.hazmat.primitives" [style="dotted"];
		"cryptography.hazmat" -> "cryptography.hazmat.backends" [style="dotted"];
	}
	subgraph "cluster_xml.parsers" {
		label="xml.parsers";
		"xml.parsers" -> "xml.parsers.expat" [style="dotted"];
	}
	subgraph "cluster_encodings" {
		label="encodings";
		"encodings" -> "encodings.aliases" [style="dotted"];
		"encodings" -> "encodings.cp932" [style="dotted"];
		"encodings" -> "encodings.johab" [style="dotted"];
		"encodings" -> "encodings.cp950" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_ext" [style="dotted"];
		"encodings" -> "encodings.cp424" [style="dotted"];
		"encodings" -> "encodings.big5" [style="dotted"];
		"encodings" -> "encodings.cp1140" [style="dotted"];
		"encodings" -> "encodings.mac_romanian" [style="dotted"];
		"encodings" -> "encodings.cp775" [style="dotted"];
		"encodings" -> "encodings.euc_jis_2004" [style="dotted"];
		"encodings" -> "encodings.utf_32_le" [style="dotted"];
		"encodings" -> "encodings.utf_7" [style="dotted"];
		"encodings" -> "encodings.euc_kr" [style="dotted"];
		"encodings" -> "encodings.mac_arabic" [style="dotted"];
		"encodings" -> "encodings.utf_8" [style="dotted"];
		"encodings" -> "encodings.cp037" [style="dotted"];
		"encodings" -> "encodings.base64_codec" [style="dotted"];
		"encodings" -> "encodings.big5hkscs" [style="dotted"];
		"encodings" -> "encodings.cp862" [style="dotted"];
		"encodings" -> "encodings.iso8859_9" [style="dotted"];
		"encodings" -> "encodings.iso8859_8" [style="dotted"];
		"encodings" -> "encodings.gb2312" [style="dotted"];
		"encodings" -> "encodings.iso8859_3" [style="dotted"];
		"encodings" -> "encodings.iso8859_2" [style="dotted"];
		"encodings" -> "encodings.iso8859_1" [style="dotted"];
		"encodings" -> "encodings.iso8859_7" [style="dotted"];
		"encodings" -> "encodings.iso8859_6" [style="dotted"];
		"encodings" -> "encodings.iso8859_5" [style="dotted"];
		"encodings" -> "encodings.iso8859_4" [style="dotted"];
		"encodings" -> "encodings.cp857" [style="dotted"];
		"encodings" -> "encodings.cp856" [style="dotted"];
		"encodings" -> "encodings.cp855" [style="dotted"];
		"encodings" -> "encodings.cp852" [style="dotted"];
		"encodings" -> "encodings.cp850" [style="dotted"];
		"encodings" -> "encodings.cp858" [style="dotted"];
		"encodings" -> "encodings.mac_iceland" [style="dotted"];
		"encodings" -> "encodings.gbk" [style="dotted"];
		"encodings" -> "encodings.shift_jis_2004" [style="dotted"];
		"encodings" -> "encodings.mac_greek" [style="dotted"];
		"encodings" -> "encodings.palmos" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp" [style="dotted"];
		"encodings" -> "encodings.utf_8_sig" [style="dotted"];
		"encodings" -> "encodings.koi8_r" [style="dotted"];
		"encodings" -> "encodings.koi8_u" [style="dotted"];
		"encodings" -> "encodings.mac_turkish" [style="dotted"];
		"encodings" -> "encodings.mac_farsi" [style="dotted"];
		"encodings" -> "encodings.cp1026" [style="dotted"];
		"encodings" -> "encodings.undefined" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_1" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_3" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_2" [style="dotted"];
		"encodings" -> "encodings.utf_16_le" [style="dotted"];
		"encodings" -> "encodings.uu_codec" [style="dotted"];
		"encodings" -> "encodings.ptcp154" [style="dotted"];
		"encodings" -> "encodings.euc_jisx0213" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_2004" [style="dotted"];
		"encodings" -> "encodings.zlib_codec" [style="dotted"];
		"encodings" -> "encodings.tis_620" [style="dotted"];
		"encodings" -> "encodings.cp720" [style="dotted"];
		"encodings" -> "encodings.cp875" [style="dotted"];
		"encodings" -> "encodings.cp874" [style="dotted"];
		"encodings" -> "encodings.bz2_codec" [style="dotted"];
		"encodings" -> "encodings.unicode_escape" [style="dotted"];
		"encodings" -> "encodings.punycode" [style="dotted"];
		"encodings" -> "encodings.mac_croatian" [style="dotted"];
		"encodings" -> "encodings.mac_centeuro" [style="dotted"];
		"encodings" -> "encodings.mac_roman" [style="dotted"];
		"encodings" -> "encodings.cp437" [style="dotted"];
		"encodings" -> "encodings.utf_16" [style="dotted"];
		"encodings" -> "encodings.cp737" [style="dotted"];
		"encodings" -> "encodings.utf_16_be" [style="dotted"];
		"encodings" -> "encodings.latin_1" [style="dotted"];
		"encodings" -> "encodings.utf_32" [style="dotted"];
		"encodings" -> "encodings.charmap" [style="dotted"];
		"encodings" -> "encodings.hp_roman8" [style="dotted"];
		"encodings" -> "encodings.cp1006" [style="dotted"];
		"encodings" -> "encodings.iso8859_16" [style="dotted"];
		"encodings" -> "encodings.iso8859_15" [style="dotted"];
		"encodings" -> "encodings.iso8859_14" [style="dotted"];
		"encodings" -> "encodings.iso8859_13" [style="dotted"];
		"encodings" -> "encodings.iso8859_11" [style="dotted"];
		"encodings" -> "encodings.iso8859_10" [style="dotted"];
		"encodings" -> "encodings.cp500" [style="dotted"];
		"encodings" -> "encodings.unicode_internal" [style="dotted"];
		"encodings" -> "encodings.iso2022_kr" [style="dotted"];
		"encodings" -> "encodings.mac_cyrillic" [style="dotted"];
		"encodings" -> "encodings.hz" [style="dotted"];
		"encodings" -> "encodings.euc_jp" [style="dotted"];
		"encodings" -> "encodings.cp1258" [style="dotted"];
		"encodings" -> "encodings.cp1257" [style="dotted"];
		"encodings" -> "encodings.cp1256" [style="dotted"];
		"encodings" -> "encodings.cp1255" [style="dotted"];
		"encodings" -> "encodings.cp1254" [style="dotted"];
		"encodings" -> "encodings.cp1253" [style="dotted"];
		"encodings" -> "encodings.cp1252" [style="dotted"];
		"encodings" -> "encodings.cp1251" [style="dotted"];
		"encodings" -> "encodings.cp1250" [style="dotted"];
		"encodings" -> "encodings.string_escape" [style="dotted"];
		"encodings" -> "encodings.utf_32_be" [style="dotted"];
		"encodings" -> "encodings.quopri_codec" [style="dotted"];
		"encodings" -> "encodings.cp949" [style="dotted"];
		"encodings" -> "encodings.idna" [style="dotted"];
		"encodings" -> "encodings.hex_codec" [style="dotted"];
		"encodings" -> "encodings.mac_latin2" [style="dotted"];
		"encodings" -> "encodings.cp869" [style="dotted"];
		"encodings" -> "encodings.cp866" [style="dotted"];
		"encodings" -> "encodings.cp864" [style="dotted"];
		"encodings" -> "encodings.cp865" [style="dotted"];
		"encodings" -> "encodings.shift_jis" [style="dotted"];
		"encodings" -> "encodings.cp863" [style="dotted"];
		"encodings" -> "encodings.cp860" [style="dotted"];
		"encodings" -> "encodings.cp861" [style="dotted"];
		"encodings" -> "encodings.ascii" [style="dotted"];
		"encodings" -> "encodings.shift_jisx0213" [style="dotted"];
		"encodings" -> "encodings.gb18030" [style="dotted"];
		"encodings" -> "encodings.raw_unicode_escape" [style="dotted"];
		"encodings" -> "encodings.mbcs" [style="dotted"];
		"encodings" -> "encodings.rot_13" [style="dotted"];
	}
	subgraph "cluster_serial" {
		label="serial";
		"serial" -> "serial.serialutil" [style="dotted"];
		"serial" -> "serial.serialcli" [style="dotted"];
		"serial" -> "serial.win32" [style="dotted"];
		"serial" -> "serial.serialwin32" [style="dotted"];
		"serial" -> "serial.serialposix" [style="dotted"];
		"serial" -> "serial.serialjava" [style="dotted"];
	}
	subgraph "cluster_email.mime" {
		label="email.mime";
	}
	subgraph "cluster_paramiko" {
		label="paramiko";
		"paramiko" -> "paramiko._version" [style="dotted"];
		"paramiko" -> "paramiko.util" [style="dotted"];
		"paramiko" -> "paramiko.pipe" [style="dotted"];
		"paramiko" -> "paramiko.transport" [style="dotted"];
		"paramiko" -> "paramiko._winapi" [style="dotted"];
		"paramiko" -> "paramiko.client" [style="dotted"];
		"paramiko" -> "paramiko.auth_handler" [style="dotted"];
		"paramiko" -> "paramiko.ssh_gss" [style="dotted"];
		"paramiko" -> "paramiko.channel" [style="dotted"];
		"paramiko" -> "paramiko.ssh_exception" [style="dotted"];
		"paramiko" -> "paramiko.server" [style="dotted"];
		"paramiko" -> "paramiko.rsakey" [style="dotted"];
		"paramiko" -> "paramiko.dsskey" [style="dotted"];
		"paramiko" -> "paramiko.ecdsakey" [style="dotted"];
		"paramiko" -> "paramiko.sftp" [style="dotted"];
		"paramiko" -> "paramiko.sftp_client" [style="dotted"];
		"paramiko" -> "paramiko.sftp_server" [style="dotted"];
		"paramiko" -> "paramiko.sftp_attr" [style="dotted"];
		"paramiko" -> "paramiko.sftp_handle" [style="dotted"];
		"paramiko" -> "paramiko.sftp_si" [style="dotted"];
		"paramiko" -> "paramiko.sftp_file" [style="dotted"];
		"paramiko" -> "paramiko.message" [style="dotted"];
		"paramiko" -> "paramiko.packet" [style="dotted"];
		"paramiko" -> "paramiko.file" [style="dotted"];
		"paramiko" -> "paramiko.agent" [style="dotted"];
		"paramiko" -> "paramiko.pkey" [style="dotted"];
		"paramiko" -> "paramiko.hostkeys" [style="dotted"];
		"paramiko" -> "paramiko.config" [style="dotted"];
		"paramiko" -> "paramiko.proxy" [style="dotted"];
		"paramiko" -> "paramiko.common" [style="dotted"];
		"paramiko" -> "paramiko.py3compat" [style="dotted"];
		"paramiko" -> "paramiko.win_pageant" [style="dotted"];
		"paramiko" -> "paramiko.ber" [style="dotted"];
		"paramiko" -> "paramiko.buffered_pipe" [style="dotted"];
		"paramiko" -> "paramiko.resource" [style="dotted"];
		"paramiko" -> "paramiko.compress" [style="dotted"];
		"paramiko" -> "paramiko.kex_gex" [style="dotted"];
		"paramiko" -> "paramiko.kex_group1" [style="dotted"];
		"paramiko" -> "paramiko.kex_group14" [style="dotted"];
		"paramiko" -> "paramiko.kex_gss" [style="dotted"];
		"paramiko" -> "paramiko.primes" [style="dotted"];
	}
	subgraph "cluster_xml" {
		label="xml";
		"xml" -> "xml.parsers" [style="dotted"];
		"xml" -> "xml.sax" [style="dotted"];
	}
	subgraph "cluster_distutils" {
		label="distutils";
		"distutils" -> "distutils.log" [style="dotted"];
		"distutils" -> "distutils.sysconfig" [style="dotted"];
		"distutils" -> "distutils.util" [style="dotted"];
		"distutils" -> "distutils.errors" [style="dotted"];
		"distutils" -> "distutils.dep_util" [style="dotted"];
		"distutils" -> "distutils.spawn" [style="dotted"];
		"distutils" -> "distutils.text_file" [style="dotted"];
		"distutils" -> "distutils.debug" [style="dotted"];
	}
	subgraph "cluster_pkg_resources._vendor" {
		label="pkg_resources._vendor";
		"pkg_resources._vendor" -> "pkg_resources._vendor.pyparsing" [style="dotted"];
		"pkg_resources._vendor" -> "pkg_resources._vendor.six" [style="dotted"];
		"pkg_resources._vendor" -> "pkg_resources._vendor.appdirs" [style="dotted"];
		"pkg_resources._vendor" -> "pkg_resources._vendor.packaging" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat.bindings.openssl" {
		label="cryptography.hazmat.bindings.openssl";
		"cryptography.hazmat.bindings.openssl" -> "cryptography.hazmat.bindings.openssl.binding" [style="dotted"];
		"cryptography.hazmat.bindings.openssl" -> "cryptography.hazmat.bindings.openssl._conditional" [style="dotted"];
	}
	subgraph "cluster_email" {
		label="email";
		"email" -> "email.errors" [style="dotted"];
		"email" -> "email.message" [style="dotted"];
		"email" -> "email.parser" [style="dotted"];
		"email" -> "email.mime" [style="dotted"];
		"email" -> "email.feedparser" [style="dotted"];
		"email" -> "email.charset" [style="dotted"];
		"email" -> "email.utils" [style="dotted"];
		"email" -> "email.generator" [style="dotted"];
		"email" -> "email.iterators" [style="dotted"];
		"email" -> "email.header" [style="dotted"];
		"email" -> "email.quoprimime" [style="dotted"];
		"email" -> "email.base64mime" [style="dotted"];
		"email" -> "email._parseaddr" [style="dotted"];
		"email" -> "email.encoders" [style="dotted"];
	}
	subgraph "cluster_pkg_resources.extern" {
		label="pkg_resources.extern";
		"pkg_resources.extern" -> "pkg_resources.extern.six" [style="dotted"];
		"pkg_resources.extern" -> "pkg_resources.extern.appdirs" [style="dotted"];
		"pkg_resources.extern" -> "pkg_resources.extern.packaging" [style="dotted"];
	}
	subgraph "cluster_cryptography" {
		label="cryptography";
		"cryptography" -> "cryptography.__about__" [style="dotted"];
		"cryptography" -> "cryptography.utils" [style="dotted"];
		"cryptography" -> "cryptography.exceptions" [style="dotted"];
		"cryptography" -> "cryptography.hazmat" [style="dotted"];
	}
	subgraph "cluster_pyasn1.codec.ber" {
		label="pyasn1.codec.ber";
		"pyasn1.codec.ber" -> "pyasn1.codec.ber.eoo" [style="dotted"];
		"pyasn1.codec.ber" -> "pyasn1.codec.ber.encoder" [style="dotted"];
		"pyasn1.codec.ber" -> "pyasn1.codec.ber.decoder" [style="dotted"];
	}
	subgraph "cluster_enum" {
		label="enum";
	}
	subgraph "cluster_ctypes" {
		label="ctypes";
		"ctypes" -> "ctypes._endian" [style="dotted"];
		"ctypes" -> "ctypes.util" [style="dotted"];
		"ctypes" -> "ctypes.wintypes" [style="dotted"];
	}
	subgraph "cluster_spur" {
		label="spur";
		"spur" -> "spur.results" [style="dotted"];
		"spur" -> "spur.local" [style="dotted"];
		"spur" -> "spur.ssh" [style="dotted"];
		"spur" -> "spur.errors" [style="dotted"];
		"spur" -> "spur.tempdir" [style="dotted"];
		"spur" -> "spur.files" [style="dotted"];
		"spur" -> "spur.io" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat.primitives" {
		label="cryptography.hazmat.primitives";
		"cryptography.hazmat.primitives" -> "cryptography.hazmat.primitives.serialization" [style="dotted"];
		"cryptography.hazmat.primitives" -> "cryptography.hazmat.primitives.hashes" [style="dotted"];
		"cryptography.hazmat.primitives" -> "cryptography.hazmat.primitives.ciphers" [style="dotted"];
		"cryptography.hazmat.primitives" -> "cryptography.hazmat.primitives.asymmetric" [style="dotted"];
	}
	subgraph "cluster_importlib" {
		label="importlib";
	}
	subgraph "cluster_logging" {
		label="logging";
	}
	subgraph "cluster_pkg_resources._vendor.packaging" {
		label="pkg_resources._vendor.packaging";
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.__about__" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.utils" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging._compat" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.requirements" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.specifiers" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging._structures" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.markers" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.version" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat.primitives.asymmetric" {
		label="cryptography.hazmat.primitives.asymmetric";
		"cryptography.hazmat.primitives.asymmetric" -> "cryptography.hazmat.primitives.asymmetric.rsa" [style="dotted"];
		"cryptography.hazmat.primitives.asymmetric" -> "cryptography.hazmat.primitives.asymmetric.ec" [style="dotted"];
		"cryptography.hazmat.primitives.asymmetric" -> "cryptography.hazmat.primitives.asymmetric.dsa" [style="dotted"];
		"cryptography.hazmat.primitives.asymmetric" -> "cryptography.hazmat.primitives.asymmetric.padding" [style="dotted"];
		"cryptography.hazmat.primitives.asymmetric" -> "cryptography.hazmat.primitives.asymmetric.utils" [style="dotted"];
	}
	subgraph "cluster_pyasn1.compat" {
		label="pyasn1.compat";
		"pyasn1.compat" -> "pyasn1.compat.octets" [style="dotted"];
	}
	subgraph "cluster_pkg_resources" {
		label="pkg_resources";
		"pkg_resources" -> "pkg_resources.extern" [style="dotted"];
		"pkg_resources" -> "pkg_resources._vendor" [style="dotted"];
	}
	subgraph "cluster_pyasn1.codec.cer" {
		label="pyasn1.codec.cer";
		"pyasn1.codec.cer" -> "pyasn1.codec.cer.encoder" [style="dotted"];
		"pyasn1.codec.cer" -> "pyasn1.codec.cer.decoder" [style="dotted"];
	}
	subgraph "cluster_pyasn1.type" {
		label="pyasn1.type";
		"pyasn1.type" -> "pyasn1.type.error" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.constraint" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.tag" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.tagmap" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.base" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.namedtype" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.namedval" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.univ" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.char" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.useful" [style="dotted"];
	}
	subgraph "cluster_pyasn1.codec" {
		label="pyasn1.codec";
		"pyasn1.codec" -> "pyasn1.codec.ber" [style="dotted"];
		"pyasn1.codec" -> "pyasn1.codec.cer" [style="dotted"];
		"pyasn1.codec" -> "pyasn1.codec.der" [style="dotted"];
	}
	subgraph "cluster_pyasn1" {
		label="pyasn1";
		"pyasn1" -> "pyasn1.debug" [style="dotted"];
		"pyasn1" -> "pyasn1.error" [style="dotted"];
		"pyasn1" -> "pyasn1.compat" [style="dotted"];
		"pyasn1" -> "pyasn1.codec" [style="dotted"];
		"pyasn1" -> "pyasn1.type" [style="dotted"];
	}
	subgraph "cluster_cryptography.hazmat.primitives.ciphers" {
		label="cryptography.hazmat.primitives.ciphers";
		"cryptography.hazmat.primitives.ciphers" -> "cryptography.hazmat.primitives.ciphers.modes" [style="dotted"];
		"cryptography.hazmat.primitives.ciphers" -> "cryptography.hazmat.primitives.ciphers.base" [style="dotted"];
		"cryptography.hazmat.primitives.ciphers" -> "cryptography.hazmat.primitives.ciphers.algorithms" [style="dotted"];
	}
	"<PyiModuleGraph>" -> "codecs" [];
	"<PyiModuleGraph>" -> "/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" [];
	"<PyiModuleGraph>" -> "posix" [];
	"<PyiModuleGraph>" -> "_sre" [];
	"<PyiModuleGraph>" -> "posixpath" [];
	"<PyiModuleGraph>" -> "gc" [];
	"<PyiModuleGraph>" -> "time" [];
	"<PyiModuleGraph>" -> "datetime" [];
	"<PyiModuleGraph>" -> "cStringIO" [];
	"<PyiModuleGraph>" -> "cPickle" [];
	"<PyiModuleGraph>" -> "_ssl" [];
	"<PyiModuleGraph>" -> "zipimport" [];
	"<PyiModuleGraph>" -> "MacOS" [];
	"MacOS" -> "macresource" [];
	"zipimport" -> "zlib" [];
	"zipimport" -> "zipimport.zipimporter" [];
	"_ssl" -> "socket" [];
	"_ssl" -> "_ssl.OPENSSL_VERSION" [];
	"_ssl" -> "_ssl.OPENSSL_VERSION_INFO" [];
	"_ssl" -> "_ssl.OPENSSL_VERSION_NUMBER" [];
	"_ssl" -> "_ssl._SSLContext" [];
	"_ssl" -> "_ssl.SSLZeroReturnError" [];
	"_ssl" -> "_ssl.SSLSyscallError" [];
	"_ssl" -> "_ssl.SSLWantWriteError" [];
	"_ssl" -> "_ssl.SSLError" [];
	"_ssl" -> "_ssl.SSLWantReadError" [];
	"_ssl" -> "_ssl.SSLEOFError" [];
	"_ssl" -> "_ssl.CERT_OPTIONAL" [];
	"_ssl" -> "_ssl.CERT_NONE" [];
	"_ssl" -> "_ssl.CERT_REQUIRED" [];
	"_ssl" -> "_ssl.nid2obj" [];
	"_ssl" -> "_ssl.txt2obj" [];
	"_ssl" -> "_ssl.RAND_add" [];
	"_ssl" -> "_ssl.RAND_status" [];
	"_ssl" -> "_ssl.RAND_egd" [];
	"_ssl" -> "_ssl.HAS_SNI" [];
	"_ssl" -> "_ssl.HAS_NPN" [];
	"_ssl" -> "_ssl.HAS_ALPN" [];
	"_ssl" -> "_ssl.HAS_ECDH" [];
	"_ssl" -> "_ssl._OPENSSL_API_VERSION" [];
	"_ssl" -> "_ssl.enum_certificates" [];
	"_ssl" -> "_ssl.enum_crls" [];
	"_ssl" -> "_ssl.SSL_ERROR_SYSCALL" [];
	"_ssl" -> "_ssl.SSL_ERROR_WANT_WRITE" [];
	"_ssl" -> "_ssl.SSL_ERROR_INVALID_ERROR_CODE" [];
	"_ssl" -> "_ssl.SSL_ERROR_SSL" [];
	"_ssl" -> "_ssl.SSL_ERROR_WANT_X509_LOOKUP" [];
	"_ssl" -> "_ssl.SSL_ERROR_ZERO_RETURN" [];
	"_ssl" -> "_ssl.SSL_ERROR_WANT_CONNECT" [];
	"_ssl" -> "_ssl.SSL_ERROR_WANT_READ" [];
	"_ssl" -> "_ssl.SSL_ERROR_EOF" [];
	"socket" -> "_socket" [];
	"socket" -> "functools" [];
	"socket" -> "types" [];
	"socket" -> "_ssl" [];
	"socket" -> "socket._fileobject" [];
	"socket" -> "socket._delegate_methods" [];
	"socket" -> "socket.socket" [];
	"socket" -> "socket.error" [];
	"socket" -> "socket.SOCK_STREAM" [];
	"socket" -> "socket.create_connection" [];
	"socket" -> "socket.AF_INET" [];
	"socket" -> "socket.SOL_SOCKET" [];
	"socket" -> "socket.SO_TYPE" [];
	"socket" -> "ssl" [];
	"socket" -> "_ssl.SSLError" [];
	"socket" -> "_ssl.SSL_ERROR_SYSCALL" [];
	"socket" -> "_ssl.RAND_add" [];
	"socket" -> "_ssl.SSL_ERROR_WANT_WRITE" [];
	"socket" -> "_ssl.SSL_ERROR_INVALID_ERROR_CODE" [];
	"socket" -> "_ssl.RAND_status" [];
	"socket" -> "_ssl.SSL_ERROR_SSL" [];
	"socket" -> "_ssl.SSL_ERROR_WANT_X509_LOOKUP" [];
	"socket" -> "_ssl.SSL_ERROR_ZERO_RETURN" [];
	"socket" -> "_ssl.SSL_ERROR_WANT_CONNECT" [];
	"socket" -> "_ssl.SSL_ERROR_WANT_READ" [];
	"socket" -> "_ssl.SSL_ERROR_EOF" [];
	"socket" -> "_ssl.RAND_egd" [];
	"socket" -> "os" [];
	"socket" -> "sys" [];
	"socket" -> "warnings" [];
	"socket" -> "cStringIO" [];
	"socket" -> "cStringIO.StringIO" [];
	"socket" -> "StringIO" [];
	"socket" -> "errno" [];
	"errno" -> "errno.ENOENT" [];
	"errno" -> "errno.EINVAL" [];
	"errno" -> "errno.ECONNREFUSED" [];
	"errno" -> "errno.EHOSTUNREACH" [];
	"StringIO" -> "errno" [];
	"StringIO" -> "errno.EINVAL" [];
	"StringIO" -> "sys" [];
	"warnings" -> "linecache" [];
	"warnings" -> "sys" [];
	"warnings" -> "types" [];
	"warnings" -> "re" [];
	"warnings" -> "_warnings" [];
	"warnings" -> "_warnings.warn" [];
	"warnings" -> "_warnings.default_action" [];
	"warnings" -> "_warnings.once_registry" [];
	"warnings" -> "_warnings.filters" [];
	"warnings" -> "_warnings.warn_explicit" [];
	"_warnings" -> "_warnings.warn" [];
	"_warnings" -> "_warnings.default_action" [];
	"_warnings" -> "_warnings.once_registry" [];
	"_warnings" -> "_warnings.filters" [];
	"_warnings" -> "_warnings.warn_explicit" [];
	"re" -> "sys" [];
	"re" -> "re.__all__" [];
	"re" -> "re._compile" [];
	"re" -> "sre_compile" [];
	"re" -> "sre_parse" [];
	"re" -> "_locale" [];
	"re" -> "copy_reg" [];
	"re" -> "sre_constants" [];
	"sre_constants" -> "_sre" [];
	"sre_constants" -> "_sre.MAXREPEAT" [];
	"copy_reg" -> "types" [];
	"sre_parse" -> "sys" [];
	"sre_parse" -> "sre_constants" [];
	"sre_parse" -> "warnings" [];
	"sre_compile" -> "_sre" [];
	"sre_compile" -> "sys" [];
	"sre_compile" -> "sre_parse" [];
	"sre_compile" -> "sre_constants" [];
	"sre_compile" -> "array" [];
	"array" -> "array.array" [];
	"linecache" -> "sys" [];
	"linecache" -> "os" [];
	"sys" -> "sys.getwindowsversion" [];
	"sys" -> "sys.py3kwarning" [];
	"sys" -> "sys.version_info" [];
	"os" -> "sys" [];
	"os" -> "errno" [];
	"os" -> "posix" [];
	"os" -> "posix._exit" [];
	"os" -> "posixpath" [];
	"os" -> "nt" [];
	"os" -> "nt._exit" [];
	"os" -> "ntpath" [];
	"os" -> "os2" [];
	"os" -> "os2._exit" [];
	"os" -> "os2emxpath" [];
	"os" -> "_emx_link" [];
	"os" -> "_emx_link.link" [];
	"os" -> "ce" [];
	"os" -> "ce._exit" [];
	"os" -> "riscos" [];
	"os" -> "riscos._exit" [];
	"os" -> "riscospath" [];
	"os" -> "os.path" [];
	"os" -> "UserDict" [];
	"os" -> "riscosenviron" [];
	"os" -> "riscosenviron._Environ" [];
	"os" -> "warnings" [];
	"os" -> "os.urandom" [];
	"os" -> "subprocess" [];
	"os" -> "copy_reg" [];
	"os" -> "os.utime" [];
	"os" -> "os.rename" [];
	"os" -> "os.unlink" [];
	"os" -> "os.mkdir" [];
	"os" -> "os.open" [];
	"subprocess" -> "sys" [];
	"subprocess" -> "os" [];
	"subprocess" -> "types" [];
	"subprocess" -> "traceback" [];
	"subprocess" -> "gc" [];
	"subprocess" -> "signal" [];
	"subprocess" -> "errno" [];
	"subprocess" -> "threading" [];
	"subprocess" -> "msvcrt" [];
	"subprocess" -> "_subprocess" [];
	"subprocess" -> "select" [];
	"subprocess" -> "fcntl" [];
	"subprocess" -> "pickle" [];
	"subprocess" -> "_subprocess.SW_HIDE" [];
	"subprocess" -> "_subprocess.STARTF_USESTDHANDLES" [];
	"subprocess" -> "_subprocess.STD_ERROR_HANDLE" [];
	"subprocess" -> "_subprocess.CREATE_NEW_CONSOLE" [];
	"subprocess" -> "_subprocess.STARTF_USESHOWWINDOW" [];
	"subprocess" -> "_subprocess.STD_INPUT_HANDLE" [];
	"subprocess" -> "_subprocess.CREATE_NEW_PROCESS_GROUP" [];
	"subprocess" -> "_subprocess.STD_OUTPUT_HANDLE" [];
	"pickle" -> "types" [];
	"pickle" -> "copy_reg" [];
	"pickle" -> "marshal" [];
	"pickle" -> "sys" [];
	"pickle" -> "struct" [];
	"pickle" -> "re" [];
	"pickle" -> "'org.python'" [];
	"pickle" -> "'org.python'.PyStringMap" [];
	"pickle" -> "binascii" [];
	"pickle" -> "cStringIO" [];
	"pickle" -> "cStringIO.StringIO" [];
	"pickle" -> "StringIO" [];
	"pickle" -> "doctest" [];
	"doctest" -> "__future__" [];
	"doctest" -> "sys" [];
	"doctest" -> "traceback" [];
	"doctest" -> "inspect" [];
	"doctest" -> "linecache" [];
	"doctest" -> "os" [];
	"doctest" -> "re" [];
	"doctest" -> "unittest" [];
	"doctest" -> "difflib" [];
	"doctest" -> "pdb" [];
	"doctest" -> "tempfile" [];
	"doctest" -> "warnings" [];
	"doctest" -> "StringIO" [];
	"doctest" -> "collections" [];
	"doctest" -> "collections.namedtuple" [];
	"doctest" -> "types" [];
	"collections" -> "_abcoll" [];
	"collections" -> "_collections" [];
	"collections" -> "_collections.defaultdict" [];
	"collections" -> "_collections.deque" [];
	"collections" -> "operator" [];
	"collections" -> "operator.eq" [];
	"collections" -> "operator.itemgetter" [];
	"collections" -> "keyword" [];
	"collections" -> "sys" [];
	"collections" -> "collections.namedtuple" [];
	"collections" -> "collections.OrderedDict" [];
	"collections" -> "collections.deque" [];
	"collections" -> "heapq" [];
	"collections" -> "itertools" [];
	"collections" -> "itertools.repeat" [];
	"collections" -> "itertools.starmap" [];
	"collections" -> "itertools.chain" [];
	"collections" -> "itertools.imap" [];
	"collections" -> "thread" [];
	"collections" -> "thread.get_ident" [];
	"collections" -> "dummy_thread" [];
	"collections" -> "cPickle" [];
	"collections" -> "cPickle.dumps" [];
	"collections" -> "cPickle.loads" [];
	"collections" -> "doctest" [];
	"collections" -> "collections.MutableMapping" [];
	"dummy_thread" -> "traceback" [];
	"thread" -> "thread.allocate_lock" [];
	"thread" -> "thread.get_ident" [];
	"thread" -> "thread.stack_size" [];
	"thread" -> "thread._local" [];
	"itertools" -> "itertools.islice" [];
	"itertools" -> "itertools.chain" [];
	"itertools" -> "itertools.count" [];
	"itertools" -> "itertools.izip" [];
	"itertools" -> "itertools.tee" [];
	"itertools" -> "itertools.imap" [];
	"itertools" -> "itertools.repeat" [];
	"itertools" -> "itertools.starmap" [];
	"heapq" -> "itertools" [];
	"heapq" -> "itertools.count" [];
	"heapq" -> "itertools.chain" [];
	"heapq" -> "itertools.izip" [];
	"heapq" -> "itertools.tee" [];
	"heapq" -> "itertools.islice" [];
	"heapq" -> "itertools.imap" [];
	"heapq" -> "operator" [];
	"heapq" -> "operator.itemgetter" [];
	"heapq" -> "_heapq" [];
	"heapq" -> "doctest" [];
	"keyword" -> "sys" [];
	"keyword" -> "re" [];
	"operator" -> "operator.eq" [];
	"operator" -> "operator.itemgetter" [];
	"operator" -> "operator.attrgetter" [];
	"operator" -> "operator._compare_digest" [];
	"operator" -> "operator.getitem" [];
	"_collections" -> "_collections.defaultdict" [];
	"_collections" -> "_collections.deque" [];
	"_abcoll" -> "abc" [];
	"_abcoll" -> "sys" [];
	"abc" -> "types" [];
	"abc" -> "_weakrefset" [];
	"_weakrefset" -> "_weakref" [];
	"_weakrefset" -> "_weakref.ref" [];
	"_weakref" -> "_weakref.ref" [];
	"_weakref" -> "_weakref.ProxyType" [];
	"_weakref" -> "_weakref.CallableProxyType" [];
	"_weakref" -> "_weakref.getweakrefcount" [];
	"_weakref" -> "_weakref.getweakrefs" [];
	"_weakref" -> "_weakref.proxy" [];
	"_weakref" -> "_weakref.ReferenceType" [];
	"tempfile" -> "io" [];
	"tempfile" -> "os" [];
	"tempfile" -> "errno" [];
	"tempfile" -> "random" [];
	"tempfile" -> "cStringIO" [];
	"tempfile" -> "cStringIO.StringIO" [];
	"tempfile" -> "StringIO" [];
	"tempfile" -> "fcntl" [];
	"tempfile" -> "thread" [];
	"tempfile" -> "dummy_thread" [];
	"random" -> "__future__" [];
	"random" -> "warnings" [];
	"random" -> "types" [];
	"random" -> "math" [];
	"random" -> "math.pi" [];
	"random" -> "math.e" [];
	"random" -> "math.log" [];
	"random" -> "math.exp" [];
	"random" -> "math.ceil" [];
	"random" -> "math.acos" [];
	"random" -> "math.cos" [];
	"random" -> "math.sqrt" [];
	"random" -> "math.sin" [];
	"random" -> "os" [];
	"random" -> "os.urandom" [];
	"random" -> "binascii" [];
	"random" -> "binascii.hexlify" [];
	"random" -> "hashlib" [];
	"random" -> "_random" [];
	"random" -> "time" [];
	"hashlib" -> "_sha" [];
	"hashlib" -> "_md5" [];
	"hashlib" -> "_sha256" [];
	"hashlib" -> "_sha512" [];
	"hashlib" -> "_hashlib" [];
	"hashlib" -> "logging" [];
	"hashlib" -> "_hashlib.pbkdf2_hmac" [];
	"hashlib" -> "binascii" [];
	"hashlib" -> "struct" [];
	"hashlib" -> "hashlib.md5" [];
	"hashlib" -> "hashlib.sha1" [];
	"hashlib" -> "hashlib.sha256" [];
	"hashlib" -> "hashlib.sha512" [];
	"logging" -> "sys" [];
	"logging" -> "os" [];
	"logging" -> "time" [];
	"logging" -> "cStringIO" [];
	"logging" -> "traceback" [];
	"logging" -> "warnings" [];
	"logging" -> "weakref" [];
	"logging" -> "collections" [];
	"logging" -> "codecs" [];
	"logging" -> "thread" [];
	"logging" -> "threading" [];
	"logging" -> "atexit" [];
	"atexit" -> "sys" [];
	"atexit" -> "traceback" [];
	"weakref" -> "UserDict" [];
	"weakref" -> "_weakref" [];
	"weakref" -> "_weakref.ProxyType" [];
	"weakref" -> "_weakref.CallableProxyType" [];
	"weakref" -> "_weakref.getweakrefcount" [];
	"weakref" -> "_weakref.getweakrefs" [];
	"weakref" -> "_weakref.proxy" [];
	"weakref" -> "_weakref.ReferenceType" [];
	"weakref" -> "_weakref.ref" [];
	"weakref" -> "_weakrefset" [];
	"weakref" -> "exceptions" [];
	"weakref" -> "exceptions.ReferenceError" [];
	"weakref" -> "copy" [];
	"weakref" -> "copy.deepcopy" [];
	"copy" -> "types" [];
	"copy" -> "copy.deepcopy" [];
	"copy" -> "weakref" [];
	"copy" -> "copy_reg" [];
	"copy" -> "org" [];
	"copy" -> "org.PyStringMap" [];
	"copy" -> "sys" [];
	"copy" -> "repr" [];
	"repr" -> "__builtin__" [];
	"repr" -> "itertools" [];
	"repr" -> "itertools.islice" [];
	"__builtin__" -> "__builtin__.open" [];
	"org" -> "org.PyStringMap" [];
	"exceptions" -> "exceptions.ReferenceError" [];
	"_hashlib" -> "_hashlib.pbkdf2_hmac" [];
	"math" -> "math.pi" [];
	"math" -> "math.e" [];
	"math" -> "math.log" [];
	"math" -> "math.exp" [];
	"math" -> "math.ceil" [];
	"math" -> "math.acos" [];
	"math" -> "math.cos" [];
	"math" -> "math.sqrt" [];
	"math" -> "math.sin" [];
	"io" -> "_io" [];
	"io" -> "abc" [];
	"io" -> "_io.UnsupportedOperation" [];
	"io" -> "_io.TextIOWrapper" [];
	"io" -> "_io.BufferedRWPair" [];
	"io" -> "_io.StringIO" [];
	"io" -> "_io.BufferedRandom" [];
	"io" -> "_io.BufferedReader" [];
	"io" -> "_io.IncrementalNewlineDecoder" [];
	"io" -> "_io.BlockingIOError" [];
	"io" -> "_io.FileIO" [];
	"io" -> "_io.BufferedWriter" [];
	"io" -> "_io.open" [];
	"io" -> "_io.BytesIO" [];
	"io" -> "_io.DEFAULT_BUFFER_SIZE" [];
	"_io" -> "_io.UnsupportedOperation" [];
	"_io" -> "_io.TextIOWrapper" [];
	"_io" -> "_io.BufferedRWPair" [];
	"_io" -> "_io.StringIO" [];
	"_io" -> "_io.BufferedRandom" [];
	"_io" -> "_io.BufferedReader" [];
	"_io" -> "_io.IncrementalNewlineDecoder" [];
	"_io" -> "_io.BlockingIOError" [];
	"_io" -> "_io.FileIO" [];
	"_io" -> "_io.BufferedWriter" [];
	"_io" -> "_io.open" [];
	"_io" -> "_io.BytesIO" [];
	"_io" -> "_io.DEFAULT_BUFFER_SIZE" [];
	"pdb" -> "sys" [];
	"pdb" -> "linecache" [];
	"pdb" -> "cmd" [];
	"pdb" -> "bdb" [];
	"pdb" -> "repr" [];
	"pdb" -> "os" [];
	"pdb" -> "re" [];
	"pdb" -> "pprint" [];
	"pdb" -> "traceback" [];
	"pdb" -> "readline" [];
	"pdb" -> "shlex" [];
	"pdb" -> "pdb" [];
	"shlex" -> "os.path" [];
	"shlex" -> "sys" [];
	"shlex" -> "collections" [];
	"shlex" -> "collections.deque" [];
	"shlex" -> "cStringIO" [];
	"shlex" -> "cStringIO.StringIO" [];
	"shlex" -> "StringIO" [];
	"pprint" -> "sys" [];
	"pprint" -> "warnings" [];
	"pprint" -> "cStringIO" [];
	"pprint" -> "cStringIO.StringIO" [];
	"pprint" -> "StringIO" [];
	"pprint" -> "time" [];
	"bdb" -> "fnmatch" [];
	"bdb" -> "sys" [];
	"bdb" -> "os" [];
	"bdb" -> "types" [];
	"bdb" -> "linecache" [];
	"bdb" -> "repr" [];
	"fnmatch" -> "re" [];
	"fnmatch" -> "os" [];
	"fnmatch" -> "posixpath" [];
	"cmd" -> "string" [];
	"cmd" -> "sys" [];
	"cmd" -> "readline" [];
	"string" -> "re" [];
	"string" -> "strop" [];
	"string" -> "strop.uppercase" [];
	"string" -> "strop.lowercase" [];
	"string" -> "strop.maketrans" [];
	"string" -> "strop.whitespace" [];
	"strop" -> "strop.uppercase" [];
	"strop" -> "strop.lowercase" [];
	"strop" -> "strop.maketrans" [];
	"strop" -> "strop.whitespace" [];
	"difflib" -> "heapq" [];
	"difflib" -> "collections" [];
	"difflib" -> "collections.namedtuple" [];
	"difflib" -> "functools" [];
	"difflib" -> "re" [];
	"difflib" -> "doctest" [];
	"difflib" -> "difflib" [];
	"unittest.signals" -> "signal" [];
	"unittest.signals" -> "weakref" [];
	"unittest.signals" -> "functools" [];
	"unittest.main" -> "sys" [];
	"unittest.main" -> "os" [];
	"unittest.main" -> "types" [];
	"unittest.main" -> "getopt" [];
	"unittest.main" -> "optparse" [];
	"optparse" -> "sys" [];
	"optparse" -> "os" [];
	"optparse" -> "types" [];
	"optparse" -> "textwrap" [];
	"optparse" -> "gettext" [];
	"optparse" -> "__builtin__" [];
	"gettext" -> "locale" [];
	"gettext" -> "copy" [];
	"gettext" -> "os" [];
	"gettext" -> "re" [];
	"gettext" -> "struct" [];
	"gettext" -> "sys" [];
	"gettext" -> "errno" [];
	"gettext" -> "errno.ENOENT" [];
	"gettext" -> "cStringIO" [];
	"gettext" -> "cStringIO.StringIO" [];
	"gettext" -> "StringIO" [];
	"gettext" -> "token" [];
	"gettext" -> "tokenize" [];
	"gettext" -> "__builtin__" [];
	"tokenize" -> "itertools" [];
	"tokenize" -> "itertools.chain" [];
	"tokenize" -> "string" [];
	"tokenize" -> "re" [];
	"tokenize" -> "token" [];
	"tokenize" -> "sys" [];
	"token" -> "re" [];
	"token" -> "sys" [];
	"locale" -> "sys" [];
	"locale" -> "encodings" [];
	"locale" -> "re" [];
	"locale" -> "operator" [];
	"locale" -> "functools" [];
	"locale" -> "_locale" [];
	"locale" -> "os" [];
	"encodings" -> "codecs" [];
	"encodings" -> "__builtin__" [];
	"encodings.rot_13" -> "codecs" [];
	"encodings.rot_13" -> "sys" [];
	"encodings.mbcs" -> "codecs" [];
	"encodings.mbcs" -> "codecs.mbcs_decode" [];
	"encodings.mbcs" -> "codecs.mbcs_encode" [];
	"encodings.raw_unicode_escape" -> "codecs" [];
	"encodings.gb18030" -> "_codecs_cn" [];
	"encodings.gb18030" -> "codecs" [];
	"encodings.gb18030" -> "_multibytecodec" [];
	"encodings.shift_jisx0213" -> "_codecs_jp" [];
	"encodings.shift_jisx0213" -> "codecs" [];
	"encodings.shift_jisx0213" -> "_multibytecodec" [];
	"encodings.ascii" -> "codecs" [];
	"encodings.cp861" -> "codecs" [];
	"encodings.cp860" -> "codecs" [];
	"encodings.cp863" -> "codecs" [];
	"encodings.shift_jis" -> "_codecs_jp" [];
	"encodings.shift_jis" -> "codecs" [];
	"encodings.shift_jis" -> "_multibytecodec" [];
	"encodings.cp865" -> "codecs" [];
	"encodings.cp864" -> "codecs" [];
	"encodings.cp866" -> "codecs" [];
	"encodings.cp869" -> "codecs" [];
	"encodings.mac_latin2" -> "codecs" [];
	"encodings.hex_codec" -> "codecs" [];
	"encodings.hex_codec" -> "binascii" [];
	"encodings.idna" -> "stringprep" [];
	"encodings.idna" -> "re" [];
	"encodings.idna" -> "codecs" [];
	"encodings.idna" -> "unicodedata" [];
	"encodings.idna" -> "unicodedata.ucd_3_2_0" [];
	"unicodedata" -> "unicodedata.ucd_3_2_0" [];
	"stringprep" -> "unicodedata" [];
	"stringprep" -> "unicodedata.ucd_3_2_0" [];
	"encodings.cp949" -> "_codecs_kr" [];
	"encodings.cp949" -> "codecs" [];
	"encodings.cp949" -> "_multibytecodec" [];
	"encodings.quopri_codec" -> "codecs" [];
	"encodings.quopri_codec" -> "quopri" [];
	"encodings.quopri_codec" -> "cStringIO" [];
	"encodings.quopri_codec" -> "cStringIO.StringIO" [];
	"encodings.quopri_codec" -> "StringIO" [];
	"quopri" -> "binascii" [];
	"quopri" -> "binascii.a2b_qp" [];
	"quopri" -> "binascii.b2a_qp" [];
	"quopri" -> "cStringIO" [];
	"quopri" -> "cStringIO.StringIO" [];
	"quopri" -> "sys" [];
	"quopri" -> "getopt" [];
	"encodings.utf_32_be" -> "codecs" [];
	"encodings.string_escape" -> "codecs" [];
	"encodings.cp1250" -> "codecs" [];
	"encodings.cp1251" -> "codecs" [];
	"encodings.cp1252" -> "codecs" [];
	"encodings.cp1253" -> "codecs" [];
	"encodings.cp1254" -> "codecs" [];
	"encodings.cp1255" -> "codecs" [];
	"encodings.cp1256" -> "codecs" [];
	"encodings.cp1257" -> "codecs" [];
	"encodings.cp1258" -> "codecs" [];
	"encodings.euc_jp" -> "_codecs_jp" [];
	"encodings.euc_jp" -> "codecs" [];
	"encodings.euc_jp" -> "_multibytecodec" [];
	"encodings.hz" -> "_codecs_cn" [];
	"encodings.hz" -> "codecs" [];
	"encodings.hz" -> "_multibytecodec" [];
	"encodings.mac_cyrillic" -> "codecs" [];
	"encodings.iso2022_kr" -> "_codecs_iso2022" [];
	"encodings.iso2022_kr" -> "codecs" [];
	"encodings.iso2022_kr" -> "_multibytecodec" [];
	"encodings.unicode_internal" -> "codecs" [];
	"encodings.cp500" -> "codecs" [];
	"encodings.iso8859_10" -> "codecs" [];
	"encodings.iso8859_11" -> "codecs" [];
	"encodings.iso8859_13" -> "codecs" [];
	"encodings.iso8859_14" -> "codecs" [];
	"encodings.iso8859_15" -> "codecs" [];
	"encodings.iso8859_16" -> "codecs" [];
	"encodings.cp1006" -> "codecs" [];
	"encodings.hp_roman8" -> "codecs" [];
	"encodings.charmap" -> "codecs" [];
	"encodings.utf_32" -> "codecs" [];
	"encodings.utf_32" -> "sys" [];
	"encodings.latin_1" -> "codecs" [];
	"encodings.utf_16_be" -> "codecs" [];
	"encodings.cp737" -> "codecs" [];
	"encodings.utf_16" -> "codecs" [];
	"encodings.utf_16" -> "sys" [];
	"encodings.cp437" -> "codecs" [];
	"encodings.mac_roman" -> "codecs" [];
	"encodings.mac_centeuro" -> "codecs" [];
	"encodings.mac_croatian" -> "codecs" [];
	"encodings.punycode" -> "codecs" [];
	"encodings.unicode_escape" -> "codecs" [];
	"encodings.bz2_codec" -> "codecs" [];
	"encodings.bz2_codec" -> "bz2" [];
	"encodings.cp874" -> "codecs" [];
	"encodings.cp875" -> "codecs" [];
	"encodings.cp720" -> "codecs" [];
	"encodings.tis_620" -> "codecs" [];
	"encodings.zlib_codec" -> "codecs" [];
	"encodings.zlib_codec" -> "zlib" [];
	"encodings.iso2022_jp_2004" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_2004" -> "codecs" [];
	"encodings.iso2022_jp_2004" -> "_multibytecodec" [];
	"encodings.euc_jisx0213" -> "_codecs_jp" [];
	"encodings.euc_jisx0213" -> "codecs" [];
	"encodings.euc_jisx0213" -> "_multibytecodec" [];
	"encodings.ptcp154" -> "codecs" [];
	"encodings.uu_codec" -> "codecs" [];
	"encodings.uu_codec" -> "binascii" [];
	"encodings.uu_codec" -> "cStringIO" [];
	"encodings.uu_codec" -> "cStringIO.StringIO" [];
	"encodings.uu_codec" -> "binascii.b2a_uu" [];
	"encodings.uu_codec" -> "binascii.a2b_uu" [];
	"encodings.utf_16_le" -> "codecs" [];
	"encodings.iso2022_jp_2" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_2" -> "codecs" [];
	"encodings.iso2022_jp_2" -> "_multibytecodec" [];
	"encodings.iso2022_jp_3" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_3" -> "codecs" [];
	"encodings.iso2022_jp_3" -> "_multibytecodec" [];
	"encodings.iso2022_jp_1" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_1" -> "codecs" [];
	"encodings.iso2022_jp_1" -> "_multibytecodec" [];
	"encodings.undefined" -> "codecs" [];
	"encodings.cp1026" -> "codecs" [];
	"encodings.mac_farsi" -> "codecs" [];
	"encodings.mac_turkish" -> "codecs" [];
	"encodings.koi8_u" -> "codecs" [];
	"encodings.koi8_r" -> "codecs" [];
	"encodings.utf_8_sig" -> "codecs" [];
	"encodings.iso2022_jp" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp" -> "codecs" [];
	"encodings.iso2022_jp" -> "_multibytecodec" [];
	"encodings.palmos" -> "codecs" [];
	"encodings.mac_greek" -> "codecs" [];
	"encodings.shift_jis_2004" -> "_codecs_jp" [];
	"encodings.shift_jis_2004" -> "codecs" [];
	"encodings.shift_jis_2004" -> "_multibytecodec" [];
	"encodings.gbk" -> "_codecs_cn" [];
	"encodings.gbk" -> "codecs" [];
	"encodings.gbk" -> "_multibytecodec" [];
	"encodings.mac_iceland" -> "codecs" [];
	"encodings.cp858" -> "codecs" [];
	"encodings.cp850" -> "codecs" [];
	"encodings.cp852" -> "codecs" [];
	"encodings.cp855" -> "codecs" [];
	"encodings.cp856" -> "codecs" [];
	"encodings.cp857" -> "codecs" [];
	"encodings.iso8859_4" -> "codecs" [];
	"encodings.iso8859_5" -> "codecs" [];
	"encodings.iso8859_6" -> "codecs" [];
	"encodings.iso8859_7" -> "codecs" [];
	"encodings.iso8859_1" -> "codecs" [];
	"encodings.iso8859_2" -> "codecs" [];
	"encodings.iso8859_3" -> "codecs" [];
	"encodings.gb2312" -> "_codecs_cn" [];
	"encodings.gb2312" -> "codecs" [];
	"encodings.gb2312" -> "_multibytecodec" [];
	"encodings.iso8859_8" -> "codecs" [];
	"encodings.iso8859_9" -> "codecs" [];
	"encodings.cp862" -> "codecs" [];
	"encodings.big5hkscs" -> "_codecs_hk" [];
	"encodings.big5hkscs" -> "codecs" [];
	"encodings.big5hkscs" -> "_multibytecodec" [];
	"encodings.base64_codec" -> "codecs" [];
	"encodings.base64_codec" -> "base64" [];
	"base64" -> "re" [];
	"base64" -> "struct" [];
	"base64" -> "string" [];
	"base64" -> "binascii" [];
	"base64" -> "sys" [];
	"base64" -> "getopt" [];
	"encodings.cp037" -> "codecs" [];
	"encodings.utf_8" -> "codecs" [];
	"encodings.mac_arabic" -> "codecs" [];
	"encodings.euc_kr" -> "_codecs_kr" [];
	"encodings.euc_kr" -> "codecs" [];
	"encodings.euc_kr" -> "_multibytecodec" [];
	"encodings.utf_7" -> "codecs" [];
	"encodings.utf_32_le" -> "codecs" [];
	"encodings.euc_jis_2004" -> "_codecs_jp" [];
	"encodings.euc_jis_2004" -> "codecs" [];
	"encodings.euc_jis_2004" -> "_multibytecodec" [];
	"encodings.cp775" -> "codecs" [];
	"encodings.mac_romanian" -> "codecs" [];
	"encodings.cp1140" -> "codecs" [];
	"encodings.big5" -> "_codecs_tw" [];
	"encodings.big5" -> "codecs" [];
	"encodings.big5" -> "_multibytecodec" [];
	"encodings.cp424" -> "codecs" [];
	"encodings.iso2022_jp_ext" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_ext" -> "codecs" [];
	"encodings.iso2022_jp_ext" -> "_multibytecodec" [];
	"encodings.cp950" -> "_codecs_tw" [];
	"encodings.cp950" -> "codecs" [];
	"encodings.cp950" -> "_multibytecodec" [];
	"encodings.johab" -> "_codecs_kr" [];
	"encodings.johab" -> "codecs" [];
	"encodings.johab" -> "_multibytecodec" [];
	"encodings.cp932" -> "_codecs_jp" [];
	"encodings.cp932" -> "codecs" [];
	"encodings.cp932" -> "_multibytecodec" [];
	"textwrap" -> "string" [];
	"textwrap" -> "re" [];
	"getopt" -> "os" [];
	"getopt" -> "sys" [];
	"unittest.runner" -> "sys" [];
	"unittest.runner" -> "time" [];
	"unittest.loader" -> "os" [];
	"unittest.loader" -> "re" [];
	"unittest.loader" -> "sys" [];
	"unittest.loader" -> "traceback" [];
	"unittest.loader" -> "types" [];
	"unittest.loader" -> "functools" [];
	"unittest.loader" -> "fnmatch" [];
	"unittest.suite" -> "sys" [];
	"unittest.case" -> "collections" [];
	"unittest.case" -> "sys" [];
	"unittest.case" -> "functools" [];
	"unittest.case" -> "difflib" [];
	"unittest.case" -> "pprint" [];
	"unittest.case" -> "re" [];
	"unittest.case" -> "types" [];
	"unittest.case" -> "warnings" [];
	"unittest.result" -> "os" [];
	"unittest.result" -> "sys" [];
	"unittest.result" -> "traceback" [];
	"unittest.result" -> "StringIO" [];
	"unittest.result" -> "functools" [];
	"unittest.util" -> "collections" [];
	"unittest.util" -> "collections.namedtuple" [];
	"unittest.util" -> "collections.OrderedDict" [];
	"inspect" -> "sys" [];
	"inspect" -> "os" [];
	"inspect" -> "types" [];
	"inspect" -> "string" [];
	"inspect" -> "re" [];
	"inspect" -> "dis" [];
	"inspect" -> "imp" [];
	"inspect" -> "tokenize" [];
	"inspect" -> "linecache" [];
	"inspect" -> "operator" [];
	"inspect" -> "operator.attrgetter" [];
	"inspect" -> "collections" [];
	"inspect" -> "collections.namedtuple" [];
	"dis" -> "sys" [];
	"dis" -> "types" [];
	"dis" -> "opcode" [];
	"binascii" -> "binascii.hexlify" [];
	"binascii" -> "binascii.a2b_base64" [];
	"binascii" -> "binascii.b2a_base64" [];
	"binascii" -> "binascii.a2b_qp" [];
	"binascii" -> "binascii.b2a_qp" [];
	"binascii" -> "binascii.unhexlify" [];
	"binascii" -> "binascii.b2a_uu" [];
	"binascii" -> "binascii.a2b_uu" [];
	"'org.python'" -> "'org.python'.PyStringMap" [];
	"'org.python'" -> "'org.python'.imp" [];
	"struct" -> "_struct" [];
	"struct" -> "_struct._clearcache" [];
	"struct" -> "_struct.__doc__" [];
	"struct" -> "struct.calcsize" [];
	"_struct" -> "_struct._clearcache" [];
	"_struct" -> "_struct.__doc__" [];
	"fcntl" -> "fcntl.ioctl" [];
	"fcntl" -> "fcntl.I_PUSH" [];
	"select" -> "select.select" [];
	"_subprocess" -> "_subprocess.SW_HIDE" [];
	"_subprocess" -> "_subprocess.STARTF_USESTDHANDLES" [];
	"_subprocess" -> "_subprocess.STD_ERROR_HANDLE" [];
	"_subprocess" -> "_subprocess.CREATE_NEW_CONSOLE" [];
	"_subprocess" -> "_subprocess.STARTF_USESHOWWINDOW" [];
	"_subprocess" -> "_subprocess.STD_INPUT_HANDLE" [];
	"_subprocess" -> "_subprocess.CREATE_NEW_PROCESS_GROUP" [];
	"_subprocess" -> "_subprocess.STD_OUTPUT_HANDLE" [];
	"threading" -> "sys" [];
	"threading" -> "thread" [];
	"threading" -> "warnings" [];
	"threading" -> "collections" [];
	"threading" -> "collections.deque" [];
	"threading" -> "itertools" [];
	"threading" -> "itertools.count" [];
	"threading" -> "time" [];
	"threading" -> "time.sleep" [];
	"threading" -> "time.time" [];
	"threading" -> "traceback" [];
	"threading" -> "thread.stack_size" [];
	"threading" -> "thread._local" [];
	"threading" -> "threading.current_thread" [];
	"threading" -> "threading.RLock" [];
	"threading" -> "_threading_local" [];
	"threading" -> "random" [];
	"_threading_local" -> "threading" [];
	"_threading_local" -> "threading.current_thread" [];
	"_threading_local" -> "threading.RLock" [];
	"traceback" -> "linecache" [];
	"traceback" -> "sys" [];
	"traceback" -> "types" [];
	"riscosenviron" -> "riscosenviron._Environ" [];
	"UserDict" -> "warnings" [];
	"UserDict" -> "copy" [];
	"UserDict" -> "_abcoll" [];
	"os.path" -> "posixpath" [];
	"os.path" -> "os" [];
	"os.path" -> "posixpath.isdir" [];
	"riscos" -> "riscos._exit" [];
	"ce" -> "ce._exit" [];
	"_emx_link" -> "_emx_link.link" [];
	"os2emxpath" -> "os" [];
	"os2emxpath" -> "stat" [];
	"os2emxpath" -> "genericpath" [];
	"os2emxpath" -> "ntpath" [];
	"genericpath" -> "os" [];
	"genericpath" -> "stat" [];
	"os2" -> "os2._exit" [];
	"ntpath" -> "os" [];
	"ntpath" -> "sys" [];
	"ntpath" -> "stat" [];
	"ntpath" -> "genericpath" [];
	"ntpath" -> "warnings" [];
	"ntpath" -> "string" [];
	"ntpath" -> "nt" [];
	"ntpath" -> "nt._getfullpathname" [];
	"ntpath" -> "nt._isdir" [];
	"nt" -> "nt._exit" [];
	"nt" -> "nt._getfullpathname" [];
	"nt" -> "nt._isdir" [];
	"ssl" -> "textwrap" [];
	"ssl" -> "re" [];
	"ssl" -> "sys" [];
	"ssl" -> "os" [];
	"ssl" -> "collections" [];
	"ssl" -> "collections.namedtuple" [];
	"ssl" -> "contextlib" [];
	"ssl" -> "_ssl" [];
	"ssl" -> "_ssl.OPENSSL_VERSION" [];
	"ssl" -> "_ssl.OPENSSL_VERSION_INFO" [];
	"ssl" -> "_ssl.OPENSSL_VERSION_NUMBER" [];
	"ssl" -> "_ssl._SSLContext" [];
	"ssl" -> "_ssl.SSLZeroReturnError" [];
	"ssl" -> "_ssl.SSLSyscallError" [];
	"ssl" -> "_ssl.SSLWantWriteError" [];
	"ssl" -> "_ssl.SSLError" [];
	"ssl" -> "_ssl.SSLWantReadError" [];
	"ssl" -> "_ssl.SSLEOFError" [];
	"ssl" -> "_ssl.CERT_OPTIONAL" [];
	"ssl" -> "_ssl.CERT_NONE" [];
	"ssl" -> "_ssl.CERT_REQUIRED" [];
	"ssl" -> "_ssl.nid2obj" [];
	"ssl" -> "_ssl.txt2obj" [];
	"ssl" -> "_ssl.RAND_add" [];
	"ssl" -> "_ssl.RAND_status" [];
	"ssl" -> "_ssl.RAND_egd" [];
	"ssl" -> "_ssl.HAS_SNI" [];
	"ssl" -> "_ssl.HAS_NPN" [];
	"ssl" -> "_ssl.HAS_ALPN" [];
	"ssl" -> "_ssl.HAS_ECDH" [];
	"ssl" -> "_ssl._OPENSSL_API_VERSION" [];
	"ssl" -> "socket" [];
	"ssl" -> "socket._fileobject" [];
	"ssl" -> "socket._delegate_methods" [];
	"ssl" -> "socket.socket" [];
	"ssl" -> "socket.error" [];
	"ssl" -> "_ssl.enum_certificates" [];
	"ssl" -> "_ssl.enum_crls" [];
	"ssl" -> "socket.SOCK_STREAM" [];
	"ssl" -> "socket.create_connection" [];
	"ssl" -> "socket.AF_INET" [];
	"ssl" -> "socket.SOL_SOCKET" [];
	"ssl" -> "socket.SO_TYPE" [];
	"ssl" -> "base64" [];
	"ssl" -> "errno" [];
	"ssl" -> "warnings" [];
	"ssl" -> "time" [];
	"ssl" -> "time.strptime" [];
	"ssl" -> "calendar" [];
	"calendar" -> "sys" [];
	"calendar" -> "datetime" [];
	"calendar" -> "locale" [];
	"calendar" -> "optparse" [];
	"contextlib" -> "sys" [];
	"contextlib" -> "functools" [];
	"contextlib" -> "warnings" [];
	"types" -> "sys" [];
	"functools" -> "_functools" [];
	"functools" -> "_functools.reduce" [];
	"functools" -> "_functools.partial" [];
	"_functools" -> "_functools.reduce" [];
	"_functools" -> "_functools.partial" [];
	"cPickle" -> "copy_reg" [];
	"cPickle" -> "cStringIO" [];
	"cPickle" -> "cPickle.dumps" [];
	"cPickle" -> "cPickle.loads" [];
	"cStringIO" -> "copy_reg" [];
	"cStringIO" -> "cStringIO.StringIO" [];
	"datetime" -> "time" [];
	"datetime" -> "datetime.date" [];
	"datetime" -> "datetime.datetime" [];
	"time" -> "_strptime" [];
	"time" -> "time.sleep" [];
	"time" -> "time.time" [];
	"time" -> "time.strptime" [];
	"_strptime" -> "time" [];
	"_strptime" -> "locale" [];
	"_strptime" -> "calendar" [];
	"_strptime" -> "re" [];
	"_strptime" -> "datetime" [];
	"_strptime" -> "datetime.date" [];
	"_strptime" -> "thread" [];
	"_strptime" -> "thread.allocate_lock" [];
	"_strptime" -> "dummy_thread" [];
	"gc" -> "time" [];
	"posixpath" -> "os" [];
	"posixpath" -> "sys" [];
	"posixpath" -> "stat" [];
	"posixpath" -> "genericpath" [];
	"posixpath" -> "warnings" [];
	"posixpath" -> "pwd" [];
	"posixpath" -> "re" [];
	"pwd" -> "pwd.getpwnam" [];
	"_sre" -> "copy" [];
	"_sre" -> "string" [];
	"_sre" -> "sre" [];
	"_sre" -> "_sre.MAXREPEAT" [];
	"sre" -> "warnings" [];
	"sre" -> "re" [];
	"sre" -> "re.__all__" [];
	"sre" -> "re._compile" [];
	"posix" -> "resource" [];
	"posix" -> "posix._exit" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "Tkinter" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "tkMessageBox" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "ttk" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "tkSimpleDialog" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "spur" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "struct" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "threading" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "time" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "telnetlib" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "serial" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "codecs" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "encodings" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "_codecs" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "sys" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "__builtin__" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "/usr/local/lib/python2.7/dist-packages/PyInstaller-3.2-py2.7.egg/PyInstaller/loader/rthooks/pyi_rth_pkgres.py" [];
	"/home/chix/Reporsitory/iRobotControl/AdvancedDriveStream.py" -> "/usr/local/lib/python2.7/dist-packages/PyInstaller-3.2-py2.7.egg/PyInstaller/loader/rthooks/pyi_rth__tkinter.py" [];
	"/usr/local/lib/python2.7/dist-packages/PyInstaller-3.2-py2.7.egg/PyInstaller/loader/rthooks/pyi_rth__tkinter.py" -> "os" [];
	"/usr/local/lib/python2.7/dist-packages/PyInstaller-3.2-py2.7.egg/PyInstaller/loader/rthooks/pyi_rth__tkinter.py" -> "sys" [];
	"/usr/local/lib/python2.7/dist-packages/PyInstaller-3.2-py2.7.egg/PyInstaller/loader/rthooks/pyi_rth_pkgres.py" -> "pkg_resources" [];
	"/usr/local/lib/python2.7/dist-packages/PyInstaller-3.2-py2.7.egg/PyInstaller/loader/rthooks/pyi_rth_pkgres.py" -> "pyimod03_importers" [];
	"/usr/local/lib/python2.7/dist-packages/PyInstaller-3.2-py2.7.egg/PyInstaller/loader/rthooks/pyi_rth_pkgres.py" -> "pyimod03_importers.FrozenImporter" [];
	"pyimod03_importers" -> "pyimod03_importers.FrozenImporter" [];
	"pkg_resources" -> "__future__" [];
	"pkg_resources" -> "sys" [];
	"pkg_resources" -> "os" [];
	"pkg_resources" -> "io" [];
	"pkg_resources" -> "time" [];
	"pkg_resources" -> "re" [];
	"pkg_resources" -> "types" [];
	"pkg_resources" -> "zipfile" [];
	"pkg_resources" -> "zipimport" [];
	"pkg_resources" -> "warnings" [];
	"pkg_resources" -> "stat" [];
	"pkg_resources" -> "functools" [];
	"pkg_resources" -> "pkgutil" [];
	"pkg_resources" -> "operator" [];
	"pkg_resources" -> "platform" [];
	"pkg_resources" -> "collections" [];
	"pkg_resources" -> "plistlib" [];
	"pkg_resources" -> "tempfile" [];
	"pkg_resources" -> "textwrap" [];
	"pkg_resources" -> "_imp" [];
	"pkg_resources" -> "imp" [];
	"pkg_resources" -> "'pkg_resources.extern.six.moves'" [];
	"pkg_resources" -> "'pkg_resources.extern.six.moves'.filter" [];
	"pkg_resources" -> "'pkg_resources.extern.six.moves'.map" [];
	"pkg_resources" -> "'pkg_resources.extern.six.moves'.urllib" [];
	"pkg_resources" -> "os.utime" [];
	"pkg_resources" -> "os.rename" [];
	"pkg_resources" -> "os.unlink" [];
	"pkg_resources" -> "os.mkdir" [];
	"pkg_resources" -> "os.open" [];
	"pkg_resources" -> "os.path" [];
	"pkg_resources" -> "posixpath.isdir" [];
	"pkg_resources" -> "'importlib.machinery'" [];
	"pkg_resources" -> "sysconfig" [];
	"pkg_resources" -> "__main__" [];
	"pkg_resources" -> "__main__.__requires__" [];
	"pkg_resources" -> "linecache" [];
	"pkg_resources._vendor.packaging.version" -> "__future__" [];
	"pkg_resources._vendor.packaging.version" -> "collections" [];
	"pkg_resources._vendor.packaging.version" -> "itertools" [];
	"pkg_resources._vendor.packaging.version" -> "re" [];
	"pkg_resources._vendor.packaging.markers" -> "__future__" [];
	"pkg_resources._vendor.packaging.markers" -> "operator" [];
	"pkg_resources._vendor.packaging.markers" -> "os" [];
	"pkg_resources._vendor.packaging.markers" -> "platform" [];
	"pkg_resources._vendor.packaging.markers" -> "sys" [];
	"pkg_resources._vendor.packaging.markers" -> "'pkg_resources.extern.pyparsing'" [];
	"pkg_resources._vendor.packaging.markers" -> "'pkg_resources.extern.pyparsing'.ParseResults" [];
	"pkg_resources._vendor.packaging.markers" -> "'pkg_resources.extern.pyparsing'.stringStart" [];
	"pkg_resources._vendor.packaging.markers" -> "'pkg_resources.extern.pyparsing'.stringEnd" [];
	"pkg_resources._vendor.packaging.markers" -> "'pkg_resources.extern.pyparsing'.ParseException" [];
	"pkg_resources._vendor.packaging.markers" -> "'pkg_resources.extern.pyparsing'.Forward" [];
	"pkg_resources._vendor.packaging.markers" -> "'pkg_resources.extern.pyparsing'.Group" [];
	"pkg_resources._vendor.packaging.markers" -> "'pkg_resources.extern.pyparsing'.ZeroOrMore" [];
	"pkg_resources._vendor.packaging.markers" -> "'pkg_resources.extern.pyparsing'.QuotedString" [];
	"pkg_resources._vendor.packaging.markers" -> "'pkg_resources.extern.pyparsing'.Literal" [];
	"'pkg_resources.extern.pyparsing'" -> "'pkg_resources.extern.pyparsing'.stringStart" [];
	"'pkg_resources.extern.pyparsing'" -> "'pkg_resources.extern.pyparsing'.stringEnd" [];
	"'pkg_resources.extern.pyparsing'" -> "'pkg_resources.extern.pyparsing'.originalTextFor" [];
	"'pkg_resources.extern.pyparsing'" -> "'pkg_resources.extern.pyparsing'.ParseException" [];
	"'pkg_resources.extern.pyparsing'" -> "'pkg_resources.extern.pyparsing'.Regex" [];
	"'pkg_resources.extern.pyparsing'" -> "'pkg_resources.extern.pyparsing'.Word" [];
	"'pkg_resources.extern.pyparsing'" -> "'pkg_resources.extern.pyparsing'.ZeroOrMore" [];
	"'pkg_resources.extern.pyparsing'" -> "'pkg_resources.extern.pyparsing'.Combine" [];
	"'pkg_resources.extern.pyparsing'" -> "'pkg_resources.extern.pyparsing'.Optional" [];
	"'pkg_resources.extern.pyparsing'" -> "'pkg_resources.extern.pyparsing'.Literal" [];
	"'pkg_resources.extern.pyparsing'" -> "'pkg_resources.extern.pyparsing'.ParseResults" [];
	"'pkg_resources.extern.pyparsing'" -> "'pkg_resources.extern.pyparsing'.Forward" [];
	"'pkg_resources.extern.pyparsing'" -> "'pkg_resources.extern.pyparsing'.Group" [];
	"'pkg_resources.extern.pyparsing'" -> "'pkg_resources.extern.pyparsing'.QuotedString" [];
	"pkg_resources._vendor.packaging._structures" -> "__future__" [];
	"pkg_resources._vendor.appdirs" -> "sys" [];
	"pkg_resources._vendor.appdirs" -> "os" [];
	"pkg_resources._vendor.appdirs" -> "platform" [];
	"pkg_resources._vendor.appdirs" -> "_winreg" [];
	"pkg_resources._vendor.appdirs" -> "win32com.shell" [];
	"pkg_resources._vendor.appdirs" -> "win32com.shell.shellcon" [];
	"pkg_resources._vendor.appdirs" -> "win32com.shell.shell" [];
	"pkg_resources._vendor.appdirs" -> "win32api" [];
	"pkg_resources._vendor.appdirs" -> "ctypes" [];
	"pkg_resources._vendor.appdirs" -> "array" [];
	"pkg_resources._vendor.appdirs" -> "com" [];
	"pkg_resources._vendor.appdirs" -> "com.jna" [];
	"pkg_resources._vendor.appdirs" -> "'com.sun'" [];
	"pkg_resources._vendor.appdirs" -> "'com.sun'.win32" [];
	"'com.sun'" -> "'com.sun'.win32" [];
	"com" -> "com.jna" [];
	"ctypes" -> "os" [];
	"ctypes" -> "sys" [];
	"ctypes" -> "_ctypes" [];
	"ctypes" -> "_ctypes.Union" [];
	"ctypes" -> "_ctypes.Array" [];
	"ctypes" -> "_ctypes.Structure" [];
	"ctypes" -> "_ctypes._Pointer" [];
	"ctypes" -> "_ctypes.CFuncPtr" [];
	"ctypes" -> "_ctypes.__version__" [];
	"ctypes" -> "_ctypes.RTLD_GLOBAL" [];
	"ctypes" -> "_ctypes.RTLD_LOCAL" [];
	"ctypes" -> "_ctypes.ArgumentError" [];
	"ctypes" -> "struct" [];
	"ctypes" -> "struct.calcsize" [];
	"ctypes" -> "_ctypes.FormatError" [];
	"ctypes" -> "_ctypes.FUNCFLAG_CDECL" [];
	"ctypes" -> "_ctypes.FUNCFLAG_PYTHONAPI" [];
	"ctypes" -> "_ctypes.FUNCFLAG_USE_LASTERROR" [];
	"ctypes" -> "_ctypes.FUNCFLAG_USE_ERRNO" [];
	"ctypes" -> "_ctypes.LoadLibrary" [];
	"ctypes" -> "_ctypes.FUNCFLAG_STDCALL" [];
	"ctypes" -> "_ctypes.dlopen" [];
	"ctypes" -> "_ctypes.sizeof" [];
	"ctypes" -> "_ctypes.byref" [];
	"ctypes" -> "_ctypes.resize" [];
	"ctypes" -> "_ctypes.addressof" [];
	"ctypes" -> "_ctypes.alignment" [];
	"ctypes" -> "_ctypes.set_errno" [];
	"ctypes" -> "_ctypes.get_errno" [];
	"ctypes" -> "_ctypes._SimpleCData" [];
	"ctypes" -> "_ctypes.pointer" [];
	"ctypes" -> "_ctypes.POINTER" [];
	"ctypes" -> "_ctypes._pointer_type_cache" [];
	"ctypes" -> "_ctypes.set_conversion_mode" [];
	"ctypes" -> "_ctypes._check_HRESULT" [];
	"ctypes" -> "_ctypes.set_last_error" [];
	"ctypes" -> "_ctypes.get_last_error" [];
	"ctypes" -> "_ctypes._memmove_addr" [];
	"ctypes" -> "_ctypes._memset_addr" [];
	"ctypes" -> "_ctypes._cast_addr" [];
	"ctypes" -> "_ctypes._string_at_addr" [];
	"ctypes" -> "_ctypes._wstring_at_addr" [];
	"ctypes._endian" -> "sys" [];
	"_ctypes" -> "_ctypes.Union" [];
	"_ctypes" -> "_ctypes.Array" [];
	"_ctypes" -> "_ctypes.Structure" [];
	"_ctypes" -> "_ctypes._Pointer" [];
	"_ctypes" -> "_ctypes.CFuncPtr" [];
	"_ctypes" -> "_ctypes.__version__" [];
	"_ctypes" -> "_ctypes.RTLD_GLOBAL" [];
	"_ctypes" -> "_ctypes.RTLD_LOCAL" [];
	"_ctypes" -> "_ctypes.ArgumentError" [];
	"_ctypes" -> "_ctypes.FormatError" [];
	"_ctypes" -> "_ctypes.FUNCFLAG_CDECL" [];
	"_ctypes" -> "_ctypes.FUNCFLAG_PYTHONAPI" [];
	"_ctypes" -> "_ctypes.FUNCFLAG_USE_LASTERROR" [];
	"_ctypes" -> "_ctypes.FUNCFLAG_USE_ERRNO" [];
	"_ctypes" -> "_ctypes.LoadLibrary" [];
	"_ctypes" -> "_ctypes.FUNCFLAG_STDCALL" [];
	"_ctypes" -> "_ctypes.dlopen" [];
	"_ctypes" -> "_ctypes.sizeof" [];
	"_ctypes" -> "_ctypes.byref" [];
	"_ctypes" -> "_ctypes.resize" [];
	"_ctypes" -> "_ctypes.addressof" [];
	"_ctypes" -> "_ctypes.alignment" [];
	"_ctypes" -> "_ctypes.set_errno" [];
	"_ctypes" -> "_ctypes.get_errno" [];
	"_ctypes" -> "_ctypes._SimpleCData" [];
	"_ctypes" -> "_ctypes.pointer" [];
	"_ctypes" -> "_ctypes.POINTER" [];
	"_ctypes" -> "_ctypes._pointer_type_cache" [];
	"_ctypes" -> "_ctypes.set_conversion_mode" [];
	"_ctypes" -> "_ctypes._check_HRESULT" [];
	"_ctypes" -> "_ctypes.set_last_error" [];
	"_ctypes" -> "_ctypes.get_last_error" [];
	"_ctypes" -> "_ctypes._memmove_addr" [];
	"_ctypes" -> "_ctypes._memset_addr" [];
	"_ctypes" -> "_ctypes._cast_addr" [];
	"_ctypes" -> "_ctypes._string_at_addr" [];
	"_ctypes" -> "_ctypes._wstring_at_addr" [];
	"win32com.shell" -> "win32com.shell.shellcon" [];
	"win32com.shell" -> "win32com.shell.shell" [];
	"_winreg" -> "_winreg.CloseKey" [];
	"_winreg" -> "_winreg.QueryValueEx" [];
	"_winreg" -> "_winreg.HKEY_LOCAL_MACHINE" [];
	"_winreg" -> "_winreg.OpenKeyEx" [];
	"pkg_resources._vendor.packaging.__about__" -> "__future__" [];
	"pkg_resources._vendor.six" -> "__future__" [];
	"pkg_resources._vendor.six" -> "functools" [];
	"pkg_resources._vendor.six" -> "itertools" [];
	"pkg_resources._vendor.six" -> "operator" [];
	"pkg_resources._vendor.six" -> "sys" [];
	"pkg_resources._vendor.six" -> "types" [];
	"pkg_resources._vendor.six" -> "struct" [];
	"pkg_resources._vendor.six" -> "io" [];
	"pkg_resources._vendor.six" -> "StringIO" [];
	"pkg_resources._vendor.packaging.specifiers" -> "__future__" [];
	"pkg_resources._vendor.packaging.specifiers" -> "abc" [];
	"pkg_resources._vendor.packaging.specifiers" -> "functools" [];
	"pkg_resources._vendor.packaging.specifiers" -> "itertools" [];
	"pkg_resources._vendor.packaging.specifiers" -> "re" [];
	"pkg_resources._vendor.packaging.requirements" -> "__future__" [];
	"pkg_resources._vendor.packaging.requirements" -> "string" [];
	"pkg_resources._vendor.packaging.requirements" -> "re" [];
	"pkg_resources._vendor.packaging.requirements" -> "'pkg_resources.extern.pyparsing'" [];
	"pkg_resources._vendor.packaging.requirements" -> "'pkg_resources.extern.pyparsing'.stringStart" [];
	"pkg_resources._vendor.packaging.requirements" -> "'pkg_resources.extern.pyparsing'.stringEnd" [];
	"pkg_resources._vendor.packaging.requirements" -> "'pkg_resources.extern.pyparsing'.originalTextFor" [];
	"pkg_resources._vendor.packaging.requirements" -> "'pkg_resources.extern.pyparsing'.ParseException" [];
	"pkg_resources._vendor.packaging.requirements" -> "'pkg_resources.extern.pyparsing'.Regex" [];
	"pkg_resources._vendor.packaging.requirements" -> "'pkg_resources.extern.pyparsing'.Word" [];
	"pkg_resources._vendor.packaging.requirements" -> "'pkg_resources.extern.pyparsing'.ZeroOrMore" [];
	"pkg_resources._vendor.packaging.requirements" -> "'pkg_resources.extern.pyparsing'.Combine" [];
	"pkg_resources._vendor.packaging.requirements" -> "'pkg_resources.extern.pyparsing'.Optional" [];
	"pkg_resources._vendor.packaging.requirements" -> "'pkg_resources.extern.pyparsing'.Literal" [];
	"pkg_resources._vendor.packaging.requirements" -> "'pkg_resources.extern.six.moves'" [];
	"pkg_resources._vendor.packaging.requirements" -> "'pkg_resources.extern.six.moves'.parse" [];
	"pkg_resources._vendor.pyparsing" -> "string" [];
	"pkg_resources._vendor.pyparsing" -> "weakref" [];
	"pkg_resources._vendor.pyparsing" -> "copy" [];
	"pkg_resources._vendor.pyparsing" -> "sys" [];
	"pkg_resources._vendor.pyparsing" -> "warnings" [];
	"pkg_resources._vendor.pyparsing" -> "re" [];
	"pkg_resources._vendor.pyparsing" -> "sre_constants" [];
	"pkg_resources._vendor.pyparsing" -> "collections" [];
	"pkg_resources._vendor.pyparsing" -> "pprint" [];
	"pkg_resources._vendor.pyparsing" -> "traceback" [];
	"pkg_resources._vendor.pyparsing" -> "types" [];
	"pkg_resources._vendor.pyparsing" -> "datetime" [];
	"pkg_resources._vendor.pyparsing" -> "datetime.datetime" [];
	"pkg_resources._vendor.pyparsing" -> "_thread" [];
	"pkg_resources._vendor.pyparsing" -> "_thread.RLock" [];
	"pkg_resources._vendor.pyparsing" -> "threading" [];
	"pkg_resources._vendor.pyparsing" -> "threading.RLock" [];
	"pkg_resources._vendor.pyparsing" -> "collections.OrderedDict" [];
	"pkg_resources._vendor.pyparsing" -> "ordereddict" [];
	"pkg_resources._vendor.pyparsing" -> "ordereddict.OrderedDict" [];
	"pkg_resources._vendor.pyparsing" -> "__builtin__" [];
	"pkg_resources._vendor.pyparsing" -> "pdb" [];
	"pkg_resources._vendor.pyparsing" -> "uuid" [];
	"uuid" -> "os" [];
	"uuid" -> "socket" [];
	"uuid" -> "re" [];
	"uuid" -> "ctypes" [];
	"uuid" -> "win32wnet" [];
	"uuid" -> "netbios" [];
	"uuid" -> "sys" [];
	"uuid" -> "random" [];
	"uuid" -> "time" [];
	"uuid" -> "hashlib" [];
	"uuid" -> "hashlib.md5" [];
	"uuid" -> "hashlib.sha1" [];
	"ctypes.util" -> "sys" [];
	"ctypes.util" -> "os" [];
	"ctypes.util" -> "imp" [];
	"ctypes.util" -> "'ctypes.macholib'" [];
	"ctypes.util" -> "'ctypes.macholib'.dyld_find" [];
	"ctypes.util" -> "re" [];
	"ctypes.util" -> "tempfile" [];
	"ctypes.util" -> "errno" [];
	"ctypes.util" -> "struct" [];
	"'ctypes.macholib'" -> "'ctypes.macholib'.dyld_find" [];
	"ordereddict" -> "ordereddict.OrderedDict" [];
	"_thread" -> "_thread.RLock" [];
	"pkg_resources._vendor.packaging" -> "__future__" [];
	"pkg_resources._vendor.packaging._compat" -> "__future__" [];
	"pkg_resources._vendor.packaging._compat" -> "sys" [];
	"pkg_resources._vendor.packaging.utils" -> "__future__" [];
	"pkg_resources._vendor.packaging.utils" -> "re" [];
	"__main__" -> "__main__.__requires__" [];
	"distutils.util" -> "sys" [];
	"distutils.util" -> "os" [];
	"distutils.util" -> "string" [];
	"distutils.util" -> "re" [];
	"distutils.util" -> "_osx_support" [];
	"distutils.util" -> "pwd" [];
	"distutils.util" -> "tempfile" [];
	"distutils.util" -> "py_compile" [];
	"py_compile" -> "__builtin__" [];
	"py_compile" -> "imp" [];
	"py_compile" -> "marshal" [];
	"py_compile" -> "os" [];
	"py_compile" -> "sys" [];
	"py_compile" -> "traceback" [];
	"distutils.sysconfig" -> "os" [];
	"distutils.sysconfig" -> "re" [];
	"distutils.sysconfig" -> "string" [];
	"distutils.sysconfig" -> "sys" [];
	"distutils.sysconfig" -> "fnmatch" [];
	"distutils.sysconfig" -> "_osx_support" [];
	"distutils.sysconfig" -> "_sysconfigdata" [];
	"distutils.sysconfig" -> "_sysconfigdata.build_time_vars" [];
	"_sysconfigdata" -> "sys" [];
	"_sysconfigdata" -> "_sysconfigdata_d" [];
	"_sysconfigdata" -> "_sysconfigdata_nd" [];
	"_sysconfigdata" -> "_sysconfigdata.build_time_vars" [];
	"distutils.text_file" -> "sys" [];
	"_osx_support" -> "os" [];
	"_osx_support" -> "re" [];
	"_osx_support" -> "sys" [];
	"_osx_support" -> "contextlib" [];
	"_osx_support" -> "tempfile" [];
	"_osx_support" -> "distutils" [];
	"distutils.log" -> "sys" [];
	"distutils" -> "sys" [];
	"distutils.spawn" -> "sys" [];
	"distutils.spawn" -> "os" [];
	"distutils.spawn" -> "errno" [];
	"distutils.debug" -> "os" [];
	"distutils.dep_util" -> "os" [];
	"distutils.dep_util" -> "stat" [];
	"sysconfig" -> "sys" [];
	"sysconfig" -> "os" [];
	"sysconfig" -> "os.path" [];
	"sysconfig" -> "re" [];
	"sysconfig" -> "pprint" [];
	"sysconfig" -> "imp" [];
	"sysconfig" -> "_sysconfigdata" [];
	"sysconfig" -> "_sysconfigdata.build_time_vars" [];
	"sysconfig" -> "_osx_support" [];
	"'pkg_resources.extern.six.moves'" -> "'pkg_resources.extern.six.moves'.filter" [];
	"'pkg_resources.extern.six.moves'" -> "'pkg_resources.extern.six.moves'.map" [];
	"'pkg_resources.extern.six.moves'" -> "'pkg_resources.extern.six.moves'.urllib" [];
	"'pkg_resources.extern.six.moves'" -> "'pkg_resources.extern.six.moves'.parse" [];
	"pkg_resources.extern" -> "sys" [];
	"email.parser" -> "warnings" [];
	"email.parser" -> "cStringIO" [];
	"email.parser" -> "cStringIO.StringIO" [];
	"email" -> "sys" [];
	"email.message" -> "re" [];
	"email.message" -> "uu" [];
	"email.message" -> "binascii" [];
	"email.message" -> "warnings" [];
	"email.message" -> "cStringIO" [];
	"email.message" -> "cStringIO.StringIO" [];
	"email.iterators" -> "sys" [];
	"email.iterators" -> "cStringIO" [];
	"email.iterators" -> "cStringIO.StringIO" [];
	"email.generator" -> "re" [];
	"email.generator" -> "sys" [];
	"email.generator" -> "time" [];
	"email.generator" -> "random" [];
	"email.generator" -> "warnings" [];
	"email.generator" -> "cStringIO" [];
	"email.generator" -> "cStringIO.StringIO" [];
	"email.header" -> "re" [];
	"email.header" -> "binascii" [];
	"email.base64mime" -> "binascii" [];
	"email.base64mime" -> "binascii.a2b_base64" [];
	"email.base64mime" -> "binascii.b2a_base64" [];
	"email.quoprimime" -> "re" [];
	"email.quoprimime" -> "string" [];
	"email.utils" -> "os" [];
	"email.utils" -> "re" [];
	"email.utils" -> "time" [];
	"email.utils" -> "base64" [];
	"email.utils" -> "random" [];
	"email.utils" -> "socket" [];
	"email.utils" -> "urllib" [];
	"email.utils" -> "warnings" [];
	"email.utils" -> "quopri" [];
	"email.encoders" -> "base64" [];
	"email.encoders" -> "quopri" [];
	"email._parseaddr" -> "time" [];
	"email._parseaddr" -> "calendar" [];
	"urllib" -> "string" [];
	"urllib" -> "socket" [];
	"urllib" -> "os" [];
	"urllib" -> "time" [];
	"urllib" -> "sys" [];
	"urllib" -> "base64" [];
	"urllib" -> "re" [];
	"urllib" -> "urlparse" [];
	"urllib" -> "nturl2path" [];
	"urllib" -> "rourl2path" [];
	"urllib" -> "rourl2path.pathname2url" [];
	"urllib" -> "rourl2path.url2pathname" [];
	"urllib" -> "warnings" [];
	"urllib" -> "ssl" [];
	"urllib" -> "tempfile" [];
	"urllib" -> "httplib" [];
	"urllib" -> "mimetypes" [];
	"urllib" -> "mimetools" [];
	"urllib" -> "cStringIO" [];
	"urllib" -> "cStringIO.StringIO" [];
	"urllib" -> "StringIO" [];
	"urllib" -> "ftplib" [];
	"urllib" -> "getpass" [];
	"urllib" -> "_scproxy" [];
	"urllib" -> "_scproxy._get_proxies" [];
	"urllib" -> "_scproxy._get_proxy_settings" [];
	"urllib" -> "fnmatch" [];
	"urllib" -> "_winreg" [];
	"_scproxy" -> "_scproxy._get_proxies" [];
	"_scproxy" -> "_scproxy._get_proxy_settings" [];
	"getpass" -> "os" [];
	"getpass" -> "sys" [];
	"getpass" -> "warnings" [];
	"getpass" -> "msvcrt" [];
	"getpass" -> "pwd" [];
	"getpass" -> "termios" [];
	"getpass" -> "EasyDialogs" [];
	"getpass" -> "EasyDialogs.AskPassword" [];
	"EasyDialogs" -> "EasyDialogs.AskPassword" [];
	"ftplib" -> "os" [];
	"ftplib" -> "sys" [];
	"ftplib" -> "SOCKS" [];
	"ftplib" -> "socket" [];
	"ftplib" -> "ssl" [];
	"ftplib" -> "re" [];
	"mimetools" -> "os" [];
	"mimetools" -> "sys" [];
	"mimetools" -> "tempfile" [];
	"mimetools" -> "warnings" [];
	"mimetools" -> "rfc822" [];
	"mimetools" -> "thread" [];
	"mimetools" -> "dummy_thread" [];
	"mimetools" -> "time" [];
	"mimetools" -> "socket" [];
	"mimetools" -> "base64" [];
	"mimetools" -> "quopri" [];
	"mimetools" -> "uu" [];
	"rfc822" -> "time" [];
	"rfc822" -> "warnings" [];
	"rfc822" -> "sys" [];
	"rfc822" -> "os" [];
	"mimetypes" -> "os" [];
	"mimetypes" -> "sys" [];
	"mimetypes" -> "posixpath" [];
	"mimetypes" -> "urllib" [];
	"mimetypes" -> "_winreg" [];
	"mimetypes" -> "getopt" [];
	"httplib" -> "array" [];
	"httplib" -> "array.array" [];
	"httplib" -> "os" [];
	"httplib" -> "re" [];
	"httplib" -> "socket" [];
	"httplib" -> "sys" [];
	"httplib" -> "sys.py3kwarning" [];
	"httplib" -> "urlparse" [];
	"httplib" -> "warnings" [];
	"httplib" -> "mimetools" [];
	"httplib" -> "cStringIO" [];
	"httplib" -> "cStringIO.StringIO" [];
	"httplib" -> "StringIO" [];
	"httplib" -> "ssl" [];
	"httplib" -> "_ssl" [];
	"rourl2path" -> "rourl2path.pathname2url" [];
	"rourl2path" -> "rourl2path.url2pathname" [];
	"nturl2path" -> "string" [];
	"nturl2path" -> "urllib" [];
	"urlparse" -> "re" [];
	"urlparse" -> "collections" [];
	"urlparse" -> "collections.namedtuple" [];
	"email.charset" -> "codecs" [];
	"uu" -> "binascii" [];
	"uu" -> "os" [];
	"uu" -> "sys" [];
	"uu" -> "optparse" [];
	"email.feedparser" -> "re" [];
	"plistlib" -> "binascii" [];
	"plistlib" -> "datetime" [];
	"plistlib" -> "cStringIO" [];
	"plistlib" -> "cStringIO.StringIO" [];
	"plistlib" -> "re" [];
	"plistlib" -> "warnings" [];
	"plistlib" -> "Carbon" [];
	"plistlib" -> "Carbon.FSRef" [];
	"plistlib" -> "Carbon.FSGetResourceForkName" [];
	"plistlib" -> "'Carbon.Files'" [];
	"plistlib" -> "'Carbon.Files'.fsRdPerm" [];
	"plistlib" -> "Carbon.Res" [];
	"plistlib" -> "'Carbon.File'" [];
	"plistlib" -> "'Carbon.File'.FSRef" [];
	"plistlib" -> "'Carbon.File'.FSGetResourceForkName" [];
	"plistlib" -> "'Carbon.Files'.fsRdWrPerm" [];
	"plistlib" -> "xml.parsers.expat.ParserCreate" [];
	"xml.parsers.expat" -> "pyexpat" [];
	"xml.parsers.expat" -> "xml.parsers.expat.ParserCreate" [];
	"xml" -> "_xmlplus" [];
	"xml" -> "sys" [];
	"xml.sax.expatreader" -> "sys" [];
	"xml.sax.expatreader" -> "_weakref" [];
	"xml.sax.expatreader" -> "weakref" [];
	"xml.sax.saxutils" -> "os" [];
	"xml.sax.saxutils" -> "urlparse" [];
	"xml.sax.saxutils" -> "urllib" [];
	"xml.sax.saxutils" -> "types" [];
	"xml.sax.saxutils" -> "io" [];
	"xml.sax.saxutils" -> "sys" [];
	"xml.sax" -> "cStringIO" [];
	"xml.sax" -> "cStringIO.StringIO" [];
	"xml.sax" -> "StringIO" [];
	"xml.sax" -> "os" [];
	"xml.sax" -> "sys" [];
	"xml.sax" -> "'org.python'" [];
	"xml.sax" -> "'org.python'.imp" [];
	"xml.sax._exceptions" -> "sys" [];
	"xml.sax._exceptions" -> "'java.lang'" [];
	"xml.sax._exceptions" -> "'java.lang'.Exception" [];
	"'java.lang'" -> "'java.lang'.Exception" [];
	"'Carbon.File'" -> "'Carbon.File'.FSRef" [];
	"'Carbon.File'" -> "'Carbon.File'.FSGetResourceForkName" [];
	"'Carbon.Files'" -> "'Carbon.Files'.fsRdPerm" [];
	"'Carbon.Files'" -> "'Carbon.Files'.fsRdWrPerm" [];
	"Carbon" -> "Carbon.FSRef" [];
	"Carbon" -> "Carbon.FSGetResourceForkName" [];
	"Carbon" -> "Carbon.Res" [];
	"platform" -> "sys" [];
	"platform" -> "string" [];
	"platform" -> "os" [];
	"platform" -> "re" [];
	"platform" -> "tempfile" [];
	"platform" -> "win32pipe" [];
	"platform" -> "ctypes" [];
	"platform" -> "sys.getwindowsversion" [];
	"platform" -> "winreg" [];
	"platform" -> "winreg.CloseKey" [];
	"platform" -> "winreg.QueryValueEx" [];
	"platform" -> "winreg.HKEY_LOCAL_MACHINE" [];
	"platform" -> "winreg.OpenKeyEx" [];
	"platform" -> "_winreg" [];
	"platform" -> "_winreg.CloseKey" [];
	"platform" -> "_winreg.QueryValueEx" [];
	"platform" -> "_winreg.HKEY_LOCAL_MACHINE" [];
	"platform" -> "_winreg.OpenKeyEx" [];
	"platform" -> "gestalt" [];
	"platform" -> "gestalt.gestalt" [];
	"platform" -> "MacOS" [];
	"platform" -> "plistlib" [];
	"platform" -> "java" [];
	"platform" -> "java.System" [];
	"platform" -> "'java.lang'" [];
	"platform" -> "socket" [];
	"platform" -> "subprocess" [];
	"platform" -> "struct" [];
	"platform" -> "vms_lib" [];
	"java" -> "java.System" [];
	"gestalt" -> "gestalt.gestalt" [];
	"winreg" -> "winreg.CloseKey" [];
	"winreg" -> "winreg.QueryValueEx" [];
	"winreg" -> "winreg.HKEY_LOCAL_MACHINE" [];
	"winreg" -> "winreg.OpenKeyEx" [];
	"pkgutil" -> "os" [];
	"pkgutil" -> "sys" [];
	"pkgutil" -> "imp" [];
	"pkgutil" -> "os.path" [];
	"pkgutil" -> "types" [];
	"pkgutil" -> "marshal" [];
	"pkgutil" -> "inspect" [];
	"pkgutil" -> "zipimport" [];
	"pkgutil" -> "zipimport.zipimporter" [];
	"zipfile" -> "struct" [];
	"zipfile" -> "os" [];
	"zipfile" -> "time" [];
	"zipfile" -> "sys" [];
	"zipfile" -> "shutil" [];
	"zipfile" -> "binascii" [];
	"zipfile" -> "cStringIO" [];
	"zipfile" -> "stat" [];
	"zipfile" -> "io" [];
	"zipfile" -> "re" [];
	"zipfile" -> "string" [];
	"zipfile" -> "zlib" [];
	"zipfile" -> "warnings" [];
	"zipfile" -> "py_compile" [];
	"zipfile" -> "textwrap" [];
	"shutil" -> "os" [];
	"shutil" -> "sys" [];
	"shutil" -> "stat" [];
	"shutil" -> "os.path" [];
	"shutil" -> "fnmatch" [];
	"shutil" -> "collections" [];
	"shutil" -> "errno" [];
	"shutil" -> "pwd" [];
	"shutil" -> "pwd.getpwnam" [];
	"shutil" -> "grp" [];
	"shutil" -> "grp.getgrnam" [];
	"shutil" -> "tarfile" [];
	"shutil" -> "zipfile" [];
	"tarfile" -> "__builtin__" [];
	"tarfile" -> "__builtin__.open" [];
	"tarfile" -> "sys" [];
	"tarfile" -> "os" [];
	"tarfile" -> "shutil" [];
	"tarfile" -> "stat" [];
	"tarfile" -> "errno" [];
	"tarfile" -> "time" [];
	"tarfile" -> "struct" [];
	"tarfile" -> "copy" [];
	"tarfile" -> "re" [];
	"tarfile" -> "operator" [];
	"tarfile" -> "grp" [];
	"tarfile" -> "pwd" [];
	"tarfile" -> "zlib" [];
	"tarfile" -> "bz2" [];
	"tarfile" -> "warnings" [];
	"tarfile" -> "gzip" [];
	"tarfile" -> "cStringIO" [];
	"tarfile" -> "cStringIO.StringIO" [];
	"tarfile" -> "StringIO" [];
	"tarfile" -> "calendar" [];
	"gzip" -> "struct" [];
	"gzip" -> "sys" [];
	"gzip" -> "time" [];
	"gzip" -> "os" [];
	"gzip" -> "zlib" [];
	"gzip" -> "io" [];
	"gzip" -> "__builtin__" [];
	"gzip" -> "warnings" [];
	"gzip" -> "errno" [];
	"grp" -> "grp.getgrnam" [];
	"serial" -> "importlib" [];
	"serial" -> "sys" [];
	"serial" -> "os" [];
	"serial.serialposix" -> "errno" [];
	"serial.serialposix" -> "fcntl" [];
	"serial.serialposix" -> "os" [];
	"serial.serialposix" -> "select" [];
	"serial.serialposix" -> "struct" [];
	"serial.serialposix" -> "sys" [];
	"serial.serialposix" -> "termios" [];
	"serial.serialposix" -> "time" [];
	"serial.serialposix" -> "array" [];
	"serial.serialwin32" -> "ctypes" [];
	"serial.serialwin32" -> "time" [];
	"serial.serialwin32" -> "sys" [];
	"serial.win32" -> "ctypes" [];
	"serial.serialcli" -> "clr" [];
	"serial.serialcli" -> "System" [];
	"serial.serialcli" -> "'System.IO'" [];
	"serial.serialcli" -> "sys" [];
	"serial.serialutil" -> "io" [];
	"serial.serialutil" -> "time" [];
	"serial.serialutil" -> "array" [];
	"serial.serialutil" -> "sys" [];
	"importlib" -> "sys" [];
	"telnetlib" -> "errno" [];
	"telnetlib" -> "sys" [];
	"telnetlib" -> "socket" [];
	"telnetlib" -> "select" [];
	"telnetlib" -> "time" [];
	"telnetlib" -> "time.time" [];
	"telnetlib" -> "thread" [];
	"telnetlib" -> "re" [];
	"spur.ssh" -> "__future__" [];
	"spur.ssh" -> "subprocess" [];
	"spur.ssh" -> "os" [];
	"spur.ssh" -> "os.path" [];
	"spur.ssh" -> "shutil" [];
	"spur.ssh" -> "contextlib" [];
	"spur.ssh" -> "uuid" [];
	"spur.ssh" -> "socket" [];
	"spur.ssh" -> "traceback" [];
	"spur.ssh" -> "sys" [];
	"spur.ssh" -> "io" [];
	"spur.ssh" -> "paramiko" [];
	"spur.io" -> "__future__" [];
	"spur.io" -> "threading" [];
	"spur.io" -> "codecs" [];
	"spur.files" -> "os" [];
	"spur.tempdir" -> "contextlib" [];
	"spur.tempdir" -> "tempfile" [];
	"spur.tempdir" -> "shutil" [];
	"paramiko" -> "sys" [];
	"paramiko" -> "paramiko.sftp_server.SFTPServer" [];
	"paramiko.common" -> "logging" [];
	"paramiko.py3compat" -> "sys" [];
	"paramiko.py3compat" -> "base64" [];
	"paramiko.py3compat" -> "__builtin__" [];
	"paramiko.py3compat" -> "cStringIO" [];
	"paramiko.py3compat" -> "StringIO" [];
	"paramiko.py3compat" -> "collections" [];
	"paramiko.py3compat" -> "struct" [];
	"paramiko.py3compat" -> "builtins" [];
	"paramiko.py3compat" -> "io" [];
	"paramiko.proxy" -> "datetime" [];
	"paramiko.proxy" -> "datetime.datetime" [];
	"paramiko.proxy" -> "os" [];
	"paramiko.proxy" -> "shlex" [];
	"paramiko.proxy" -> "signal" [];
	"paramiko.proxy" -> "subprocess" [];
	"paramiko.proxy" -> "select" [];
	"paramiko.proxy" -> "select.select" [];
	"paramiko.proxy" -> "socket" [];
	"paramiko.proxy" -> "time" [];
	"paramiko.config" -> "fnmatch" [];
	"paramiko.config" -> "os" [];
	"paramiko.config" -> "re" [];
	"paramiko.config" -> "shlex" [];
	"paramiko.config" -> "socket" [];
	"paramiko.hostkeys" -> "binascii" [];
	"paramiko.hostkeys" -> "os" [];
	"paramiko.hostkeys" -> "hashlib" [];
	"paramiko.hostkeys" -> "hashlib.sha1" [];
	"paramiko.hostkeys" -> "hmac" [];
	"paramiko.hostkeys" -> "collections" [];
	"paramiko.hostkeys" -> "collections.MutableMapping" [];
	"paramiko.hostkeys" -> "UserDict" [];
	"paramiko.hostkeys" -> "paramiko.util.get_logger" [];
	"paramiko.hostkeys" -> "paramiko.util.constant_time_bytes_eq" [];
	"hmac" -> "warnings" [];
	"hmac" -> "operator" [];
	"hmac" -> "operator._compare_digest" [];
	"hmac" -> "hashlib" [];
	"paramiko.pkey" -> "base64" [];
	"paramiko.pkey" -> "binascii" [];
	"paramiko.pkey" -> "binascii.unhexlify" [];
	"paramiko.pkey" -> "os" [];
	"paramiko.pkey" -> "hashlib" [];
	"paramiko.pkey" -> "hashlib.md5" [];
	"cryptography.hazmat.primitives.ciphers.modes" -> "__future__" [];
	"cryptography.hazmat.primitives.ciphers.modes" -> "abc" [];
	"cryptography.hazmat.primitives.ciphers.modes" -> "six" [];
	"cryptography.hazmat.primitives.ciphers.modes" -> "cryptography" [];
	"cryptography.utils" -> "__future__" [];
	"cryptography.utils" -> "abc" [];
	"cryptography.utils" -> "binascii" [];
	"cryptography.utils" -> "inspect" [];
	"cryptography.utils" -> "struct" [];
	"cryptography.utils" -> "sys" [];
	"cryptography.utils" -> "warnings" [];
	"cryptography" -> "__future__" [];
	"cryptography" -> "sys" [];
	"cryptography" -> "warnings" [];
	"cryptography" -> "_cffi_backend" [];
	"cryptography.hazmat.bindings.openssl._conditional" -> "__future__" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "__future__" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "collections" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "os" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "threading" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "types" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "warnings" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "cryptography.hazmat.bindings._openssl.lib" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "cryptography.hazmat.bindings._openssl.ffi" [];
	"cryptography.hazmat.bindings._openssl" -> "cryptography.hazmat.bindings._openssl.lib" [];
	"cryptography.hazmat.bindings._openssl" -> "cryptography.hazmat.bindings._openssl.ffi" [];
	"cryptography.hazmat.bindings" -> "__future__" [];
	"cryptography.hazmat" -> "__future__" [];
	"cryptography.exceptions" -> "__future__" [];
	"cryptography.exceptions" -> "enum" [];
	"enum" -> "sys" [];
	"enum" -> "collections" [];
	"enum" -> "collections.OrderedDict" [];
	"cryptography.hazmat.bindings.openssl" -> "__future__" [];
	"cryptography.__about__" -> "__future__" [];
	"six" -> "__future__" [];
	"six" -> "functools" [];
	"six" -> "itertools" [];
	"six" -> "operator" [];
	"six" -> "sys" [];
	"six" -> "types" [];
	"six" -> "struct" [];
	"six" -> "io" [];
	"six" -> "StringIO" [];
	"cryptography.hazmat.primitives.ciphers.algorithms" -> "__future__" [];
	"cryptography.hazmat.primitives.ciphers.algorithms" -> "cryptography" [];
	"cryptography.hazmat.primitives.ciphers" -> "__future__" [];
	"cryptography.hazmat.primitives.ciphers.base" -> "__future__" [];
	"cryptography.hazmat.primitives.ciphers.base" -> "abc" [];
	"cryptography.hazmat.primitives.ciphers.base" -> "six" [];
	"cryptography.hazmat.primitives.ciphers.base" -> "cryptography" [];
	"cryptography.hazmat.backends.interfaces" -> "__future__" [];
	"cryptography.hazmat.backends.interfaces" -> "abc" [];
	"cryptography.hazmat.backends.interfaces" -> "six" [];
	"cryptography.hazmat.primitives.serialization" -> "__future__" [];
	"cryptography.hazmat.primitives.serialization" -> "abc" [];
	"cryptography.hazmat.primitives.serialization" -> "base64" [];
	"cryptography.hazmat.primitives.serialization" -> "struct" [];
	"cryptography.hazmat.primitives.serialization" -> "enum" [];
	"cryptography.hazmat.primitives.serialization" -> "six" [];
	"cryptography.hazmat.primitives.serialization" -> "cryptography" [];
	"cryptography.hazmat.primitives.asymmetric.dsa" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.dsa" -> "abc" [];
	"cryptography.hazmat.primitives.asymmetric.dsa" -> "six" [];
	"cryptography.hazmat.primitives.asymmetric.dsa" -> "cryptography" [];
	"cryptography.hazmat.primitives.asymmetric.ec" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.ec" -> "abc" [];
	"cryptography.hazmat.primitives.asymmetric.ec" -> "six" [];
	"cryptography.hazmat.primitives.asymmetric.ec" -> "cryptography" [];
	"cryptography.hazmat.primitives.asymmetric.rsa" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.rsa" -> "abc" [];
	"cryptography.hazmat.primitives.asymmetric.rsa" -> "fractions" [];
	"cryptography.hazmat.primitives.asymmetric.rsa" -> "six" [];
	"cryptography.hazmat.primitives.asymmetric.rsa" -> "cryptography" [];
	"fractions" -> "__future__" [];
	"fractions" -> "decimal" [];
	"fractions" -> "math" [];
	"fractions" -> "numbers" [];
	"fractions" -> "operator" [];
	"fractions" -> "re" [];
	"numbers" -> "__future__" [];
	"numbers" -> "abc" [];
	"decimal" -> "math" [];
	"decimal" -> "numbers" [];
	"decimal" -> "collections" [];
	"decimal" -> "collections.namedtuple" [];
	"decimal" -> "threading" [];
	"decimal" -> "sys" [];
	"decimal" -> "re" [];
	"decimal" -> "locale" [];
	"decimal" -> "itertools" [];
	"decimal" -> "itertools.repeat" [];
	"decimal" -> "itertools.chain" [];
	"decimal" -> "doctest" [];
	"cryptography.hazmat.primitives.asymmetric" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric" -> "abc" [];
	"cryptography.hazmat.primitives.asymmetric" -> "six" [];
	"cryptography.hazmat.primitives.asymmetric.padding" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.padding" -> "abc" [];
	"cryptography.hazmat.primitives.asymmetric.padding" -> "math" [];
	"cryptography.hazmat.primitives.asymmetric.padding" -> "six" [];
	"cryptography.hazmat.primitives.asymmetric.padding" -> "cryptography" [];
	"cryptography.hazmat.primitives.hashes" -> "__future__" [];
	"cryptography.hazmat.primitives.hashes" -> "abc" [];
	"cryptography.hazmat.primitives.hashes" -> "six" [];
	"cryptography.hazmat.primitives.hashes" -> "cryptography" [];
	"cryptography.hazmat.primitives" -> "__future__" [];
	"cryptography.hazmat.backends" -> "__future__" [];
	"cryptography.hazmat.backends" -> "pkg_resources" [];
	"cryptography.hazmat.backends.multibackend" -> "__future__" [];
	"cryptography.hazmat.backends.multibackend" -> "cryptography" [];
	"paramiko.agent" -> "os" [];
	"paramiko.agent" -> "socket" [];
	"paramiko.agent" -> "struct" [];
	"paramiko.agent" -> "sys" [];
	"paramiko.agent" -> "threading" [];
	"paramiko.agent" -> "time" [];
	"paramiko.agent" -> "tempfile" [];
	"paramiko.agent" -> "stat" [];
	"paramiko.agent" -> "select" [];
	"paramiko.agent" -> "select.select" [];
	"paramiko.agent" -> "fcntl" [];
	"paramiko.win_pageant" -> "array" [];
	"paramiko.win_pageant" -> "platform" [];
	"paramiko.win_pageant" -> "struct" [];
	"paramiko.win_pageant" -> "_thread" [];
	"paramiko.win_pageant" -> "thread" [];
	"paramiko.packet" -> "errno" [];
	"paramiko.packet" -> "os" [];
	"paramiko.packet" -> "socket" [];
	"paramiko.packet" -> "struct" [];
	"paramiko.packet" -> "threading" [];
	"paramiko.packet" -> "time" [];
	"paramiko.packet" -> "hmac" [];
	"paramiko.message" -> "struct" [];
	"paramiko.sftp_file" -> "__future__" [];
	"paramiko.sftp_file" -> "binascii" [];
	"paramiko.sftp_file" -> "binascii.hexlify" [];
	"paramiko.sftp_file" -> "collections" [];
	"paramiko.sftp_file" -> "collections.deque" [];
	"paramiko.sftp_file" -> "socket" [];
	"paramiko.sftp_file" -> "threading" [];
	"paramiko.sftp_file" -> "time" [];
	"paramiko.sftp_si" -> "os" [];
	"paramiko.sftp_si" -> "sys" [];
	"paramiko.sftp_handle" -> "os" [];
	"paramiko.sftp_handle" -> "paramiko.sftp_server.SFTPServer" [];
	"paramiko.sftp_attr" -> "stat" [];
	"paramiko.sftp_attr" -> "time" [];
	"paramiko.sftp_server" -> "os" [];
	"paramiko.sftp_server" -> "errno" [];
	"paramiko.sftp_server" -> "sys" [];
	"paramiko.sftp_server" -> "hashlib" [];
	"paramiko.sftp_server" -> "hashlib.sha1" [];
	"paramiko.sftp_server" -> "hashlib.md5" [];
	"paramiko.sftp_server" -> "paramiko.sftp_server.SFTPServer" [];
	"paramiko.sftp_client" -> "binascii" [];
	"paramiko.sftp_client" -> "binascii.hexlify" [];
	"paramiko.sftp_client" -> "errno" [];
	"paramiko.sftp_client" -> "os" [];
	"paramiko.sftp_client" -> "stat" [];
	"paramiko.sftp_client" -> "threading" [];
	"paramiko.sftp_client" -> "time" [];
	"paramiko.sftp_client" -> "weakref" [];
	"paramiko.sftp" -> "select" [];
	"paramiko.sftp" -> "socket" [];
	"paramiko.sftp" -> "struct" [];
	"paramiko.ecdsakey" -> "paramiko.util.deflate_long" [];
	"cryptography.hazmat.primitives.asymmetric.utils" -> "__future__" [];
	"cryptography.hazmat.primitives.asymmetric.utils" -> "warnings" [];
	"cryptography.hazmat.primitives.asymmetric.utils" -> "six" [];
	"cryptography.hazmat.primitives.asymmetric.utils" -> "cryptography" [];
	"pyasn1.type.namedtype" -> "sys" [];
	"pyasn1.type.namedtype" -> "pyasn1" [];
	"pyasn1" -> "sys" [];
	"pyasn1.debug" -> "time" [];
	"pyasn1.debug" -> "logging" [];
	"pyasn1.compat.octets" -> "sys" [];
	"pyasn1.compat.octets" -> "sys.version_info" [];
	"pyasn1.type.tagmap" -> "pyasn1" [];
	"pyasn1.type.univ" -> "operator" [];
	"pyasn1.type.univ" -> "sys" [];
	"pyasn1.type.univ" -> "math" [];
	"pyasn1.type.univ" -> "pyasn1" [];
	"pyasn1.codec.ber.decoder" -> "pyasn1" [];
	"pyasn1.codec.ber.encoder" -> "pyasn1" [];
	"pyasn1.type.namedval" -> "pyasn1" [];
	"pyasn1.type.base" -> "sys" [];
	"pyasn1.type.base" -> "pyasn1" [];
	"pyasn1.type.tag" -> "operator" [];
	"pyasn1.type.tag" -> "operator.getitem" [];
	"pyasn1.type.tag" -> "pyasn1" [];
	"pyasn1.type.constraint" -> "sys" [];
	"pyasn1.codec.cer.decoder" -> "pyasn1" [];
	"pyasn1.codec.cer.encoder" -> "pyasn1" [];
	"pyasn1.codec.der.encoder" -> "pyasn1" [];
	"paramiko.server" -> "threading" [];
	"paramiko.ssh_exception" -> "socket" [];
	"paramiko.channel" -> "binascii" [];
	"paramiko.channel" -> "os" [];
	"paramiko.channel" -> "socket" [];
	"paramiko.channel" -> "time" [];
	"paramiko.channel" -> "threading" [];
	"paramiko.channel" -> "functools" [];
	"paramiko.buffered_pipe" -> "array" [];
	"paramiko.buffered_pipe" -> "threading" [];
	"paramiko.buffered_pipe" -> "time" [];
	"paramiko.ssh_gss" -> "struct" [];
	"paramiko.ssh_gss" -> "os" [];
	"paramiko.ssh_gss" -> "sys" [];
	"paramiko.ssh_gss" -> "gssapi" [];
	"paramiko.ssh_gss" -> "sspicon" [];
	"paramiko.ssh_gss" -> "sspi" [];
	"paramiko.auth_handler" -> "weakref" [];
	"paramiko.client" -> "binascii" [];
	"paramiko.client" -> "binascii.hexlify" [];
	"paramiko.client" -> "getpass" [];
	"paramiko.client" -> "os" [];
	"paramiko.client" -> "socket" [];
	"paramiko.client" -> "warnings" [];
	"paramiko.client" -> "errno" [];
	"paramiko.client" -> "errno.ECONNREFUSED" [];
	"paramiko.client" -> "errno.EHOSTUNREACH" [];
	"paramiko.resource" -> "weakref" [];
	"paramiko._winapi" -> "sys" [];
	"paramiko.transport" -> "__future__" [];
	"paramiko.transport" -> "os" [];
	"paramiko.transport" -> "socket" [];
	"paramiko.transport" -> "sys" [];
	"paramiko.transport" -> "threading" [];
	"paramiko.transport" -> "time" [];
	"paramiko.transport" -> "weakref" [];
	"paramiko.transport" -> "hashlib" [];
	"paramiko.transport" -> "hashlib.sha256" [];
	"paramiko.transport" -> "hashlib.sha1" [];
	"paramiko.transport" -> "hashlib.sha512" [];
	"paramiko.transport" -> "hashlib.md5" [];
	"paramiko.transport" -> "atexit" [];
	"paramiko.primes" -> "os" [];
	"paramiko.kex_gss" -> "os" [];
	"paramiko.kex_gss" -> "hashlib" [];
	"paramiko.kex_gss" -> "hashlib.sha1" [];
	"paramiko.kex_group14" -> "hashlib" [];
	"paramiko.kex_group14" -> "hashlib.sha1" [];
	"paramiko.kex_group1" -> "os" [];
	"paramiko.kex_group1" -> "hashlib" [];
	"paramiko.kex_group1" -> "hashlib.sha1" [];
	"paramiko.kex_gex" -> "os" [];
	"paramiko.kex_gex" -> "hashlib" [];
	"paramiko.kex_gex" -> "hashlib.sha256" [];
	"paramiko.kex_gex" -> "hashlib.sha1" [];
	"paramiko.compress" -> "zlib" [];
	"paramiko.pipe" -> "sys" [];
	"paramiko.pipe" -> "os" [];
	"paramiko.pipe" -> "socket" [];
	"paramiko.util" -> "__future__" [];
	"paramiko.util" -> "errno" [];
	"paramiko.util" -> "sys" [];
	"paramiko.util" -> "struct" [];
	"paramiko.util" -> "traceback" [];
	"paramiko.util" -> "threading" [];
	"paramiko.util" -> "logging" [];
	"paramiko.util" -> "paramiko.util.get_logger" [];
	"paramiko.util" -> "paramiko.util.constant_time_bytes_eq" [];
	"paramiko.util" -> "paramiko.util.deflate_long" [];
	"spur.local" -> "__future__" [];
	"spur.local" -> "os" [];
	"spur.local" -> "sys" [];
	"spur.local" -> "subprocess" [];
	"spur.local" -> "shutil" [];
	"spur.local" -> "io" [];
	"spur.local" -> "threading" [];
	"spur.local" -> "errno" [];
	"spur.local" -> "pty" [];
	"pty" -> "select" [];
	"pty" -> "select.select" [];
	"pty" -> "os" [];
	"pty" -> "tty" [];
	"pty" -> "sgi" [];
	"pty" -> "fcntl" [];
	"pty" -> "fcntl.ioctl" [];
	"pty" -> "fcntl.I_PUSH" [];
	"tty" -> "termios" [];
	"spur.results" -> "__future__" [];
	"spur.results" -> "sys" [];
	"tkSimpleDialog" -> "Tkinter" [];
	"tkSimpleDialog" -> "tkMessageBox" [];
	"ttk" -> "Tkinter" [];
	"ttk" -> "os" [];
	"tkMessageBox" -> "tkCommonDialog" [];
	"tkCommonDialog" -> "Tkinter" [];
	"Tkinter" -> "sys" [];
	"Tkinter" -> "FixTk" [];
	"Tkinter" -> "_tkinter" [];
	"Tkinter" -> "types" [];
	"Tkinter" -> "Tkconstants" [];
	"Tkinter" -> "re" [];
	"Tkinter" -> "warnings" [];
	"Tkinter" -> "os" [];
	"Tkinter" -> "traceback" [];
	"FixTk" -> "sys" [];
	"FixTk" -> "os" [];
	"FixTk" -> "ctypes" [];
	"FixTk" -> "_tkinter" [];
	"codecs" -> "__builtin__" [];
	"codecs" -> "sys" [];
	"codecs" -> "_codecs" [];
	"codecs" -> "encodings" [];
	"codecs" -> "codecs.mbcs_decode" [];
	"codecs" -> "codecs.mbcs_encode" [];
	"pkg_resources" -> "email" [];
	"pkg_resources" -> "distutils" [];
	"urllib" -> "email" [];
	"xml.sax.expatreader" -> "xml" [];
	"shutil" -> "distutils" [];
	"cryptography.hazmat.bindings.openssl.binding" -> "cryptography" [];
	"paramiko.win_pageant" -> "ctypes" [];
	"paramiko.ecdsakey" -> "cryptography" [];
	"cryptography.hazmat.primitives.asymmetric.utils" -> "pyasn1" [];
	"pyasn1.codec.ber.eoo" -> "pyasn1" [];
	"pyasn1.type.error" -> "pyasn1" [];
	"paramiko.dsskey" -> "cryptography" [];
	"paramiko.rsakey" -> "cryptography" [];
	"paramiko._winapi" -> "ctypes" [];
	"plistlib" -> "xml" [];
	"paramiko.pkey" -> "cryptography" [];
	"pyasn1.codec.der.decoder" -> "pyasn1" [];
	"paramiko.ssh_gss" -> "pyasn1" [];
	"paramiko.transport" -> "cryptography" [];
}
